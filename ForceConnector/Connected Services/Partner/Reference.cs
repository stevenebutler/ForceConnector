// ------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:4.0.30319.42000
// 
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;

namespace ForceConnector.Partner
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class LoginFault : ApiFault
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlInclude(typeof(UnexpectedErrorFault))]
    [System.Xml.Serialization.XmlInclude(typeof(InvalidIdFault))]
    [System.Xml.Serialization.XmlInclude(typeof(InvalidOldPasswordFault))]
    [System.Xml.Serialization.XmlInclude(typeof(InvalidNewPasswordFault))]
    [System.Xml.Serialization.XmlInclude(typeof(InvalidQueryLocatorFault))]
    [System.Xml.Serialization.XmlInclude(typeof(LoginFault))]
    [System.Xml.Serialization.XmlInclude(typeof(ApiQueryFault))]
    [System.Xml.Serialization.XmlInclude(typeof(MalformedSearchFault))]
    [System.Xml.Serialization.XmlInclude(typeof(MalformedQueryFault))]
    [System.Xml.Serialization.XmlInclude(typeof(InvalidSObjectFault))]
    [System.Xml.Serialization.XmlInclude(typeof(InvalidFieldFault))]
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class ApiFault : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ExceptionCode exceptionCodeField;
        private string exceptionMessageField;
        private ExtendedErrorDetails[] extendedErrorDetailsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public ExceptionCode exceptionCode
        {
            get
            {
                return exceptionCodeField;
            }

            set
            {
                exceptionCodeField = value;
                RaisePropertyChanged("exceptionCode");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string exceptionMessage
        {
            get
            {
                return exceptionMessageField;
            }

            set
            {
                exceptionMessageField = value;
                RaisePropertyChanged("exceptionMessage");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("extendedErrorDetails", IsNullable = true, Order = 2)]
        public ExtendedErrorDetails[] extendedErrorDetails
        {
            get
            {
                return extendedErrorDetailsField;
            }

            set
            {
                extendedErrorDetailsField = value;
                RaisePropertyChanged("extendedErrorDetails");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public enum ExceptionCode
    {

        /// <remarks/>
        ADAPTER_ERROR,

        /// <remarks/>
        ADAPTER_VALIDATION_EXCEPTION,

        /// <remarks/>
        APEX_REST_SERVICES_DISABLED,

        /// <remarks/>
        APEX_TRIGGER_COUPLING_LIMIT,

        /// <remarks/>
        API_CURRENTLY_DISABLED,

        /// <remarks/>
        API_DISABLED_FOR_ORG,

        /// <remarks/>
        ARGUMENT_OBJECT_PARSE_ERROR,

        /// <remarks/>
        ASYNC_OPERATION_LOCATOR,

        /// <remarks/>
        ASYNC_QUERY_UNSUPPORTED_QUERY,

        /// <remarks/>
        BATCH_PROCESSING_HALTED,

        /// <remarks/>
        BIG_OBJECT_UNSUPPORTED_OPERATION,

        /// <remarks/>
        CANNOT_DELETE_ENTITY,

        /// <remarks/>
        CANNOT_DELETE_OWNER,

        /// <remarks/>
        CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY,

        /// <remarks/>
        CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY,

        /// <remarks/>
        CATEGORY_NOT_FOUND,

        /// <remarks/>
        CIRCULAR_OBJECT_GRAPH,

        /// <remarks/>
        CLIENT_NOT_ACCESSIBLE_FOR_USER,

        /// <remarks/>
        CLIENT_REQUIRE_UPDATE_FOR_USER,

        /// <remarks/>
        CLONE_FIELD_INTEGRITY_EXCEPTION,

        /// <remarks/>
        CLONE_NOT_SUPPORTED,

        /// <remarks/>
        CONTENT_ALREADY_AN_ASSET_EXCEPTION,

        /// <remarks/>
        CONTENT_CUSTOM_DOWNLOAD_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_AUTHENTICATION_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_FILE_HAS_NO_URL_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_INVALID_PAYLOAD,

        /// <remarks/>
        CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_SECURITY_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_TIMEOUT_EXCEPTION,

        /// <remarks/>
        CONTENT_HUB_UNEXPECTED_EXCEPTION,

        /// <remarks/>
        CONTENT_IMAGE_SCALING_INVALID_ARGUMENTS_EXCEPTION,

        /// <remarks/>
        CONTENT_IMAGE_SCALING_INVALID_IMAGE_EXCEPTION,

        /// <remarks/>
        CONTENT_IMAGE_SCALING_MAX_RENDITIONS_EXCEPTION,

        /// <remarks/>
        CONTENT_IMAGE_SCALING_TIMEOUT_EXCEPTION,

        /// <remarks/>
        CONTENT_IMAGE_SCALING_UNKNOWN_EXCEPTION,

        /// <remarks/>
        CUSTOM_METADATA_LIMIT_EXCEEDED,

        /// <remarks/>
        CUSTOM_SETTINGS_LIMIT_EXCEEDED,

        /// <remarks/>
        DATACLOUD_API_CLIENT_EXCEPTION,

        /// <remarks/>
        DATACLOUD_API_DISABLED_EXCEPTION,

        /// <remarks/>
        DATACLOUD_API_INVALID_QUERY_EXCEPTION,

        /// <remarks/>
        DATACLOUD_API_SERVER_BUSY_EXCEPTION,

        /// <remarks/>
        DATACLOUD_API_SERVER_EXCEPTION,

        /// <remarks/>
        DATACLOUD_API_TIMEOUT_EXCEPTION,

        /// <remarks/>
        DATACLOUD_API_UNAVAILABLE,

        /// <remarks/>
        DATA_INTEGRATION_INPUT_ERROR,

        /// <remarks/>
        DATA_INTEGRATION_NOT_FOUND,

        /// <remarks/>
        DATA_INTEGRATION_NO_ACCESS,

        /// <remarks/>
        DATA_INTEGRATION_PACKAGE_ERROR,

        /// <remarks/>
        DATA_INTEGRATION_SERVER_ERROR,

        /// <remarks/>
        DATA_INTEGRATION_VENDOR_SETUP_ERROR,

        /// <remarks/>
        DEPENDENCY_API_UNSUPPORTED_EXCEPTION,

        /// <remarks/>
        DUPLICATE_ARGUMENT_VALUE,

        /// <remarks/>
        DUPLICATE_VALUE,

        /// <remarks/>
        EMAIL_BATCH_SIZE_LIMIT_EXCEEDED,

        /// <remarks/>
        EMAIL_TO_CASE_INVALID_ROUTING,

        /// <remarks/>
        EMAIL_TO_CASE_LIMIT_EXCEEDED,

        /// <remarks/>
        EMAIL_TO_CASE_NOT_ENABLED,

        /// <remarks/>
        ENTITY_NOT_QUERYABLE,

        /// <remarks/>
        ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT,

        /// <remarks/>
        EXCEEDED_ID_LIMIT,

        /// <remarks/>
        EXCEEDED_LEAD_CONVERT_LIMIT,

        /// <remarks/>
        EXCEEDED_MAX_FILTER_ENTITIES,

        /// <remarks/>
        EXCEEDED_MAX_SEMIJOIN_SUBSELECTS,

        /// <remarks/>
        EXCEEDED_MAX_SIZE_REQUEST,

        /// <remarks/>
        EXCEEDED_MAX_SOBJECTS,

        /// <remarks/>
        EXCEEDED_MAX_TYPES_LIMIT,

        /// <remarks/>
        EXCEEDED_QUOTA,

        /// <remarks/>
        EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION,

        /// <remarks/>
        EXTERNAL_OBJECT_CONNECTION_EXCEPTION,

        /// <remarks/>
        EXTERNAL_OBJECT_EXCEPTION,

        /// <remarks/>
        EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION,

        /// <remarks/>
        EXTERNAL_SERVICE_AUTHENTICATION_EXCEPTION,

        /// <remarks/>
        EXTERNAL_SERVICE_CONNECTION_EXCEPTION,

        /// <remarks/>
        EXTERNAL_SERVICE_DATA_EXCEPTION,

        /// <remarks/>
        EXTERNAL_SERVICE_EXCEPTION,

        /// <remarks/>
        EXTERNAL_SERVICE_INVALID_STATE_EXCEPTION,

        /// <remarks/>
        EXTERNAL_SERVICE_UNSUPPORTED_EXCEPTION,

        /// <remarks/>
        FEDERATED_SEARCH_ERROR,

        /// <remarks/>
        FEED_NOT_ENABLED_FOR_OBJECT,

        /// <remarks/>
        FUNCTIONALITY_NOT_ENABLED,

        /// <remarks/>
        FUNCTIONALITY_TEMPORARILY_UNAVAILABLE,

        /// <remarks/>
        GMAIL_ROUTING_CREATION_NOT_ALLOWED,

        /// <remarks/>
        ID_REQUIRED,

        /// <remarks/>
        ILLEGAL_QUERY_PARAMETER_VALUE,

        /// <remarks/>
        INACTIVE_OWNER_OR_USER,

        /// <remarks/>
        INACTIVE_PORTAL,

        /// <remarks/>
        INDEX_NOT_FOUND,

        /// <remarks/>
        INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE,

        /// <remarks/>
        INSTALL_KEY_INVALID,

        /// <remarks/>
        INSTALL_KEY_REQUIRED,

        /// <remarks/>
        INSUFFICIENT_ACCESS,

        /// <remarks/>
        INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY,

        /// <remarks/>
        INTERNAL_CANVAS_ERROR,

        /// <remarks/>
        INVALID_ASSIGNMENT_RULE,

        /// <remarks/>
        INVALID_AUTH_HEADER,

        /// <remarks/>
        INVALID_BATCH_REQUEST,

        /// <remarks/>
        INVALID_BATCH_SIZE,

        /// <remarks/>
        INVALID_CLIENT,

        /// <remarks/>
        INVALID_CROSS_REFERENCE_KEY,

        /// <remarks/>
        INVALID_DATE_FORMAT,

        /// <remarks/>
        INVALID_FIELD,

        /// <remarks/>
        INVALID_FILTER_LANGUAGE,

        /// <remarks/>
        INVALID_FILTER_VALUE,

        /// <remarks/>
        INVALID_ID_FIELD,

        /// <remarks/>
        INVALID_INPUT_COMBINATION,

        /// <remarks/>
        INVALID_LOCALE_LANGUAGE,

        /// <remarks/>
        INVALID_LOCATOR,

        /// <remarks/>
        INVALID_LOGIN,

        /// <remarks/>
        INVALID_MULTIPART_REQUEST,

        /// <remarks/>
        INVALID_NEW_PASSWORD,

        /// <remarks/>
        INVALID_OLD_PASSWORD,

        /// <remarks/>
        INVALID_OPERATION,

        /// <remarks/>
        INVALID_OPERATION_WITH_EXPIRED_PASSWORD,

        /// <remarks/>
        INVALID_PACKAGE_VERSION,

        /// <remarks/>
        INVALID_PAGING_OPTION,

        /// <remarks/>
        INVALID_QUERY_FILTER_OPERATOR,

        /// <remarks/>
        INVALID_QUERY_KEY,

        /// <remarks/>
        INVALID_QUERY_LOCATOR,

        /// <remarks/>
        INVALID_QUERY_SCOPE,

        /// <remarks/>
        INVALID_QUERY_VALUE,

        /// <remarks/>
        INVALID_REPLICATION_DATE,

        /// <remarks/>
        INVALID_SEARCH,

        /// <remarks/>
        INVALID_SEARCH_SCOPE,

        /// <remarks/>
        INVALID_SESSION_ID,

        /// <remarks/>
        INVALID_SOAP_HEADER,

        /// <remarks/>
        INVALID_SORT_OPTION,

        /// <remarks/>
        INVALID_SSO_GATEWAY_URL,

        /// <remarks/>
        INVALID_TYPE,

        /// <remarks/>
        INVALID_TYPE_FOR_OPERATION,

        /// <remarks/>
        JIGSAW_ACTION_DISABLED,

        /// <remarks/>
        JIGSAW_IMPORT_LIMIT_EXCEEDED,

        /// <remarks/>
        JIGSAW_REQUEST_NOT_SUPPORTED,

        /// <remarks/>
        JSON_PARSER_ERROR,

        /// <remarks/>
        KEY_HAS_BEEN_DESTROYED,

        /// <remarks/>
        LICENSING_DATA_ERROR,

        /// <remarks/>
        LICENSING_UNKNOWN_ERROR,

        /// <remarks/>
        LIMIT_EXCEEDED,

        /// <remarks/>
        LOGIN_CHALLENGE_ISSUED,

        /// <remarks/>
        LOGIN_CHALLENGE_PENDING,

        /// <remarks/>
        LOGIN_DURING_RESTRICTED_DOMAIN,

        /// <remarks/>
        LOGIN_DURING_RESTRICTED_TIME,

        /// <remarks/>
        LOGIN_MUST_USE_SECURITY_TOKEN,

        /// <remarks/>
        MALFORMED_ID,

        /// <remarks/>
        MALFORMED_QUERY,

        /// <remarks/>
        MALFORMED_SEARCH,

        /// <remarks/>
        MISMATCHING_VERSIONS,

        /// <remarks/>
        MISSING_ARGUMENT,

        /// <remarks/>
        MISSING_RECORD,

        /// <remarks/>
        MODIFIED,

        /// <remarks/>
        MULTIPLE_RECORDS_FOUND,

        /// <remarks/>
        MUTUAL_AUTHENTICATION_FAILED,

        /// <remarks/>
        NOT_ACCEPTABLE,

        /// <remarks/>
        NOT_MODIFIED,

        /// <remarks/>
        NO_ACTIVE_DUPLICATE_RULE,

        /// <remarks/>
        NO_RECIPIENTS,

        /// <remarks/>
        NO_SOFTPHONE_LAYOUT,

        /// <remarks/>
        NUMBER_OUTSIDE_VALID_RANGE,

        /// <remarks/>
        OPERATION_TOO_LARGE,

        /// <remarks/>
        ORDER_MANAGEMENT_ACTION_NOT_ALLOWED,

        /// <remarks/>
        ORG_IN_MAINTENANCE,

        /// <remarks/>
        ORG_IS_DOT_ORG,

        /// <remarks/>
        ORG_IS_SIGNING_UP,

        /// <remarks/>
        ORG_LOCKED,

        /// <remarks/>
        ORG_NOT_OWNED_BY_INSTANCE,

        /// <remarks/>
        PASSWORD_LOCKOUT,

        /// <remarks/>
        PORTAL_NO_ACCESS,

        /// <remarks/>
        POST_BODY_PARSE_ERROR,

        /// <remarks/>
        PRODUCT_NOT_FOUND,

        /// <remarks/>
        QAT_HETEROGENOUS_CONTEXT_IDS,

        /// <remarks/>
        QAT_INVALID_CONTEXT_ID,

        /// <remarks/>
        QAT_INVALID_QUICK_ACTION,

        /// <remarks/>
        QUERY_TIMEOUT,

        /// <remarks/>
        QUERY_TOO_COMPLICATED,

        /// <remarks/>
        REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT,

        /// <remarks/>
        RECORD_NOT_FOUND,

        /// <remarks/>
        REPORT_EXPORT_LIMIT_EXCEEDED,

        /// <remarks/>
        REQUEST_LIMIT_EXCEEDED,

        /// <remarks/>
        REQUEST_RUNNING_TOO_LONG,

        /// <remarks/>
        SERVER_UNAVAILABLE,

        /// <remarks/>
        SERVICE_DESK_NOT_ENABLED,

        /// <remarks/>
        SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION,

        /// <remarks/>
        SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION,

        /// <remarks/>
        SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE,

        /// <remarks/>
        SPECIFICATION_GENERATION_EXCEPTION,

        /// <remarks/>
        SSO_SERVICE_DOWN,

        /// <remarks/>
        SST_ADMIN_FILE_DOWNLOAD_EXCEPTION,

        /// <remarks/>
        STATE_TRANSITION_NOT_ALLOWED,

        /// <remarks/>
        TOO_MANY_APEX_REQUESTS,

        /// <remarks/>
        TOO_MANY_JOBS,

        /// <remarks/>
        TOO_MANY_RECIPIENTS,

        /// <remarks/>
        TOO_MANY_RECORDS,

        /// <remarks/>
        TRIAL_EXPIRED,

        /// <remarks/>
        TXN_SECURITY_APEX_ERROR,

        /// <remarks/>
        TXN_SECURITY_END_A_SESSION,

        /// <remarks/>
        TXN_SECURITY_FAIL_CLOSE,

        /// <remarks/>
        TXN_SECURITY_METERING_ERROR,

        /// <remarks/>
        TXN_SECURITY_NO_ACCESS,

        /// <remarks/>
        TXN_SECURITY_RUNTIME_ERROR,

        /// <remarks/>
        TXN_SECURITY_TWO_FA_REQUIRED,

        /// <remarks/>
        UNABLE_TO_LOCK_ROW,

        /// <remarks/>
        UNKNOWN_ATTACHMENT_EXCEPTION,

        /// <remarks/>
        UNKNOWN_EXCEPTION,

        /// <remarks/>
        UNKNOWN_ORG_SETTING,

        /// <remarks/>
        UNSUPPORTED_API_VERSION,

        /// <remarks/>
        UNSUPPORTED_ATTACHMENT_ENCODING,

        /// <remarks/>
        UNSUPPORTED_CLIENT,

        /// <remarks/>
        UNSUPPORTED_MEDIA_TYPE,

        /// <remarks/>
        WEBSTORE_NOT_FOUND,

        /// <remarks/>
        XML_PARSER_ERROR
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ExtendedErrorDetails : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ExtendedErrorCode extendedErrorCodeField;
        private System.Xml.XmlElement[] anyField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public ExtendedErrorCode extendedErrorCode
        {
            get
            {
                return extendedErrorCodeField;
            }

            set
            {
                extendedErrorCodeField = value;
                RaisePropertyChanged("extendedErrorCode");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElement(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return anyField;
            }

            set
            {
                anyField = value;
                RaisePropertyChanged("Any");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum ExtendedErrorCode
    {

        /// <remarks/>
        ACTIONCALL_DUPLICATE_INPUT_PARAM,

        /// <remarks/>
        ACTIONCALL_DUPLICATE_OUTPUT_PARAM,

        /// <remarks/>
        ACTIONCALL_INPUT_VALIDATION_FAILED,

        /// <remarks/>
        ACTIONCALL_INVALID_INPUT_PARAM_NAME,

        /// <remarks/>
        ACTIONCALL_MISSING_NAME,

        /// <remarks/>
        ACTIONCALL_MISSING_REQUIRED_PARAM,

        /// <remarks/>
        ACTIONCALL_MISSING_REQUIRED_TYPE,

        /// <remarks/>
        ACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE,

        /// <remarks/>
        ACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE,

        /// <remarks/>
        ACTIONCALL_TRANSACTION_MODEL_NOT_ALLOWED,

        /// <remarks/>
        ACTIONCALL_TRANSACTION_MODEL_NOT_SUPPORTED,

        /// <remarks/>
        ACTION_CALL_INVALID_CONFIGURATION,

        /// <remarks/>
        ACTION_CALL_INVALID_INPUT_PARAM,

        /// <remarks/>
        ACTION_CALL_INVALID_OUTPUT_PARAM,

        /// <remarks/>
        APEXCALLOUT_INPUT_DUPLICATE,

        /// <remarks/>
        APEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE,

        /// <remarks/>
        APEXCALLOUT_INVALID,

        /// <remarks/>
        APEXCALLOUT_MISSING_CLASSNAME,

        /// <remarks/>
        APEXCALLOUT_NOT_FOUND,

        /// <remarks/>
        APEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE,

        /// <remarks/>
        APEXCALLOUT_OUTPUT_INVALID,

        /// <remarks/>
        APEXCALLOUT_REQUIRED_INPUT_MISSING,

        /// <remarks/>
        APEXCLASS_MISSING_INTERFACE,

        /// <remarks/>
        APEX_CLASS_VARIABLE_NOT_FOUND,

        /// <remarks/>
        ASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE,

        /// <remarks/>
        ASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED,

        /// <remarks/>
        ASSIGNMENTITEM_FIELD_INVALID_DATATYPE,

        /// <remarks/>
        ASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT,

        /// <remarks/>
        ASSIGNMENTITEM_INCOMPATIBLE_DATATYPES,

        /// <remarks/>
        ASSIGNMENTITEM_INVALID_ASSIGNTOREFERENCE,

        /// <remarks/>
        ASSIGNMENTITEM_INVALID_COLLECTION,

        /// <remarks/>
        ASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT,

        /// <remarks/>
        ASSIGNMENTITEM_INVALID_ELEMENTREFERENCE,

        /// <remarks/>
        ASSIGNMENTITEM_INVALID_MERGE_FIELD,

        /// <remarks/>
        ASSIGNMENTITEM_INVALID_OPERATOR,

        /// <remarks/>
        ASSIGNMENTITEM_INVALID_REFERENCE,

        /// <remarks/>
        ASSIGNMENTITEM_INVALID_VALUE,

        /// <remarks/>
        ASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR,

        /// <remarks/>
        ASSIGNMENTITEM_MODIFIES_NONVARIABLE,

        /// <remarks/>
        ASSIGNMENTITEM_NONEXISTENT_REFERENCE,

        /// <remarks/>
        ASSIGNMENTITEM_REQUIRED,

        /// <remarks/>
        ASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR,

        /// <remarks/>
        AUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED,

        /// <remarks/>
        AUTOLAUNCHED_CHOICE_NOT_SUPPORTED,

        /// <remarks/>
        AUTOLAUNCHED_SCREEN_NOT_SUPPORTED,

        /// <remarks/>
        AUTOLAUNCHED_STEP_NOT_SUPPORTED,

        /// <remarks/>
        AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE,

        /// <remarks/>
        AUTOLAUNCHED_WAIT_NOT_SUPPORTED,

        /// <remarks/>
        BOTH_START_NODE_AND_REFERENCE_FOUND,

        /// <remarks/>
        CHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND,

        /// <remarks/>
        CHOICEFIELD_MISSING_CHOICE,

        /// <remarks/>
        CHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD,

        /// <remarks/>
        CHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD,

        /// <remarks/>
        CHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE,

        /// <remarks/>
        CHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD,

        /// <remarks/>
        COLLECTION_PROCESSOR_INVALID_COLLECTION_REFERENCE,

        /// <remarks/>
        COLLECTION_PROCESSOR_MAX_SORT_FIELDS_LIMIT_EXCEEDED,

        /// <remarks/>
        COLLECTION_PROCESSOR_MISSING_SORT,

        /// <remarks/>
        COLLECTION_PROCESSOR_NOT_SUPPORTED_FOR_API_VERSION,

        /// <remarks/>
        COLLECTION_PROCESSOR_REQUIRES_PERM,

        /// <remarks/>
        COLLECTION_PROCESSOR_SORT_FIELD_INVALID_FOR_OBJECT,

        /// <remarks/>
        COLLECTION_PROCESSOR_TYPE_NOT_SUPPORTED,

        /// <remarks/>
        COLLECTION_PROCESSOR_VARIABLE_NULL,

        /// <remarks/>
        CONDITION_BUILDER_MISSING_FLOW_VARIABLE,

        /// <remarks/>
        CONDITION_BUILDER_MISSING_REQUIRED_PERMISSIONS,

        /// <remarks/>
        CONDITION_BUILDER_UNSUPPORTED_FLOW_VARIABLE,

        /// <remarks/>
        CONDITION_INVALID_LEFTOPERAND,

        /// <remarks/>
        CONDITION_LOGIC_EXCEEDS_LIMIT,

        /// <remarks/>
        CONDITION_LOGIC_INVALID,

        /// <remarks/>
        CONDITION_LOGIC_MISSING,

        /// <remarks/>
        CONDITION_MISSING_DATATYPE,

        /// <remarks/>
        CONDITION_MISSING_OPERATOR,

        /// <remarks/>
        CONDITION_OPERAND_DATATYPES_INCOMPATIBLE,

        /// <remarks/>
        CONDITION_OPERAND_INCOMPATIBLE_WITH_ELEMENT,

        /// <remarks/>
        CONDITION_OPERATOR_INCOMPATIBLE,

        /// <remarks/>
        CONDITION_REFERENCED_ELEMENT_NOT_FOUND,

        /// <remarks/>
        CONDITION_RIGHTOPERAND_NULL,

        /// <remarks/>
        CONNECTOR_MISSING_TARGET,

        /// <remarks/>
        CONSTANT_INCLUDES_REFERENCES,

        /// <remarks/>
        CUSTOMEVENTS_NOT_ENABLED,

        /// <remarks/>
        CUSTOMEVENT_MISSING_PROCESSMETADATAVALUES,

        /// <remarks/>
        CUSTOMEVENT_OBJECTTYPE_NOT_FOUND,

        /// <remarks/>
        CUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED,

        /// <remarks/>
        CUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME,

        /// <remarks/>
        CUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME,

        /// <remarks/>
        DATATYPE_INVALID,

        /// <remarks/>
        DATATYPE_MISSING,

        /// <remarks/>
        DATA_TYPE_NOT_SUPPORTED_FOR_PROCESSTYPE,

        /// <remarks/>
        DECISION_DEFAULT_CONNECTOR_MISSING_LABEL,

        /// <remarks/>
        DECISION_MISSING_OUTCOME,

        /// <remarks/>
        DYNAMIC_TYPE_MAPPING_MISSING,

        /// <remarks/>
        ELEMENT_CONNECTS_TO_SELF,

        /// <remarks/>
        ELEMENT_COORDINATES_INVALID,

        /// <remarks/>
        ELEMENT_INVALID_CONNECTOR,

        /// <remarks/>
        ELEMENT_INVALID_REFERENCE,

        /// <remarks/>
        ELEMENT_INVALID_REFERENCE_FOR_CONFLICTING_FIELD_VALUE,

        /// <remarks/>
        ELEMENT_MISSING_CONNECTOR,

        /// <remarks/>
        ELEMENT_MISSING_LABEL,

        /// <remarks/>
        ELEMENT_MISSING_NAME,

        /// <remarks/>
        ELEMENT_MISSING_REFERENCE,

        /// <remarks/>
        ELEMENT_MORE_THAN_ONE_FIELD,

        /// <remarks/>
        ELEMENT_NAME_INVALID,

        /// <remarks/>
        ELEMENT_NEVER_USED,

        /// <remarks/>
        ELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE,

        /// <remarks/>
        ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_ELEMENTTYPE,

        /// <remarks/>
        ELEMENT_SUBTYPE_NOT_SUPPORTED_FOR_PROCESSTYPE,

        /// <remarks/>
        EXTERNAL_OBJECTS_NOT_SUPPORTED,

        /// <remarks/>
        EXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED,

        /// <remarks/>
        EX_AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE,

        /// <remarks/>
        FIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE,

        /// <remarks/>
        FIELDASSIGNMENT_INVALID_DATATYPE,

        /// <remarks/>
        FIELDASSIGNMENT_INVALID_ELEMENT,

        /// <remarks/>
        FIELDASSIGNMENT_INVALID_REFERENCE,

        /// <remarks/>
        FIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD,

        /// <remarks/>
        FIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE,

        /// <remarks/>
        FIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE,

        /// <remarks/>
        FIELDSERVICE_UNSUPPORTED_FIELD_TYPE,

        /// <remarks/>
        FIELD_INVALID_VALUE,

        /// <remarks/>
        FIELD_NOT_FOUND,

        /// <remarks/>
        FIELD_RELATIONSHIP_NOT_SUPPORTED,

        /// <remarks/>
        FIELD_TYPE_NOT_SUPPORTED_AS_CHILD_OF_SCREENFIELD_REGION_OR_REGIONCONTAINER,

        /// <remarks/>
        FIELD_TYPE_NOT_SUPPORTED_AS_PARENT,

        /// <remarks/>
        FIELD_VALUE_REQUIRES_PERM,

        /// <remarks/>
        FLEXIPAGE_COMPONENT_ATTRIBUTE_EXPRESSION_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED,

        /// <remarks/>
        FLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG,

        /// <remarks/>
        FLEXIPAGE_COMPONENT_CUSTOM_VALIDATION_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_COMPONENT_DESIGN_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_COMPONENT_MAX_LIMIT_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_DUPLICATE_PROPERTY_COMPONENT_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_INVALID_ITEM_INSTANCE_TYPE_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_INVALID_PROPERTY_TYPE_COMPONENT_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_ITEM_INSTANCE_CUSTOM_VALIDATION_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_RENAMED_COMPONENT_VALIDATION_EXCEPTION,

        /// <remarks/>
        FLEXIPAGE_TEMPLATE_INVALID_SWITCH,

        /// <remarks/>
        FLOW_CONTEXT_RECORD_ASSIGNMENT_VARIABLE_INVALID,

        /// <remarks/>
        FLOW_ELEMENT_SCALE_LESS_THAN_ZERO,

        /// <remarks/>
        FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_CALLOUTS,

        /// <remarks/>
        FLOW_IMMEDIATE_PATH_INCOMPATIBLE_WITH_EXTERNAL_OBJECTS,

        /// <remarks/>
        FLOW_INCLUDES_STEP,

        /// <remarks/>
        FLOW_INTERVIEW_BULK_EXECUTION,

        /// <remarks/>
        FLOW_INTERVIEW_HANDLED_ERROR,

        /// <remarks/>
        FLOW_INTERVIEW_INPUT_VALIDATION,

        /// <remarks/>
        FLOW_INTERVIEW_INTERACTION_NOT_FOUND,

        /// <remarks/>
        FLOW_INTERVIEW_INVALID_CHOICE_USER_INPUT,

        /// <remarks/>
        FLOW_INTERVIEW_INVALID_FIELD_VALUE,

        /// <remarks/>
        FLOW_INTERVIEW_INVALID_START_REQUEST,

        /// <remarks/>
        FLOW_INTERVIEW_LIMIT_EXCEEDED,

        /// <remarks/>
        FLOW_INTERVIEW_MISSING_CHOICE_FOR_REQUIRED_CHOICE_FIELD,

        /// <remarks/>
        FLOW_INTERVIEW_MISSING_VALUE_FOR_REQUIRED_INPUT_FIELD,

        /// <remarks/>
        FLOW_INTERVIEW_NAVIGATE,

        /// <remarks/>
        FLOW_INTERVIEW_RANGE_VALIDATION,

        /// <remarks/>
        FLOW_INTERVIEW_REGEX_VALIDATION,

        /// <remarks/>
        FLOW_INTERVIEW_RESUME_INTERVIEW,

        /// <remarks/>
        FLOW_INTERVIEW_SAVE_RESULT,

        /// <remarks/>
        FLOW_INTERVIEW_SET_CHOICE_SELECTED,

        /// <remarks/>
        FLOW_INTERVIEW_START_INTERVIEW,

        /// <remarks/>
        FLOW_INTERVIEW_TYPE_CONVERSION,

        /// <remarks/>
        FLOW_INVALID_NAME,

        /// <remarks/>
        FLOW_NAME_USED_IN_OTHER_CLIENT,

        /// <remarks/>
        FLOW_RECORD_PRIOR_AUTOLAUNCH_UPDATE_ONLY,

        /// <remarks/>
        FLOW_RECORD_PRIOR_INVALID_IN_RECORD_CREATE,

        /// <remarks/>
        FLOW_RECORD_PRIOR_INVALID_IN_RECORD_DELETE,

        /// <remarks/>
        FLOW_RECORD_PRIOR_INVALID_IN_RECORD_UPDATE,

        /// <remarks/>
        FLOW_RECORD_PRIOR_READ_ONLY,

        /// <remarks/>
        FLOW_REFERENCES_APEX_CLASS_NOT_IN_SAME_PACKAGE,

        /// <remarks/>
        FLOW_RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED_FOR_RECORD_PRIOR,

        /// <remarks/>
        FLOW_SCHEDULED_PATH_INCOMPATIBLE_TIME_SOURCE,

        /// <remarks/>
        FLOW_SCHEDULED_PATH_INCOMPATIBLE_WHEN_DECISION_REQUIRES_RECORD_CHANGED,

        /// <remarks/>
        FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_FLOW_TRIGGER_TYPE,

        /// <remarks/>
        FLOW_SCHEDULED_PATH_INCOMPATIBLE_WITH_RECORD_PRIOR,

        /// <remarks/>
        FLOW_SCHEDULED_PATH_INVALID_OFFSET,

        /// <remarks/>
        FLOW_SCHEDULED_PATH_REQUIRES_DEFAULT_WORKFLOW_USER,

        /// <remarks/>
        FLOW_SCHEDULED_PATH_REQUIRES_RECORD_CHANGED_TO_MEET_CRITERIA,

        /// <remarks/>
        FLOW_SCHEDULE_INFORMATION_INCOMPLETE,

        /// <remarks/>
        FLOW_SOBJECT_VARIABLE_NOT_PERSISTED,

        /// <remarks/>
        FLOW_STAGE_INCLUDES_REFERENCES,

        /// <remarks/>
        FLOW_STAGE_ORDER_DUPLICATE,

        /// <remarks/>
        FLOW_STAGE_ORDER_OUT_OF_RANGE,

        /// <remarks/>
        FLOW_SYSTEM_VARIABLE_NOT_SUPPORTED_FOR_TRIGGERTYPE,

        /// <remarks/>
        FLOW_TRIGGER_TYPE_INCOMPATIBLE_WITH_RECORD_TRIGGER_TYPE,

        /// <remarks/>
        FORMULA_CMT_LIMIT_EXCEEDED,

        /// <remarks/>
        FORMULA_EXPRESSION_INVALID,

        /// <remarks/>
        GLOBAL_VARIABLE_NOT_SUPPORTED_FOR_PROCESSTYPE,

        /// <remarks/>
        INCONSISTENT_DYNAMIC_TYPE_MAPPING,

        /// <remarks/>
        INCONSISTENT_VALUE_FOR_DYNAMIC_VALUE_FIELD,

        /// <remarks/>
        INPUTPARAM_CONFIGURATION_NOT_FOUND,

        /// <remarks/>
        INPUTPARAM_INCOMPATIBLE_CONFIGURATION_ONLY,

        /// <remarks/>
        INPUTPARAM_INCOMPATIBLE_DATATYPE,

        /// <remarks/>
        INPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE,

        /// <remarks/>
        INPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE,

        /// <remarks/>
        INPUTPARAM_MISMATCHED_OBJECTTYPE,

        /// <remarks/>
        INVALID_EMAIL_ADDRESS,

        /// <remarks/>
        INVALID_FLOW,

        /// <remarks/>
        INVALID_FLOW_INTERVIEW,

        /// <remarks/>
        INVALID_REGEX_IN_SURVEY_QUESTIONS,

        /// <remarks/>
        INVALID_SENDER_TYPE,

        /// <remarks/>
        INVALID_SURVEY_VARIABLE_NAME_OR_TYPE,

        /// <remarks/>
        LOOP_ASSIGNNEXTVALUETO_MISMATCHED_APEXCLASSTYPE,

        /// <remarks/>
        LOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE,

        /// <remarks/>
        LOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE,

        /// <remarks/>
        LOOP_ASSIGNNEXTVALUETO_MISSING,

        /// <remarks/>
        LOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE,

        /// <remarks/>
        LOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND,

        /// <remarks/>
        LOOP_COLLECTION_ELEMENT_NOT_FOUND,

        /// <remarks/>
        LOOP_COLLECTION_NOT_FOUND,

        /// <remarks/>
        LOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD,

        /// <remarks/>
        LOOP_MISSING_COLLECTION,

        /// <remarks/>
        MISSING_EMAIL_RECIPIENTS,

        /// <remarks/>
        NON_EXPOSED_COMPONENT_IN_FLOW,

        /// <remarks/>
        NON_GLOBAL_COMPONENT_IN_EXPORTED_FLOW,

        /// <remarks/>
        NUMBER_OF_SCREENFIELD_REGIONS_EXCEEDS_LIMIT,

        /// <remarks/>
        OBJECTTYPE_INVALID,

        /// <remarks/>
        OBJECT_CANNOT_BE_CREATED,

        /// <remarks/>
        OBJECT_CANNOT_BE_DELETED,

        /// <remarks/>
        OBJECT_CANNOT_BE_QUERIED,

        /// <remarks/>
        OBJECT_CANNOT_BE_UPDATED,

        /// <remarks/>
        OBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED,

        /// <remarks/>
        OBJECT_NOT_FOUND,

        /// <remarks/>
        OBJECT_TYPE_DOES_NOT_EXIST,

        /// <remarks/>
        ORG_WIDE_EMAIL_INVALID,

        /// <remarks/>
        ORG_WIDE_EMAIL_NOT_USED,

        /// <remarks/>
        OUTPUTPARAM_ASSIGNTOREFERENCE_INVALID,

        /// <remarks/>
        OUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND,

        /// <remarks/>
        OUTPUTPARAM_INCOMPATIBLE_DATATYPE,

        /// <remarks/>
        OUTPUTPARAM_MISMATCHED_OBJECTTYPE,

        /// <remarks/>
        OUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE,

        /// <remarks/>
        OUTPUTPARAM_MISSING_ASSIGNTOREFERENCE,

        /// <remarks/>
        OUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE,

        /// <remarks/>
        PARAM_DATATYPE_NOT_SUPPORTED,

        /// <remarks/>
        PAST_SCHEDULE_FLOW_WILL_NOT_RUN,

        /// <remarks/>
        PROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE,

        /// <remarks/>
        PROCESSMETADATAVALUE_NONEXISTENT_ELEMENT,

        /// <remarks/>
        PROCESSTYPE_COMPONENTTYPE_NOT_SUPPORTED,

        /// <remarks/>
        PROCESSTYPE_ELEMENT_CONFIG_NOT_SUPPORTED,

        /// <remarks/>
        PROCESSTYPE_ELEMENT_NOT_SUPPORTED,

        /// <remarks/>
        PROCESSTYPE_NOT_SUPPORTED,

        /// <remarks/>
        PROCESSTYPE_SCREEN_FIELDTYPE_NOT_SUPPORTED,

        /// <remarks/>
        PROCESS_TYPE_INCOMPATIBLE,

        /// <remarks/>
        RECOMMENDATION_STRATEGY_EXCEPTION,

        /// <remarks/>
        RECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED,

        /// <remarks/>
        RECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED,

        /// <remarks/>
        RECORDFILTER_INVALID_DATATYPE,

        /// <remarks/>
        RECORDFILTER_INVALID_ELEMENT,

        /// <remarks/>
        RECORDFILTER_INVALID_OPERATOR,

        /// <remarks/>
        RECORDFILTER_INVALID_REFERENCE,

        /// <remarks/>
        RECORDFILTER_MISSING_DATATYPE,

        /// <remarks/>
        RECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD,

        /// <remarks/>
        RECORDFILTER_NON_PRIMITIVE,

        /// <remarks/>
        RECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE,

        /// <remarks/>
        RECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND,

        /// <remarks/>
        RECORDUPDATE_MISSING_FILTERS,

        /// <remarks/>
        REFERENCED_ELEMENT_NOT_FOUND,

        /// <remarks/>
        REQUIRED_VARIABLE_INVALID,

        /// <remarks/>
        REQUIRED_VARIABLE_MISSING,

        /// <remarks/>
        RULE_MISSING_CONDITION,

        /// <remarks/>
        RULE_REQUIRE_RECORD_CHANGED_NEVER_CHECKED,

        /// <remarks/>
        SCREENCOMPONENT_CONTAINS_VISIBILITY_RULE,

        /// <remarks/>
        SCREENFIELD_API_VERSION_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE,

        /// <remarks/>
        SCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_EXTENSION_DUPLICATE_INPUT_PARAM,

        /// <remarks/>
        SCREENFIELD_EXTENSION_DUPLICATE_OUTPUT_PARAM,

        /// <remarks/>
        SCREENFIELD_EXTENSION_IMPLEMENTATION_INVALID,

        /// <remarks/>
        SCREENFIELD_EXTENSION_INPUT_ATTRIBUTE_INVALID,

        /// <remarks/>
        SCREENFIELD_EXTENSION_NAME_INVALID,

        /// <remarks/>
        SCREENFIELD_EXTENSION_NAME_MISSING,

        /// <remarks/>
        SCREENFIELD_EXTENSION_NAME_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_EXTENSION_OUTPUT_ATTRIBUTE_INVALID,

        /// <remarks/>
        SCREENFIELD_EXTENSION_REQUIRED_INPUT_MISSING,

        /// <remarks/>
        SCREENFIELD_INPUTS_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_INPUTS_ON_NEXT_NAV_TO_ASSOC_SCRN_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_INVALID_DATATYPE,

        /// <remarks/>
        SCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_OBJECTFIELDREFERENCE_INVALID_FORMAT,

        /// <remarks/>
        SCREENFIELD_OBJECTPROVIDED_MISSING_OBJECTFIELDREFERENCE,

        /// <remarks/>
        SCREENFIELD_OUTPUTS_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_REGION_CONTAINS_DUPLICATE_INPUT_PARAMETER_VALUES,

        /// <remarks/>
        SCREENFIELD_REGION_INPUT_PARAMETER_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_REGION_MISSING_REQUIRED_PERMISSIONS,

        /// <remarks/>
        SCREENFIELD_REGION_NOT_IN_CONTAINER,

        /// <remarks/>
        SCREENFIELD_REGION_REQUIRED_INPUT_PARAMETER_MISSING,

        /// <remarks/>
        SCREENFIELD_REGION_WIDTH_SUM_EXCEEDS_LIMIT,

        /// <remarks/>
        SCREENFIELD_REGION_WIDTH_VALUE_INVALID,

        /// <remarks/>
        SCREENFIELD_TYPE_NOT_SUPPORTED,

        /// <remarks/>
        SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_API_VERSION,

        /// <remarks/>
        SCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE,

        /// <remarks/>
        SCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED,

        /// <remarks/>
        SCREENRULE_ACTION_INVALID_ATTRIBUTE,

        /// <remarks/>
        SCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION,

        /// <remarks/>
        SCREENRULE_ACTION_INVALID_VALUE,

        /// <remarks/>
        SCREENRULE_ACTION_MISSING_ATTRIBUTE,

        /// <remarks/>
        SCREENRULE_ACTION_MISSING_FIELDREFERENCE,

        /// <remarks/>
        SCREENRULE_ACTION_MISSING_VALUE,

        /// <remarks/>
        SCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD,

        /// <remarks/>
        SCREENRULE_FIELD_NOT_FOUND_ON_SCREEN,

        /// <remarks/>
        SCREENRULE_MISSING_ACTION,

        /// <remarks/>
        SCREENRULE_NOT_SUPPORTED_IN_ORG,

        /// <remarks/>
        SCREENRULE_SCREENFIELD_NOT_VISIBLE,

        /// <remarks/>
        SCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG,

        /// <remarks/>
        SCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE,

        /// <remarks/>
        SCREEN_CONTAINS_LIGHTNING_COMPONENT,

        /// <remarks/>
        SCREEN_MISSING_FOOTER_AND_LIGHTNING_COMPONENT,

        /// <remarks/>
        SCREEN_MISSING_LABEL,

        /// <remarks/>
        SCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT,

        /// <remarks/>
        SCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE,

        /// <remarks/>
        SETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED,

        /// <remarks/>
        SETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED,

        /// <remarks/>
        SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_UNSUPPORTED,

        /// <remarks/>
        SETTING_FIELD_VALUE_MAKES_OTHER_FIELD_VALUE_UNSUPPORTED,

        /// <remarks/>
        SOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE,

        /// <remarks/>
        SOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE,

        /// <remarks/>
        SORT_ENCRYPTED_FIELDS_NOT_SUPPORTED,

        /// <remarks/>
        SORT_FIELD_MISSING,

        /// <remarks/>
        SORT_FIELD_NOT_SUPPORTED,

        /// <remarks/>
        SORT_GEOLOCATION_FIELDS_NOT_SUPPORTED,

        /// <remarks/>
        SORT_LIMIT_INVALID,

        /// <remarks/>
        SORT_ORDER_MISSING,

        /// <remarks/>
        SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED,

        /// <remarks/>
        STAGE_NAME_NOT_FULLY_QUALIFIED,

        /// <remarks/>
        START_ELEMENT_MISSING,

        /// <remarks/>
        SUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED,

        /// <remarks/>
        SUBFLOW_DIFFERENT_RUNMODE,

        /// <remarks/>
        SUBFLOW_INPUT_ELEMENT_INCOMPATIBLE_DATATYPES,

        /// <remarks/>
        SUBFLOW_INPUT_INVALID_VALUE,

        /// <remarks/>
        SUBFLOW_INPUT_MISMATCHED_APEX_CLASS,

        /// <remarks/>
        SUBFLOW_INPUT_MISMATCHED_COLLECTIONTYPES,

        /// <remarks/>
        SUBFLOW_INPUT_MISMATCHED_OBJECTS,

        /// <remarks/>
        SUBFLOW_INPUT_MISSING_NAME,

        /// <remarks/>
        SUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE,

        /// <remarks/>
        SUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE,

        /// <remarks/>
        SUBFLOW_INPUT_VALUE_INCOMPATIBLE_DATATYPES,

        /// <remarks/>
        SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW,

        /// <remarks/>
        SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW,

        /// <remarks/>
        SUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS,

        /// <remarks/>
        SUBFLOW_INVALID_NAME,

        /// <remarks/>
        SUBFLOW_INVALID_REFERENCE,

        /// <remarks/>
        SUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED,

        /// <remarks/>
        SUBFLOW_MISSING_NAME,

        /// <remarks/>
        SUBFLOW_NO_ACTIVE_VERSION,

        /// <remarks/>
        SUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES,

        /// <remarks/>
        SUBFLOW_OUTPUT_MISMATCHED_APEX_CLASS,

        /// <remarks/>
        SUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES,

        /// <remarks/>
        SUBFLOW_OUTPUT_MISMATCHED_OBJECTS,

        /// <remarks/>
        SUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE,

        /// <remarks/>
        SUBFLOW_OUTPUT_MISSING_NAME,

        /// <remarks/>
        SUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE,

        /// <remarks/>
        SUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE,

        /// <remarks/>
        SUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW,

        /// <remarks/>
        SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW,

        /// <remarks/>
        SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW,

        /// <remarks/>
        SUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS,

        /// <remarks/>
        SUBFLOW_PROCESSTYPE_NOT_SUPPORTED,

        /// <remarks/>
        SUBFLOW_PROCESS_TYPE_INCOMPATIBLE,

        /// <remarks/>
        SUBFLOW_REFERENCES_MASTERFLOW,

        /// <remarks/>
        SURVEY_ADVANCED_CONDITION_LOGIC_NOT_SUPPORTED,

        /// <remarks/>
        SURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION,

        /// <remarks/>
        SURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS,

        /// <remarks/>
        SURVEY_ELEMENT_NEVER_REACHED,

        /// <remarks/>
        SURVEY_ENRICH_INVALID_CONFIGURATION,

        /// <remarks/>
        SURVEY_INACTIVE_SUBFLOWS,

        /// <remarks/>
        SURVEY_INVALID_CMT_CONFIGURED,

        /// <remarks/>
        SURVEY_INVALID_LINK_TARGET_IN_QUESTION_LABEL,

        /// <remarks/>
        SURVEY_INVALID_MERGE_FIELD_CONFIGURATION,

        /// <remarks/>
        SURVEY_INVALID_OUTPUT_VARIABLE,

        /// <remarks/>
        SURVEY_MISSING_QUESTION_OR_SUBFLOW,

        /// <remarks/>
        SURVEY_MISSING_REQUIRED_VARIABLES,

        /// <remarks/>
        SURVEY_MULTIPLE_SCREENS_CANNOT_CONNECT_TO_SAME_DECISION,

        /// <remarks/>
        SURVEY_NESTED_SUBFLOWS,

        /// <remarks/>
        SURVEY_NONSURVEY_SUBFLOWS,

        /// <remarks/>
        SURVEY_RULE_INVALID_RIGHT_OPERAND,

        /// <remarks/>
        SURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION,

        /// <remarks/>
        SURVEY_START_ELEMENT_INVALID,

        /// <remarks/>
        SURVEY_VARIABLE_ACCESS_INVALID,

        /// <remarks/>
        SYSTEM_MODE_NOT_ALLOWED,

        /// <remarks/>
        TRIGGERED_FLOW_REDUNDANT_QUERY,

        /// <remarks/>
        TRIGGER_TYPE_CONTEXT_OBJECT_NOT_SUPPORTED,

        /// <remarks/>
        TRIGGER_TYPE_ELEMENT_NOT_SUPPORTED,

        /// <remarks/>
        TRIGGER_TYPE_INCOMPATIBLE_WITH_PROCESS_TYPE,

        /// <remarks/>
        TRIGGER_TYPE_NOT_ALLOWED_FOR_SUBFLOW,

        /// <remarks/>
        TYPE_MAPPING_DUPLICATED,

        /// <remarks/>
        TYPE_MAPPING_NAME_MISSING,

        /// <remarks/>
        TYPE_MAPPING_NOT_FOUND,

        /// <remarks/>
        TYPE_MAPPING_NOT_SUPPORTED,

        /// <remarks/>
        TYPE_MAPPING_NOT_SUPPORTED_FOR_API_VERSION,

        /// <remarks/>
        TYPE_MAPPING_NOT_SUPPORTED_FOR_PROCESS_TYPE,

        /// <remarks/>
        UNEXPECTED_ERROR,

        /// <remarks/>
        VALIDATION_EXCEPTION,

        /// <remarks/>
        VALUE_CHAR_LIMIT_EXCEEDED,

        /// <remarks/>
        VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE,

        /// <remarks/>
        VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION,

        /// <remarks/>
        VARIABLE_FIELD_REQUIRED_FOR_DATATYPE,

        /// <remarks/>
        VARIABLE_SCALE_EXCEEDS_LIMIT,

        /// <remarks/>
        VARIABLE_SCALE_NEGATIVE_INTEGER,

        /// <remarks/>
        VARIABLE_SCALE_NULL,

        /// <remarks/>
        VERSION_NOT_VALID,

        /// <remarks/>
        VISIBILITY_RULE_EXCEEDS_CONDITION_LIMIT,

        /// <remarks/>
        VISIBILITY_RULE_NOT_AVAILABLE_IN_ORG,

        /// <remarks/>
        VISIBILITY_RULE_NOT_SUPPORTED_FOR_API_VERSION,

        /// <remarks/>
        VISIBILITY_RULE_NOT_SUPPORTED_FOR_PROCESSTYPE,

        /// <remarks/>
        VISIBILITY_RULE_NO_CONDITIONS,

        /// <remarks/>
        WAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL,

        /// <remarks/>
        WAITEVENT_DUPLICATE_INPUT_PARAM,

        /// <remarks/>
        WAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE,

        /// <remarks/>
        WAITEVENT_INPUT_REQUIRES_LITERAL_VALUE,

        /// <remarks/>
        WAITEVENT_INVALID_CONDITION_LOGIC,

        /// <remarks/>
        WAITEVENT_MISSING,

        /// <remarks/>
        WAITEVENT_MISSING_CONNECTOR,

        /// <remarks/>
        WAITEVENT_MISSING_EVENTTYPE,

        /// <remarks/>
        WAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE,

        /// <remarks/>
        WAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE,

        /// <remarks/>
        WAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD,

        /// <remarks/>
        WAITEVENT_RELATIVEALARM_INVALID_FIELD,

        /// <remarks/>
        WAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE,

        /// <remarks/>
        WAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER,

        /// <remarks/>
        WAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT,

        /// <remarks/>
        WAITEVENT_REQUIRED_INPUT_MISSING,

        /// <remarks/>
        WAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED,

        /// <remarks/>
        WORKFLOW_MISSING_PROCESSMETADATAVALUES,

        /// <remarks/>
        WORKFLOW_OBJECTTYPE_NOT_FOUND,

        /// <remarks/>
        WORKFLOW_OBJECTTYPE_NOT_SUPPORTED,

        /// <remarks/>
        WORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE,

        /// <remarks/>
        WORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT,

        /// <remarks/>
        WORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT,

        /// <remarks/>
        WORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME,

        /// <remarks/>
        WORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME,

        /// <remarks/>
        WORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT,

        /// <remarks/>
        WORKFLOW_TRIGGERTYPE_INVALID_VALUE
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class GetUserInfoResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool accessibilityModeField;
        private bool chatterExternalField;
        private string currencySymbolField;
        private int orgAttachmentFileSizeLimitField;
        private string orgDefaultCurrencyIsoCodeField;
        private string orgDefaultCurrencyLocaleField;
        private bool orgDisallowHtmlAttachmentsField;
        private bool orgHasPersonAccountsField;
        private string organizationIdField;
        private bool organizationMultiCurrencyField;
        private string organizationNameField;
        private string profileIdField;
        private string roleIdField;
        private int sessionSecondsValidField;
        private string userDefaultCurrencyIsoCodeField;
        private string userEmailField;
        private string userFullNameField;
        private string userIdField;
        private string userLanguageField;
        private string userLocaleField;
        private string userNameField;
        private string userTimeZoneField;
        private string userTypeField;
        private string userUiSkinField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool accessibilityMode
        {
            get
            {
                return accessibilityModeField;
            }

            set
            {
                accessibilityModeField = value;
                RaisePropertyChanged("accessibilityMode");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool chatterExternal
        {
            get
            {
                return chatterExternalField;
            }

            set
            {
                chatterExternalField = value;
                RaisePropertyChanged("chatterExternal");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string currencySymbol
        {
            get
            {
                return currencySymbolField;
            }

            set
            {
                currencySymbolField = value;
                RaisePropertyChanged("currencySymbol");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public int orgAttachmentFileSizeLimit
        {
            get
            {
                return orgAttachmentFileSizeLimitField;
            }

            set
            {
                orgAttachmentFileSizeLimitField = value;
                RaisePropertyChanged("orgAttachmentFileSizeLimit");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string orgDefaultCurrencyIsoCode
        {
            get
            {
                return orgDefaultCurrencyIsoCodeField;
            }

            set
            {
                orgDefaultCurrencyIsoCodeField = value;
                RaisePropertyChanged("orgDefaultCurrencyIsoCode");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public string orgDefaultCurrencyLocale
        {
            get
            {
                return orgDefaultCurrencyLocaleField;
            }

            set
            {
                orgDefaultCurrencyLocaleField = value;
                RaisePropertyChanged("orgDefaultCurrencyLocale");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public bool orgDisallowHtmlAttachments
        {
            get
            {
                return orgDisallowHtmlAttachmentsField;
            }

            set
            {
                orgDisallowHtmlAttachmentsField = value;
                RaisePropertyChanged("orgDisallowHtmlAttachments");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public bool orgHasPersonAccounts
        {
            get
            {
                return orgHasPersonAccountsField;
            }

            set
            {
                orgHasPersonAccountsField = value;
                RaisePropertyChanged("orgHasPersonAccounts");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public string organizationId
        {
            get
            {
                return organizationIdField;
            }

            set
            {
                organizationIdField = value;
                RaisePropertyChanged("organizationId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 9)]
        public bool organizationMultiCurrency
        {
            get
            {
                return organizationMultiCurrencyField;
            }

            set
            {
                organizationMultiCurrencyField = value;
                RaisePropertyChanged("organizationMultiCurrency");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 10)]
        public string organizationName
        {
            get
            {
                return organizationNameField;
            }

            set
            {
                organizationNameField = value;
                RaisePropertyChanged("organizationName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 11)]
        public string profileId
        {
            get
            {
                return profileIdField;
            }

            set
            {
                profileIdField = value;
                RaisePropertyChanged("profileId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 12)]
        public string roleId
        {
            get
            {
                return roleIdField;
            }

            set
            {
                roleIdField = value;
                RaisePropertyChanged("roleId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 13)]
        public int sessionSecondsValid
        {
            get
            {
                return sessionSecondsValidField;
            }

            set
            {
                sessionSecondsValidField = value;
                RaisePropertyChanged("sessionSecondsValid");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 14)]
        public string userDefaultCurrencyIsoCode
        {
            get
            {
                return userDefaultCurrencyIsoCodeField;
            }

            set
            {
                userDefaultCurrencyIsoCodeField = value;
                RaisePropertyChanged("userDefaultCurrencyIsoCode");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 15)]
        public string userEmail
        {
            get
            {
                return userEmailField;
            }

            set
            {
                userEmailField = value;
                RaisePropertyChanged("userEmail");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 16)]
        public string userFullName
        {
            get
            {
                return userFullNameField;
            }

            set
            {
                userFullNameField = value;
                RaisePropertyChanged("userFullName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 17)]
        public string userId
        {
            get
            {
                return userIdField;
            }

            set
            {
                userIdField = value;
                RaisePropertyChanged("userId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 18)]
        public string userLanguage
        {
            get
            {
                return userLanguageField;
            }

            set
            {
                userLanguageField = value;
                RaisePropertyChanged("userLanguage");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 19)]
        public string userLocale
        {
            get
            {
                return userLocaleField;
            }

            set
            {
                userLocaleField = value;
                RaisePropertyChanged("userLocale");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 20)]
        public string userName
        {
            get
            {
                return userNameField;
            }

            set
            {
                userNameField = value;
                RaisePropertyChanged("userName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 21)]
        public string userTimeZone
        {
            get
            {
                return userTimeZoneField;
            }

            set
            {
                userTimeZoneField = value;
                RaisePropertyChanged("userTimeZone");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 22)]
        public string userType
        {
            get
            {
                return userTypeField;
            }

            set
            {
                userTypeField = value;
                RaisePropertyChanged("userType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 23)]
        public string userUiSkin
        {
            get
            {
                return userUiSkinField;
            }

            set
            {
                userUiSkinField = value;
                RaisePropertyChanged("userUiSkin");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class LoginResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string metadataServerUrlField;
        private bool passwordExpiredField;
        private bool sandboxField;
        private string serverUrlField;
        private string sessionIdField;
        private string userIdField;
        private GetUserInfoResult userInfoField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string metadataServerUrl
        {
            get
            {
                return metadataServerUrlField;
            }

            set
            {
                metadataServerUrlField = value;
                RaisePropertyChanged("metadataServerUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool passwordExpired
        {
            get
            {
                return passwordExpiredField;
            }

            set
            {
                passwordExpiredField = value;
                RaisePropertyChanged("passwordExpired");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool sandbox
        {
            get
            {
                return sandboxField;
            }

            set
            {
                sandboxField = value;
                RaisePropertyChanged("sandbox");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string serverUrl
        {
            get
            {
                return serverUrlField;
            }

            set
            {
                serverUrlField = value;
                RaisePropertyChanged("serverUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string sessionId
        {
            get
            {
                return sessionIdField;
            }

            set
            {
                sessionIdField = value;
                RaisePropertyChanged("sessionId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public string userId
        {
            get
            {
                return userIdField;
            }

            set
            {
                userIdField = value;
                RaisePropertyChanged("userId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public GetUserInfoResult userInfo
        {
            get
            {
                return userInfoField;
            }

            set
            {
                userInfoField = value;
                RaisePropertyChanged("userInfo");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class UnexpectedErrorFault : ApiFault
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class InvalidIdFault : ApiFault
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class InvalidOldPasswordFault : ApiFault
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class InvalidNewPasswordFault : ApiFault
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class InvalidQueryLocatorFault : ApiFault
    {
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlInclude(typeof(MalformedSearchFault))]
    [System.Xml.Serialization.XmlInclude(typeof(MalformedQueryFault))]
    [System.Xml.Serialization.XmlInclude(typeof(InvalidSObjectFault))]
    [System.Xml.Serialization.XmlInclude(typeof(InvalidFieldFault))]
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class ApiQueryFault : ApiFault
    {
        private int rowField;
        private int columnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public int row
        {
            get
            {
                return rowField;
            }

            set
            {
                rowField = value;
                RaisePropertyChanged("row");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public int column
        {
            get
            {
                return columnField;
            }

            set
            {
                columnField = value;
                RaisePropertyChanged("column");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class MalformedSearchFault : ApiQueryFault
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class MalformedQueryFault : ApiQueryFault
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class InvalidSObjectFault : ApiQueryFault
    {
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:fault.partner.soap.sforce.com")]
    public partial class InvalidFieldFault : ApiQueryFault
    {
    }

    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContract(Namespace = "urn:partner.soap.sforce.com", ConfigurationName = "Partner.Soap")]
    public interface Soap
    {

        // CODEGEN: Generating message contract since message loginRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(LoginFault), Action = "", Name = "LoginFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        loginResponse login(loginRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<loginResponse> loginAsync(loginRequest request);

        // CODEGEN: Generating message contract since message describeSObjectRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeSObjectResponse describeSObject(describeSObjectRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeSObjectResponse> describeSObjectAsync(describeSObjectRequest request);

        // CODEGEN: Generating message contract since message describeSObjectsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeSObjectsResponse describeSObjects(describeSObjectsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeSObjectsResponse> describeSObjectsAsync(describeSObjectsRequest request);

        // CODEGEN: Generating message contract since message describeGlobalRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeGlobalResponse describeGlobal(describeGlobalRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeGlobalResponse> describeGlobalAsync(describeGlobalRequest request);

        // CODEGEN: Generating message contract since message describeDataCategoryGroupsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeDataCategoryGroupsResponse describeDataCategoryGroups(describeDataCategoryGroupsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeDataCategoryGroupsResponse> describeDataCategoryGroupsAsync(describeDataCategoryGroupsRequest request);

        // CODEGEN: Generating message contract since message describeDataCategoryGroupStructuresRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeDataCategoryGroupStructuresResponse describeDataCategoryGroupStructures(describeDataCategoryGroupStructuresRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeDataCategoryGroupStructuresResponse> describeDataCategoryGroupStructuresAsync(describeDataCategoryGroupStructuresRequest request);

        // CODEGEN: Generating message contract since message describeDataCategoryMappingsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeDataCategoryMappingsResponse describeDataCategoryMappings(describeDataCategoryMappingsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeDataCategoryMappingsResponse> describeDataCategoryMappingsAsync(describeDataCategoryMappingsRequest request);

        // CODEGEN: Generating message contract since message describeKnowledgeSettingsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeKnowledgeSettingsResponse describeKnowledgeSettings(describeKnowledgeSettingsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeKnowledgeSettingsResponse> describeKnowledgeSettingsAsync(describeKnowledgeSettingsRequest request);

        // CODEGEN: Generating message contract since message describeAppMenuRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeAppMenuResponse describeAppMenu(describeAppMenuRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeAppMenuResponse> describeAppMenuAsync(describeAppMenuRequest request);

        // CODEGEN: Generating message contract since message describeGlobalThemeRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeGlobalThemeResponse describeGlobalTheme(describeGlobalThemeRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeGlobalThemeResponse> describeGlobalThemeAsync(describeGlobalThemeRequest request);

        // CODEGEN: Generating message contract since message describeThemeRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeThemeResponse describeTheme(describeThemeRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeThemeResponse> describeThemeAsync(describeThemeRequest request);

        // CODEGEN: Generating message contract since message describeLayoutRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeLayoutResponse describeLayout(describeLayoutRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeLayoutResponse> describeLayoutAsync(describeLayoutRequest request);

        // CODEGEN: Generating message contract since message describeSoftphoneLayoutRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeSoftphoneLayoutResponse describeSoftphoneLayout(describeSoftphoneLayoutRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeSoftphoneLayoutResponse> describeSoftphoneLayoutAsync(describeSoftphoneLayoutRequest request);

        // CODEGEN: Generating message contract since message describeSearchLayoutsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeSearchLayoutsResponse describeSearchLayouts(describeSearchLayoutsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeSearchLayoutsResponse> describeSearchLayoutsAsync(describeSearchLayoutsRequest request);

        // CODEGEN: Generating message contract since message describeSearchableEntitiesRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeSearchableEntitiesResponse describeSearchableEntities(describeSearchableEntitiesRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeSearchableEntitiesResponse> describeSearchableEntitiesAsync(describeSearchableEntitiesRequest request);

        // CODEGEN: Generating message contract since message describeSearchScopeOrderRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeSearchScopeOrderResponse describeSearchScopeOrder(describeSearchScopeOrderRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeSearchScopeOrderResponse> describeSearchScopeOrderAsync(describeSearchScopeOrderRequest request);

        // CODEGEN: Generating message contract since message describeCompactLayoutsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeCompactLayoutsResponse describeCompactLayouts(describeCompactLayoutsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeCompactLayoutsResponse> describeCompactLayoutsAsync(describeCompactLayoutsRequest request);

        // CODEGEN: Generating message contract since message describePathAssistantsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describePathAssistantsResponse describePathAssistants(describePathAssistantsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describePathAssistantsResponse> describePathAssistantsAsync(describePathAssistantsRequest request);

        // CODEGEN: Generating message contract since message describeApprovalLayoutRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeApprovalLayoutResponse describeApprovalLayout(describeApprovalLayoutRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeApprovalLayoutResponse> describeApprovalLayoutAsync(describeApprovalLayoutRequest request);

        // CODEGEN: Generating message contract since message describeSoqlListViewsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeSoqlListViewsResponse describeSoqlListViews(describeSoqlListViewsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeSoqlListViewsResponse> describeSoqlListViewsAsync(describeSoqlListViewsRequest request);

        // CODEGEN: Generating message contract since message executeListViewRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        executeListViewResponse executeListView(executeListViewRequest1 request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<executeListViewResponse> executeListViewAsync(executeListViewRequest1 request);

        // CODEGEN: Generating message contract since message describeSObjectListViewsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeSObjectListViewsResponse describeSObjectListViews(describeSObjectListViewsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeSObjectListViewsResponse> describeSObjectListViewsAsync(describeSObjectListViewsRequest request);

        // CODEGEN: Generating message contract since message describeTabsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeTabsResponse describeTabs(describeTabsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeTabsResponse> describeTabsAsync(describeTabsRequest request);

        // CODEGEN: Generating message contract since message describeAllTabsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeAllTabsResponse describeAllTabs(describeAllTabsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeAllTabsResponse> describeAllTabsAsync(describeAllTabsRequest request);

        // CODEGEN: Generating message contract since message describePrimaryCompactLayoutsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describePrimaryCompactLayoutsResponse describePrimaryCompactLayouts(describePrimaryCompactLayoutsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describePrimaryCompactLayoutsResponse> describePrimaryCompactLayoutsAsync(describePrimaryCompactLayoutsRequest request);

        // CODEGEN: Generating message contract since message createRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        createResponse create(createRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<createResponse> createAsync(createRequest request);

        // CODEGEN: Generating message contract since message updateRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        updateResponse update(updateRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<updateResponse> updateAsync(updateRequest request);

        // CODEGEN: Generating message contract since message upsertRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        upsertResponse upsert(upsertRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<upsertResponse> upsertAsync(upsertRequest request);

        // CODEGEN: Generating message contract since message mergeRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        mergeResponse merge(mergeRequest1 request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<mergeResponse> mergeAsync(mergeRequest1 request);

        // CODEGEN: Generating message contract since message deleteRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        deleteResponse delete(deleteRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<deleteResponse> deleteAsync(deleteRequest request);

        // CODEGEN: Generating message contract since message undeleteRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        undeleteResponse undelete(undeleteRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<undeleteResponse> undeleteAsync(undeleteRequest request);

        // CODEGEN: Generating message contract since message emptyRecycleBinRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        emptyRecycleBinResponse emptyRecycleBin(emptyRecycleBinRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<emptyRecycleBinResponse> emptyRecycleBinAsync(emptyRecycleBinRequest request);

        // CODEGEN: Generating message contract since message retrieveRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(MalformedQueryFault), Action = "", Name = "MalformedQueryFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        retrieveResponse retrieve(retrieveRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<retrieveResponse> retrieveAsync(retrieveRequest request);

        // CODEGEN: Generating message contract since message processRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        processResponse process(processRequest1 request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<processResponse> processAsync(processRequest1 request);

        // CODEGEN: Generating message contract since message convertLeadRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        convertLeadResponse convertLead(convertLeadRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<convertLeadResponse> convertLeadAsync(convertLeadRequest request);

        // CODEGEN: Generating message contract since message logoutRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        logoutResponse logout(logoutRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<logoutResponse> logoutAsync(logoutRequest request);

        // CODEGEN: Generating message contract since message invalidateSessionsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        invalidateSessionsResponse invalidateSessions(invalidateSessionsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<invalidateSessionsResponse> invalidateSessionsAsync(invalidateSessionsRequest request);

        // CODEGEN: Generating message contract since message getDeletedRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        getDeletedResponse getDeleted(getDeletedRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<getDeletedResponse> getDeletedAsync(getDeletedRequest request);

        // CODEGEN: Generating message contract since message getUpdatedRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        getUpdatedResponse getUpdated(getUpdatedRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<getUpdatedResponse> getUpdatedAsync(getUpdatedRequest request);

        // CODEGEN: Generating message contract since message queryRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(MalformedQueryFault), Action = "", Name = "MalformedQueryFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidQueryLocatorFault), Action = "", Name = "InvalidQueryLocatorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        queryResponse query(queryRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<queryResponse> queryAsync(queryRequest request);

        // CODEGEN: Generating message contract since message queryAllRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(MalformedQueryFault), Action = "", Name = "MalformedQueryFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidQueryLocatorFault), Action = "", Name = "InvalidQueryLocatorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        queryAllResponse queryAll(queryAllRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<queryAllResponse> queryAllAsync(queryAllRequest request);

        // CODEGEN: Generating message contract since message queryMoreRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidQueryLocatorFault), Action = "", Name = "InvalidQueryLocatorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(MalformedQueryFault), Action = "", Name = "MalformedQueryFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        queryMoreResponse queryMore(queryMoreRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<queryMoreResponse> queryMoreAsync(queryMoreRequest request);

        // CODEGEN: Generating message contract since message searchRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(MalformedSearchFault), Action = "", Name = "MalformedSearchFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        searchResponse search(searchRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<searchResponse> searchAsync(searchRequest request);

        // CODEGEN: Generating message contract since message getServerTimestampRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        getServerTimestampResponse getServerTimestamp(getServerTimestampRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<getServerTimestampResponse> getServerTimestampAsync(getServerTimestampRequest request);

        // CODEGEN: Generating message contract since message setPasswordRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidNewPasswordFault), Action = "", Name = "InvalidNewPasswordFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        setPasswordResponse setPassword(setPasswordRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<setPasswordResponse> setPasswordAsync(setPasswordRequest request);

        // CODEGEN: Generating message contract since message changeOwnPasswordRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidNewPasswordFault), Action = "", Name = "InvalidNewPasswordFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidOldPasswordFault), Action = "", Name = "InvalidOldPasswordFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        changeOwnPasswordResponse changeOwnPassword(changeOwnPasswordRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<changeOwnPasswordResponse> changeOwnPasswordAsync(changeOwnPasswordRequest request);

        // CODEGEN: Generating message contract since message resetPasswordRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        resetPasswordResponse resetPassword(resetPasswordRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<resetPasswordResponse> resetPasswordAsync(resetPasswordRequest request);

        // CODEGEN: Generating message contract since message getUserInfoRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        getUserInfoResponse getUserInfo(getUserInfoRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<getUserInfoResponse> getUserInfoAsync(getUserInfoRequest request);

        // CODEGEN: Generating message contract since message deleteByExampleRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        deleteByExampleResponse deleteByExample(deleteByExampleRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<deleteByExampleResponse> deleteByExampleAsync(deleteByExampleRequest request);

        // CODEGEN: Generating message contract since message sendEmailMessageRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        sendEmailMessageResponse sendEmailMessage(sendEmailMessageRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<sendEmailMessageResponse> sendEmailMessageAsync(sendEmailMessageRequest request);

        // CODEGEN: Generating message contract since message sendEmailRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        sendEmailResponse sendEmail(sendEmailRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<sendEmailResponse> sendEmailAsync(sendEmailRequest request);

        // CODEGEN: Generating message contract since message renderEmailTemplateRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        renderEmailTemplateResponse renderEmailTemplate(renderEmailTemplateRequest1 request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<renderEmailTemplateResponse> renderEmailTemplateAsync(renderEmailTemplateRequest1 request);

        // CODEGEN: Generating message contract since message renderStoredEmailTemplateRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        renderStoredEmailTemplateResponse renderStoredEmailTemplate(renderStoredEmailTemplateRequest1 request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<renderStoredEmailTemplateResponse> renderStoredEmailTemplateAsync(renderStoredEmailTemplateRequest1 request);

        // CODEGEN: Generating message contract since message performQuickActionsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        performQuickActionsResponse performQuickActions(performQuickActionsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<performQuickActionsResponse> performQuickActionsAsync(performQuickActionsRequest request);

        // CODEGEN: Generating message contract since message describeQuickActionsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeQuickActionsResponse describeQuickActions(describeQuickActionsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeQuickActionsResponse> describeQuickActionsAsync(describeQuickActionsRequest request);

        // CODEGEN: Generating message contract since message describeQuickActionsForRecordTypeRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeQuickActionsForRecordTypeResponse describeQuickActionsForRecordType(describeQuickActionsForRecordTypeRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeQuickActionsForRecordTypeResponse> describeQuickActionsForRecordTypeAsync(describeQuickActionsForRecordTypeRequest request);

        // CODEGEN: Generating message contract since message describeAvailableQuickActionsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeAvailableQuickActionsResponse describeAvailableQuickActions(describeAvailableQuickActionsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeAvailableQuickActionsResponse> describeAvailableQuickActionsAsync(describeAvailableQuickActionsRequest request);

        // CODEGEN: Generating message contract since message retrieveQuickActionTemplatesRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        retrieveQuickActionTemplatesResponse retrieveQuickActionTemplates(retrieveQuickActionTemplatesRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<retrieveQuickActionTemplatesResponse> retrieveQuickActionTemplatesAsync(retrieveQuickActionTemplatesRequest request);

        // CODEGEN: Generating message contract since message retrieveMassQuickActionTemplatesRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        retrieveMassQuickActionTemplatesResponse retrieveMassQuickActionTemplates(retrieveMassQuickActionTemplatesRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<retrieveMassQuickActionTemplatesResponse> retrieveMassQuickActionTemplatesAsync(retrieveMassQuickActionTemplatesRequest request);

        // CODEGEN: Generating message contract since message describeVisualForceRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeVisualForceResponse describeVisualForce(describeVisualForceRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeVisualForceResponse> describeVisualForceAsync(describeVisualForceRequest request);

        // CODEGEN: Generating message contract since message findDuplicatesRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidSObjectFault), Action = "", Name = "InvalidSObjectFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(InvalidFieldFault), Action = "", Name = "InvalidFieldFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        findDuplicatesResponse findDuplicates(findDuplicatesRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<findDuplicatesResponse> findDuplicatesAsync(findDuplicatesRequest request);

        // CODEGEN: Generating message contract since message findDuplicatesByIdsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.FaultContract(typeof(InvalidIdFault), Action = "", Name = "InvalidIdFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.FaultContract(typeof(UnexpectedErrorFault), Action = "", Name = "UnexpectedErrorFault", Namespace = "urn:fault.partner.soap.sforce.com")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        findDuplicatesByIdsResponse findDuplicatesByIds(findDuplicatesByIdsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<findDuplicatesByIdsResponse> findDuplicatesByIdsAsync(findDuplicatesByIdsRequest request);

        // CODEGEN: Generating message contract since message describeNounsRequest has headers
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormat(SupportFaults = true)]
        [System.ServiceModel.ServiceKnownType(typeof(ApiFault))]
        describeNounsResponse describeNouns(describeNounsRequest request);
        [System.ServiceModel.OperationContract(Action = "", ReplyAction = "*")]
        System.Threading.Tasks.Task<describeNounsResponse> describeNounsAsync(describeNounsRequest request);
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class LoginScopeHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string organizationIdField;
        private string portalIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string organizationId
        {
            get
            {
                return organizationIdField;
            }

            set
            {
                organizationIdField = value;
                RaisePropertyChanged("organizationId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string portalId
        {
            get
            {
                return portalIdField;
            }

            set
            {
                portalIdField = value;
                RaisePropertyChanged("portalId");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class CallOptions : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string clientField;
        private string defaultNamespaceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string client
        {
            get
            {
                return clientField;
            }

            set
            {
                clientField = value;
                RaisePropertyChanged("client");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string defaultNamespace
        {
            get
            {
                return defaultNamespaceField;
            }

            set
            {
                defaultNamespaceField = value;
                RaisePropertyChanged("defaultNamespace");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "login", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class loginRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LoginScopeHeader LoginScopeHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string username;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public string password;

        public loginRequest() : base()
        {
        }

        public loginRequest(LoginScopeHeader LoginScopeHeader, CallOptions CallOptions, string username, string password) : base()
        {
            this.LoginScopeHeader = LoginScopeHeader;
            this.CallOptions = CallOptions;
            this.username = username;
            this.password = password;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "loginResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class loginResponse
    {
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public LoginResult result;

        public loginResponse() : base()
        {
        }

        public loginResponse(LoginResult result) : base()
        {
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class SessionHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string sessionIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string sessionId
        {
            get
            {
                return sessionIdField;
            }

            set
            {
                sessionIdField = value;
                RaisePropertyChanged("sessionId");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class PackageVersion : object, System.ComponentModel.INotifyPropertyChanged
    {
        private int majorNumberField;
        private int minorNumberField;
        private string namespaceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public int majorNumber
        {
            get
            {
                return majorNumberField;
            }

            set
            {
                majorNumberField = value;
                RaisePropertyChanged("majorNumber");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public int minorNumber
        {
            get
            {
                return minorNumberField;
            }

            set
            {
                minorNumberField = value;
                RaisePropertyChanged("minorNumber");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string @namespace
        {
            get
            {
                return namespaceField;
            }

            set
            {
                namespaceField = value;
                RaisePropertyChanged("namespace");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class LocaleOptions : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string languageField;
        private bool localizeErrorsField;
        private bool localizeErrorsFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string language
        {
            get
            {
                return languageField;
            }

            set
            {
                languageField = value;
                RaisePropertyChanged("language");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool localizeErrors
        {
            get
            {
                return localizeErrorsField;
            }

            set
            {
                localizeErrorsField = value;
                RaisePropertyChanged("localizeErrors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool localizeErrorsSpecified
        {
            get
            {
                return localizeErrorsFieldSpecified;
            }

            set
            {
                localizeErrorsFieldSpecified = value;
                RaisePropertyChanged("localizeErrorsSpecified");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class LimitInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        private int currentField;
        private int limitField;
        private string typeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public int current
        {
            get
            {
                return currentField;
            }

            set
            {
                currentField = value;
                RaisePropertyChanged("current");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public int limit
        {
            get
            {
                return limitField;
            }

            set
            {
                limitField = value;
                RaisePropertyChanged("limit");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSObjectResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ActionOverride[] actionOverridesField;
        private bool activateableField;
        private string associateEntityTypeField;
        private string associateParentEntityField;
        private ChildRelationship[] childRelationshipsField;
        private bool compactLayoutableField;
        private bool createableField;
        private bool customField;
        private bool customSettingField;
        private bool dataTranslationEnabledField;
        private bool dataTranslationEnabledFieldSpecified;
        private bool deepCloneableField;
        private string defaultImplementationField;
        private bool deletableField;
        private bool deprecatedAndHiddenField;
        private bool feedEnabledField;
        private Field[] fieldsField;
        private bool hasSubtypesField;
        private bool idEnabledField;
        private string implementedByField;
        private string implementsInterfacesField;
        private bool isInterfaceField;
        private bool isSubtypeField;
        private string keyPrefixField;
        private string labelField;
        private string labelPluralField;
        private bool layoutableField;
        private bool mergeableField;
        private bool mruEnabledField;
        private string nameField;
        private NamedLayoutInfo[] namedLayoutInfosField;
        private string networkScopeFieldNameField;
        private bool queryableField;
        private RecordTypeInfo[] recordTypeInfosField;
        private bool replicateableField;
        private bool retrieveableField;
        private bool searchLayoutableField;
        private bool searchLayoutableFieldSpecified;
        private bool searchableField;
        private ScopeInfo[] supportedScopesField;
        private bool triggerableField;
        private bool triggerableFieldSpecified;
        private bool undeletableField;
        private bool updateableField;
        private string urlDetailField;
        private string urlEditField;
        private string urlNewField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("actionOverrides", IsNullable = true, Order = 0)]
        public ActionOverride[] actionOverrides
        {
            get
            {
                return actionOverridesField;
            }

            set
            {
                actionOverridesField = value;
                RaisePropertyChanged("actionOverrides");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool activateable
        {
            get
            {
                return activateableField;
            }

            set
            {
                activateableField = value;
                RaisePropertyChanged("activateable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string associateEntityType
        {
            get
            {
                return associateEntityTypeField;
            }

            set
            {
                associateEntityTypeField = value;
                RaisePropertyChanged("associateEntityType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string associateParentEntity
        {
            get
            {
                return associateParentEntityField;
            }

            set
            {
                associateParentEntityField = value;
                RaisePropertyChanged("associateParentEntity");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("childRelationships", Order = 4)]
        public ChildRelationship[] childRelationships
        {
            get
            {
                return childRelationshipsField;
            }

            set
            {
                childRelationshipsField = value;
                RaisePropertyChanged("childRelationships");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public bool compactLayoutable
        {
            get
            {
                return compactLayoutableField;
            }

            set
            {
                compactLayoutableField = value;
                RaisePropertyChanged("compactLayoutable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public bool createable
        {
            get
            {
                return createableField;
            }

            set
            {
                createableField = value;
                RaisePropertyChanged("createable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public bool custom
        {
            get
            {
                return customField;
            }

            set
            {
                customField = value;
                RaisePropertyChanged("custom");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public bool customSetting
        {
            get
            {
                return customSettingField;
            }

            set
            {
                customSettingField = value;
                RaisePropertyChanged("customSetting");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 9)]
        public bool dataTranslationEnabled
        {
            get
            {
                return dataTranslationEnabledField;
            }

            set
            {
                dataTranslationEnabledField = value;
                RaisePropertyChanged("dataTranslationEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool dataTranslationEnabledSpecified
        {
            get
            {
                return dataTranslationEnabledFieldSpecified;
            }

            set
            {
                dataTranslationEnabledFieldSpecified = value;
                RaisePropertyChanged("dataTranslationEnabledSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 10)]
        public bool deepCloneable
        {
            get
            {
                return deepCloneableField;
            }

            set
            {
                deepCloneableField = value;
                RaisePropertyChanged("deepCloneable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 11)]
        public string defaultImplementation
        {
            get
            {
                return defaultImplementationField;
            }

            set
            {
                defaultImplementationField = value;
                RaisePropertyChanged("defaultImplementation");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 12)]
        public bool deletable
        {
            get
            {
                return deletableField;
            }

            set
            {
                deletableField = value;
                RaisePropertyChanged("deletable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 13)]
        public bool deprecatedAndHidden
        {
            get
            {
                return deprecatedAndHiddenField;
            }

            set
            {
                deprecatedAndHiddenField = value;
                RaisePropertyChanged("deprecatedAndHidden");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 14)]
        public bool feedEnabled
        {
            get
            {
                return feedEnabledField;
            }

            set
            {
                feedEnabledField = value;
                RaisePropertyChanged("feedEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fields", IsNullable = true, Order = 15)]
        public Field[] fields
        {
            get
            {
                return fieldsField;
            }

            set
            {
                fieldsField = value;
                RaisePropertyChanged("fields");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 16)]
        public bool hasSubtypes
        {
            get
            {
                return hasSubtypesField;
            }

            set
            {
                hasSubtypesField = value;
                RaisePropertyChanged("hasSubtypes");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 17)]
        public bool idEnabled
        {
            get
            {
                return idEnabledField;
            }

            set
            {
                idEnabledField = value;
                RaisePropertyChanged("idEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 18)]
        public string implementedBy
        {
            get
            {
                return implementedByField;
            }

            set
            {
                implementedByField = value;
                RaisePropertyChanged("implementedBy");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 19)]
        public string implementsInterfaces
        {
            get
            {
                return implementsInterfacesField;
            }

            set
            {
                implementsInterfacesField = value;
                RaisePropertyChanged("implementsInterfaces");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 20)]
        public bool isInterface
        {
            get
            {
                return isInterfaceField;
            }

            set
            {
                isInterfaceField = value;
                RaisePropertyChanged("isInterface");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 21)]
        public bool isSubtype
        {
            get
            {
                return isSubtypeField;
            }

            set
            {
                isSubtypeField = value;
                RaisePropertyChanged("isSubtype");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 22)]
        public string keyPrefix
        {
            get
            {
                return keyPrefixField;
            }

            set
            {
                keyPrefixField = value;
                RaisePropertyChanged("keyPrefix");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 23)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 24)]
        public string labelPlural
        {
            get
            {
                return labelPluralField;
            }

            set
            {
                labelPluralField = value;
                RaisePropertyChanged("labelPlural");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 25)]
        public bool layoutable
        {
            get
            {
                return layoutableField;
            }

            set
            {
                layoutableField = value;
                RaisePropertyChanged("layoutable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 26)]
        public bool mergeable
        {
            get
            {
                return mergeableField;
            }

            set
            {
                mergeableField = value;
                RaisePropertyChanged("mergeable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 27)]
        public bool mruEnabled
        {
            get
            {
                return mruEnabledField;
            }

            set
            {
                mruEnabledField = value;
                RaisePropertyChanged("mruEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 28)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("namedLayoutInfos", Order = 29)]
        public NamedLayoutInfo[] namedLayoutInfos
        {
            get
            {
                return namedLayoutInfosField;
            }

            set
            {
                namedLayoutInfosField = value;
                RaisePropertyChanged("namedLayoutInfos");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 30)]
        public string networkScopeFieldName
        {
            get
            {
                return networkScopeFieldNameField;
            }

            set
            {
                networkScopeFieldNameField = value;
                RaisePropertyChanged("networkScopeFieldName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 31)]
        public bool queryable
        {
            get
            {
                return queryableField;
            }

            set
            {
                queryableField = value;
                RaisePropertyChanged("queryable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("recordTypeInfos", Order = 32)]
        public RecordTypeInfo[] recordTypeInfos
        {
            get
            {
                return recordTypeInfosField;
            }

            set
            {
                recordTypeInfosField = value;
                RaisePropertyChanged("recordTypeInfos");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 33)]
        public bool replicateable
        {
            get
            {
                return replicateableField;
            }

            set
            {
                replicateableField = value;
                RaisePropertyChanged("replicateable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 34)]
        public bool retrieveable
        {
            get
            {
                return retrieveableField;
            }

            set
            {
                retrieveableField = value;
                RaisePropertyChanged("retrieveable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 35)]
        public bool searchLayoutable
        {
            get
            {
                return searchLayoutableField;
            }

            set
            {
                searchLayoutableField = value;
                RaisePropertyChanged("searchLayoutable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool searchLayoutableSpecified
        {
            get
            {
                return searchLayoutableFieldSpecified;
            }

            set
            {
                searchLayoutableFieldSpecified = value;
                RaisePropertyChanged("searchLayoutableSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 36)]
        public bool searchable
        {
            get
            {
                return searchableField;
            }

            set
            {
                searchableField = value;
                RaisePropertyChanged("searchable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("supportedScopes", IsNullable = true, Order = 37)]
        public ScopeInfo[] supportedScopes
        {
            get
            {
                return supportedScopesField;
            }

            set
            {
                supportedScopesField = value;
                RaisePropertyChanged("supportedScopes");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 38)]
        public bool triggerable
        {
            get
            {
                return triggerableField;
            }

            set
            {
                triggerableField = value;
                RaisePropertyChanged("triggerable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool triggerableSpecified
        {
            get
            {
                return triggerableFieldSpecified;
            }

            set
            {
                triggerableFieldSpecified = value;
                RaisePropertyChanged("triggerableSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 39)]
        public bool undeletable
        {
            get
            {
                return undeletableField;
            }

            set
            {
                undeletableField = value;
                RaisePropertyChanged("undeletable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 40)]
        public bool updateable
        {
            get
            {
                return updateableField;
            }

            set
            {
                updateableField = value;
                RaisePropertyChanged("updateable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 41)]
        public string urlDetail
        {
            get
            {
                return urlDetailField;
            }

            set
            {
                urlDetailField = value;
                RaisePropertyChanged("urlDetail");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 42)]
        public string urlEdit
        {
            get
            {
                return urlEditField;
            }

            set
            {
                urlEditField = value;
                RaisePropertyChanged("urlEdit");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 43)]
        public string urlNew
        {
            get
            {
                return urlNewField;
            }

            set
            {
                urlNewField = value;
                RaisePropertyChanged("urlNew");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ActionOverride : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string formFactorField;
        private bool isAvailableInTouchField;
        private string nameField;
        private string pageIdField;
        private string urlField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string formFactor
        {
            get
            {
                return formFactorField;
            }

            set
            {
                formFactorField = value;
                RaisePropertyChanged("formFactor");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool isAvailableInTouch
        {
            get
            {
                return isAvailableInTouchField;
            }

            set
            {
                isAvailableInTouchField = value;
                RaisePropertyChanged("isAvailableInTouch");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string pageId
        {
            get
            {
                return pageIdField;
            }

            set
            {
                pageIdField = value;
                RaisePropertyChanged("pageId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string url
        {
            get
            {
                return urlField;
            }

            set
            {
                urlField = value;
                RaisePropertyChanged("url");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ChildRelationship : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool cascadeDeleteField;
        private string childSObjectField;
        private bool deprecatedAndHiddenField;
        private string fieldField;
        private string[] junctionIdListNamesField;
        private string[] junctionReferenceToField;
        private string relationshipNameField;
        private bool restrictedDeleteField;
        private bool restrictedDeleteFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool cascadeDelete
        {
            get
            {
                return cascadeDeleteField;
            }

            set
            {
                cascadeDeleteField = value;
                RaisePropertyChanged("cascadeDelete");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string childSObject
        {
            get
            {
                return childSObjectField;
            }

            set
            {
                childSObjectField = value;
                RaisePropertyChanged("childSObject");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool deprecatedAndHidden
        {
            get
            {
                return deprecatedAndHiddenField;
            }

            set
            {
                deprecatedAndHiddenField = value;
                RaisePropertyChanged("deprecatedAndHidden");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string field
        {
            get
            {
                return fieldField;
            }

            set
            {
                fieldField = value;
                RaisePropertyChanged("field");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("junctionIdListNames", IsNullable = true, Order = 4)]
        public string[] junctionIdListNames
        {
            get
            {
                return junctionIdListNamesField;
            }

            set
            {
                junctionIdListNamesField = value;
                RaisePropertyChanged("junctionIdListNames");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("junctionReferenceTo", IsNullable = true, Order = 5)]
        public string[] junctionReferenceTo
        {
            get
            {
                return junctionReferenceToField;
            }

            set
            {
                junctionReferenceToField = value;
                RaisePropertyChanged("junctionReferenceTo");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string relationshipName
        {
            get
            {
                return relationshipNameField;
            }

            set
            {
                relationshipNameField = value;
                RaisePropertyChanged("relationshipName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public bool restrictedDelete
        {
            get
            {
                return restrictedDeleteField;
            }

            set
            {
                restrictedDeleteField = value;
                RaisePropertyChanged("restrictedDelete");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool restrictedDeleteSpecified
        {
            get
            {
                return restrictedDeleteFieldSpecified;
            }

            set
            {
                restrictedDeleteFieldSpecified = value;
                RaisePropertyChanged("restrictedDeleteSpecified");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class Field : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool aggregatableField;
        private bool aiPredictionFieldField;
        private bool autoNumberField;
        private int byteLengthField;
        private bool calculatedField;
        private string calculatedFormulaField;
        private bool cascadeDeleteField;
        private bool cascadeDeleteFieldSpecified;
        private bool caseSensitiveField;
        private string compoundFieldNameField;
        private string controllerNameField;
        private bool createableField;
        private bool customField;
        private bool dataTranslationEnabledField;
        private bool dataTranslationEnabledFieldSpecified;
        private object defaultValueField;
        private string defaultValueFormulaField;
        private bool defaultedOnCreateField;
        private bool dependentPicklistField;
        private bool dependentPicklistFieldSpecified;
        private bool deprecatedAndHiddenField;
        private int digitsField;
        private bool displayLocationInDecimalField;
        private bool displayLocationInDecimalFieldSpecified;
        private bool encryptedField;
        private bool encryptedFieldSpecified;
        private bool externalIdField;
        private bool externalIdFieldSpecified;
        private string extraTypeInfoField;
        private bool filterableField;
        private FilteredLookupInfo filteredLookupInfoField;
        private bool formulaTreatNullNumberAsZeroField;
        private bool formulaTreatNullNumberAsZeroFieldSpecified;
        private bool groupableField;
        private bool highScaleNumberField;
        private bool highScaleNumberFieldSpecified;
        private bool htmlFormattedField;
        private bool htmlFormattedFieldSpecified;
        private bool idLookupField;
        private string inlineHelpTextField;
        private string labelField;
        private int lengthField;
        private string maskField;
        private string maskTypeField;
        private string nameField1;
        private bool nameFieldField;
        private bool namePointingField;
        private bool namePointingFieldSpecified;
        private bool nillableField;
        private bool permissionableField;
        private PicklistEntry[] picklistValuesField;
        private bool polymorphicForeignKeyField;
        private int precisionField;
        private bool queryByDistanceField;
        private string referenceTargetFieldField;
        private string[] referenceToField;
        private string relationshipNameField;
        private int relationshipOrderField;
        private bool relationshipOrderFieldSpecified;
        private bool restrictedDeleteField;
        private bool restrictedDeleteFieldSpecified;
        private bool restrictedPicklistField;
        private int scaleField;
        private bool searchPrefilterableField;
        private soapType soapTypeField;
        private bool sortableField;
        private bool sortableFieldSpecified;
        private fieldType typeField;
        private bool uniqueField;
        private bool updateableField;
        private bool writeRequiresMasterReadField;
        private bool writeRequiresMasterReadFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool aggregatable
        {
            get
            {
                return aggregatableField;
            }

            set
            {
                aggregatableField = value;
                RaisePropertyChanged("aggregatable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool aiPredictionField
        {
            get
            {
                return aiPredictionFieldField;
            }

            set
            {
                aiPredictionFieldField = value;
                RaisePropertyChanged("aiPredictionField");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool autoNumber
        {
            get
            {
                return autoNumberField;
            }

            set
            {
                autoNumberField = value;
                RaisePropertyChanged("autoNumber");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public int byteLength
        {
            get
            {
                return byteLengthField;
            }

            set
            {
                byteLengthField = value;
                RaisePropertyChanged("byteLength");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool calculated
        {
            get
            {
                return calculatedField;
            }

            set
            {
                calculatedField = value;
                RaisePropertyChanged("calculated");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string calculatedFormula
        {
            get
            {
                return calculatedFormulaField;
            }

            set
            {
                calculatedFormulaField = value;
                RaisePropertyChanged("calculatedFormula");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public bool cascadeDelete
        {
            get
            {
                return cascadeDeleteField;
            }

            set
            {
                cascadeDeleteField = value;
                RaisePropertyChanged("cascadeDelete");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool cascadeDeleteSpecified
        {
            get
            {
                return cascadeDeleteFieldSpecified;
            }

            set
            {
                cascadeDeleteFieldSpecified = value;
                RaisePropertyChanged("cascadeDeleteSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public bool caseSensitive
        {
            get
            {
                return caseSensitiveField;
            }

            set
            {
                caseSensitiveField = value;
                RaisePropertyChanged("caseSensitive");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public string compoundFieldName
        {
            get
            {
                return compoundFieldNameField;
            }

            set
            {
                compoundFieldNameField = value;
                RaisePropertyChanged("compoundFieldName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 9)]
        public string controllerName
        {
            get
            {
                return controllerNameField;
            }

            set
            {
                controllerNameField = value;
                RaisePropertyChanged("controllerName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 10)]
        public bool createable
        {
            get
            {
                return createableField;
            }

            set
            {
                createableField = value;
                RaisePropertyChanged("createable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 11)]
        public bool custom
        {
            get
            {
                return customField;
            }

            set
            {
                customField = value;
                RaisePropertyChanged("custom");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 12)]
        public bool dataTranslationEnabled
        {
            get
            {
                return dataTranslationEnabledField;
            }

            set
            {
                dataTranslationEnabledField = value;
                RaisePropertyChanged("dataTranslationEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool dataTranslationEnabledSpecified
        {
            get
            {
                return dataTranslationEnabledFieldSpecified;
            }

            set
            {
                dataTranslationEnabledFieldSpecified = value;
                RaisePropertyChanged("dataTranslationEnabledSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 13)]
        public object defaultValue
        {
            get
            {
                return defaultValueField;
            }

            set
            {
                defaultValueField = value;
                RaisePropertyChanged("defaultValue");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 14)]
        public string defaultValueFormula
        {
            get
            {
                return defaultValueFormulaField;
            }

            set
            {
                defaultValueFormulaField = value;
                RaisePropertyChanged("defaultValueFormula");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 15)]
        public bool defaultedOnCreate
        {
            get
            {
                return defaultedOnCreateField;
            }

            set
            {
                defaultedOnCreateField = value;
                RaisePropertyChanged("defaultedOnCreate");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 16)]
        public bool dependentPicklist
        {
            get
            {
                return dependentPicklistField;
            }

            set
            {
                dependentPicklistField = value;
                RaisePropertyChanged("dependentPicklist");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool dependentPicklistSpecified
        {
            get
            {
                return dependentPicklistFieldSpecified;
            }

            set
            {
                dependentPicklistFieldSpecified = value;
                RaisePropertyChanged("dependentPicklistSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 17)]
        public bool deprecatedAndHidden
        {
            get
            {
                return deprecatedAndHiddenField;
            }

            set
            {
                deprecatedAndHiddenField = value;
                RaisePropertyChanged("deprecatedAndHidden");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 18)]
        public int digits
        {
            get
            {
                return digitsField;
            }

            set
            {
                digitsField = value;
                RaisePropertyChanged("digits");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 19)]
        public bool displayLocationInDecimal
        {
            get
            {
                return displayLocationInDecimalField;
            }

            set
            {
                displayLocationInDecimalField = value;
                RaisePropertyChanged("displayLocationInDecimal");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool displayLocationInDecimalSpecified
        {
            get
            {
                return displayLocationInDecimalFieldSpecified;
            }

            set
            {
                displayLocationInDecimalFieldSpecified = value;
                RaisePropertyChanged("displayLocationInDecimalSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 20)]
        public bool encrypted
        {
            get
            {
                return encryptedField;
            }

            set
            {
                encryptedField = value;
                RaisePropertyChanged("encrypted");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool encryptedSpecified
        {
            get
            {
                return encryptedFieldSpecified;
            }

            set
            {
                encryptedFieldSpecified = value;
                RaisePropertyChanged("encryptedSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 21)]
        public bool externalId
        {
            get
            {
                return externalIdField;
            }

            set
            {
                externalIdField = value;
                RaisePropertyChanged("externalId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool externalIdSpecified
        {
            get
            {
                return externalIdFieldSpecified;
            }

            set
            {
                externalIdFieldSpecified = value;
                RaisePropertyChanged("externalIdSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 22)]
        public string extraTypeInfo
        {
            get
            {
                return extraTypeInfoField;
            }

            set
            {
                extraTypeInfoField = value;
                RaisePropertyChanged("extraTypeInfo");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 23)]
        public bool filterable
        {
            get
            {
                return filterableField;
            }

            set
            {
                filterableField = value;
                RaisePropertyChanged("filterable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 24)]
        public FilteredLookupInfo filteredLookupInfo
        {
            get
            {
                return filteredLookupInfoField;
            }

            set
            {
                filteredLookupInfoField = value;
                RaisePropertyChanged("filteredLookupInfo");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 25)]
        public bool formulaTreatNullNumberAsZero
        {
            get
            {
                return formulaTreatNullNumberAsZeroField;
            }

            set
            {
                formulaTreatNullNumberAsZeroField = value;
                RaisePropertyChanged("formulaTreatNullNumberAsZero");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool formulaTreatNullNumberAsZeroSpecified
        {
            get
            {
                return formulaTreatNullNumberAsZeroFieldSpecified;
            }

            set
            {
                formulaTreatNullNumberAsZeroFieldSpecified = value;
                RaisePropertyChanged("formulaTreatNullNumberAsZeroSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 26)]
        public bool groupable
        {
            get
            {
                return groupableField;
            }

            set
            {
                groupableField = value;
                RaisePropertyChanged("groupable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 27)]
        public bool highScaleNumber
        {
            get
            {
                return highScaleNumberField;
            }

            set
            {
                highScaleNumberField = value;
                RaisePropertyChanged("highScaleNumber");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool highScaleNumberSpecified
        {
            get
            {
                return highScaleNumberFieldSpecified;
            }

            set
            {
                highScaleNumberFieldSpecified = value;
                RaisePropertyChanged("highScaleNumberSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 28)]
        public bool htmlFormatted
        {
            get
            {
                return htmlFormattedField;
            }

            set
            {
                htmlFormattedField = value;
                RaisePropertyChanged("htmlFormatted");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool htmlFormattedSpecified
        {
            get
            {
                return htmlFormattedFieldSpecified;
            }

            set
            {
                htmlFormattedFieldSpecified = value;
                RaisePropertyChanged("htmlFormattedSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 29)]
        public bool idLookup
        {
            get
            {
                return idLookupField;
            }

            set
            {
                idLookupField = value;
                RaisePropertyChanged("idLookup");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 30)]
        public string inlineHelpText
        {
            get
            {
                return inlineHelpTextField;
            }

            set
            {
                inlineHelpTextField = value;
                RaisePropertyChanged("inlineHelpText");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 31)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 32)]
        public int length
        {
            get
            {
                return lengthField;
            }

            set
            {
                lengthField = value;
                RaisePropertyChanged("length");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 33)]
        public string mask
        {
            get
            {
                return maskField;
            }

            set
            {
                maskField = value;
                RaisePropertyChanged("mask");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 34)]
        public string maskType
        {
            get
            {
                return maskTypeField;
            }

            set
            {
                maskTypeField = value;
                RaisePropertyChanged("maskType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 35)]
        public string name
        {
            get
            {
                return nameField1;
            }

            set
            {
                nameField1 = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 36)]
        public bool nameField
        {
            get
            {
                return nameFieldField;
            }

            set
            {
                nameFieldField = value;
                RaisePropertyChanged("nameField");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 37)]
        public bool namePointing
        {
            get
            {
                return namePointingField;
            }

            set
            {
                namePointingField = value;
                RaisePropertyChanged("namePointing");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool namePointingSpecified
        {
            get
            {
                return namePointingFieldSpecified;
            }

            set
            {
                namePointingFieldSpecified = value;
                RaisePropertyChanged("namePointingSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 38)]
        public bool nillable
        {
            get
            {
                return nillableField;
            }

            set
            {
                nillableField = value;
                RaisePropertyChanged("nillable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 39)]
        public bool permissionable
        {
            get
            {
                return permissionableField;
            }

            set
            {
                permissionableField = value;
                RaisePropertyChanged("permissionable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("picklistValues", IsNullable = true, Order = 40)]
        public PicklistEntry[] picklistValues
        {
            get
            {
                return picklistValuesField;
            }

            set
            {
                picklistValuesField = value;
                RaisePropertyChanged("picklistValues");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 41)]
        public bool polymorphicForeignKey
        {
            get
            {
                return polymorphicForeignKeyField;
            }

            set
            {
                polymorphicForeignKeyField = value;
                RaisePropertyChanged("polymorphicForeignKey");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 42)]
        public int precision
        {
            get
            {
                return precisionField;
            }

            set
            {
                precisionField = value;
                RaisePropertyChanged("precision");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 43)]
        public bool queryByDistance
        {
            get
            {
                return queryByDistanceField;
            }

            set
            {
                queryByDistanceField = value;
                RaisePropertyChanged("queryByDistance");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 44)]
        public string referenceTargetField
        {
            get
            {
                return referenceTargetFieldField;
            }

            set
            {
                referenceTargetFieldField = value;
                RaisePropertyChanged("referenceTargetField");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("referenceTo", IsNullable = true, Order = 45)]
        public string[] referenceTo
        {
            get
            {
                return referenceToField;
            }

            set
            {
                referenceToField = value;
                RaisePropertyChanged("referenceTo");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 46)]
        public string relationshipName
        {
            get
            {
                return relationshipNameField;
            }

            set
            {
                relationshipNameField = value;
                RaisePropertyChanged("relationshipName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 47)]
        public int relationshipOrder
        {
            get
            {
                return relationshipOrderField;
            }

            set
            {
                relationshipOrderField = value;
                RaisePropertyChanged("relationshipOrder");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool relationshipOrderSpecified
        {
            get
            {
                return relationshipOrderFieldSpecified;
            }

            set
            {
                relationshipOrderFieldSpecified = value;
                RaisePropertyChanged("relationshipOrderSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 48)]
        public bool restrictedDelete
        {
            get
            {
                return restrictedDeleteField;
            }

            set
            {
                restrictedDeleteField = value;
                RaisePropertyChanged("restrictedDelete");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool restrictedDeleteSpecified
        {
            get
            {
                return restrictedDeleteFieldSpecified;
            }

            set
            {
                restrictedDeleteFieldSpecified = value;
                RaisePropertyChanged("restrictedDeleteSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 49)]
        public bool restrictedPicklist
        {
            get
            {
                return restrictedPicklistField;
            }

            set
            {
                restrictedPicklistField = value;
                RaisePropertyChanged("restrictedPicklist");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 50)]
        public int scale
        {
            get
            {
                return scaleField;
            }

            set
            {
                scaleField = value;
                RaisePropertyChanged("scale");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 51)]
        public bool searchPrefilterable
        {
            get
            {
                return searchPrefilterableField;
            }

            set
            {
                searchPrefilterableField = value;
                RaisePropertyChanged("searchPrefilterable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 52)]
        public soapType soapType
        {
            get
            {
                return soapTypeField;
            }

            set
            {
                soapTypeField = value;
                RaisePropertyChanged("soapType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 53)]
        public bool sortable
        {
            get
            {
                return sortableField;
            }

            set
            {
                sortableField = value;
                RaisePropertyChanged("sortable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool sortableSpecified
        {
            get
            {
                return sortableFieldSpecified;
            }

            set
            {
                sortableFieldSpecified = value;
                RaisePropertyChanged("sortableSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 54)]
        public fieldType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 55)]
        public bool unique
        {
            get
            {
                return uniqueField;
            }

            set
            {
                uniqueField = value;
                RaisePropertyChanged("unique");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 56)]
        public bool updateable
        {
            get
            {
                return updateableField;
            }

            set
            {
                updateableField = value;
                RaisePropertyChanged("updateable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 57)]
        public bool writeRequiresMasterRead
        {
            get
            {
                return writeRequiresMasterReadField;
            }

            set
            {
                writeRequiresMasterReadField = value;
                RaisePropertyChanged("writeRequiresMasterRead");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool writeRequiresMasterReadSpecified
        {
            get
            {
                return writeRequiresMasterReadFieldSpecified;
            }

            set
            {
                writeRequiresMasterReadFieldSpecified = value;
                RaisePropertyChanged("writeRequiresMasterReadSpecified");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class FilteredLookupInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string[] controllingFieldsField;
        private bool dependentField;
        private bool optionalFilterField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("controllingFields", Order = 0)]
        public string[] controllingFields
        {
            get
            {
                return controllingFieldsField;
            }

            set
            {
                controllingFieldsField = value;
                RaisePropertyChanged("controllingFields");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool dependent
        {
            get
            {
                return dependentField;
            }

            set
            {
                dependentField = value;
                RaisePropertyChanged("dependent");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool optionalFilter
        {
            get
            {
                return optionalFilterField;
            }

            set
            {
                optionalFilterField = value;
                RaisePropertyChanged("optionalFilter");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class PicklistEntry : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool activeField;
        private bool defaultValueField;
        private string labelField;
        private byte[] validForField;
        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool active
        {
            get
            {
                return activeField;
            }

            set
            {
                activeField = value;
                RaisePropertyChanged("active");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool defaultValue
        {
            get
            {
                return defaultValueField;
            }

            set
            {
                defaultValueField = value;
                RaisePropertyChanged("defaultValue");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(DataType = "base64Binary", Order = 3)]
        public byte[] validFor
        {
            get
            {
                return validForField;
            }

            set
            {
                validForField = value;
                RaisePropertyChanged("validFor");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
                RaisePropertyChanged("value");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum soapType
    {

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("tns:ID")]
        tnsID,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:base64Binary")]
        xsdbase64Binary,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:boolean")]
        xsdboolean,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:double")]
        xsddouble,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:int")]
        xsdint,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:long")]
        xsdlong,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:string")]
        xsdstring,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:date")]
        xsddate,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:dateTime")]
        xsddateTime,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:time")]
        xsdtime,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("tns:location")]
        tnslocation,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("tns:address")]
        tnsaddress,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("xsd:anyType")]
        xsdanyType,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("tns:json")]
        tnsjson,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("urn:RelationshipReferenceTo")]
        urnRelationshipReferenceTo,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("urn:JunctionIdListNames")]
        urnJunctionIdListNames,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("urn:SearchLayoutFieldsDisplayed")]
        urnSearchLayoutFieldsDisplayed,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("urn:SearchLayoutField")]
        urnSearchLayoutField,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("urn:SearchLayoutButtonsDisplayed")]
        urnSearchLayoutButtonsDisplayed,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("urn:SearchLayoutButton")]
        urnSearchLayoutButton,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("urn:RecordTypesSupported")]
        urnRecordTypesSupported,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("tns:StringList")]
        tnsStringList,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnum("tns:ChangeEventHeader")]
        tnsChangeEventHeader
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum fieldType
    {

        /// <remarks/>
        @string,

        /// <remarks/>
        picklist,

        /// <remarks/>
        multipicklist,

        /// <remarks/>
        combobox,

        /// <remarks/>
        reference,

        /// <remarks/>
        base64,

        /// <remarks/>
        boolean,

        /// <remarks/>
        currency,

        /// <remarks/>
        textarea,

        /// <remarks/>
        @int,

        /// <remarks/>
        @double,

        /// <remarks/>
        percent,

        /// <remarks/>
        phone,

        /// <remarks/>
        id,

        /// <remarks/>
        date,

        /// <remarks/>
        datetime,

        /// <remarks/>
        time,

        /// <remarks/>
        url,

        /// <remarks/>
        email,

        /// <remarks/>
        encryptedstring,

        /// <remarks/>
        datacategorygroupreference,

        /// <remarks/>
        location,

        /// <remarks/>
        address,

        /// <remarks/>
        anyType,

        /// <remarks/>
        json,

        /// <remarks/>
        complexvalue,

        /// <remarks/>
        @long
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class NamedLayoutInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RecordTypeInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool activeField;
        private bool availableField;
        private bool defaultRecordTypeMappingField;
        private string developerNameField;
        private bool masterField;
        private string nameField;
        private string recordTypeIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool active
        {
            get
            {
                return activeField;
            }

            set
            {
                activeField = value;
                RaisePropertyChanged("active");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool available
        {
            get
            {
                return availableField;
            }

            set
            {
                availableField = value;
                RaisePropertyChanged("available");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool defaultRecordTypeMapping
        {
            get
            {
                return defaultRecordTypeMappingField;
            }

            set
            {
                defaultRecordTypeMappingField = value;
                RaisePropertyChanged("defaultRecordTypeMapping");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string developerName
        {
            get
            {
                return developerNameField;
            }

            set
            {
                developerNameField = value;
                RaisePropertyChanged("developerName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool master
        {
            get
            {
                return masterField;
            }

            set
            {
                masterField = value;
                RaisePropertyChanged("master");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 6)]
        public string recordTypeId
        {
            get
            {
                return recordTypeIdField;
            }

            set
            {
                recordTypeIdField = value;
                RaisePropertyChanged("recordTypeId");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ScopeInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string labelField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSObject", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSObjectRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string sObjectType;

        public describeSObjectRequest() : base()
        {
        }

        public describeSObjectRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string sObjectType) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.sObjectType = sObjectType;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSObjectResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSObjectResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public DescribeSObjectResult result;

        public describeSObjectResponse() : base()
        {
        }

        public describeSObjectResponse(LimitInfo[] LimitInfoHeader, DescribeSObjectResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSObjects", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSObjectsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sObjectType")]
        public string[] sObjectType;

        public describeSObjectsRequest() : base()
        {
        }

        public describeSObjectsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] sObjectType) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.sObjectType = sObjectType;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSObjectsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSObjectsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result", IsNullable = true)]
        public DescribeSObjectResult[] result;

        public describeSObjectsResponse() : base()
        {
        }

        public describeSObjectsResponse(LimitInfo[] LimitInfoHeader, DescribeSObjectResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeGlobalResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string encodingField;
        private int maxBatchSizeField;
        private DescribeGlobalSObjectResult[] sobjectsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string encoding
        {
            get
            {
                return encodingField;
            }

            set
            {
                encodingField = value;
                RaisePropertyChanged("encoding");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public int maxBatchSize
        {
            get
            {
                return maxBatchSizeField;
            }

            set
            {
                maxBatchSizeField = value;
                RaisePropertyChanged("maxBatchSize");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("sobjects", Order = 2)]
        public DescribeGlobalSObjectResult[] sobjects
        {
            get
            {
                return sobjectsField;
            }

            set
            {
                sobjectsField = value;
                RaisePropertyChanged("sobjects");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeGlobalSObjectResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool activateableField;
        private string associateEntityTypeField;
        private string associateParentEntityField;
        private bool createableField;
        private bool customField;
        private bool customSettingField;
        private bool dataTranslationEnabledField;
        private bool dataTranslationEnabledFieldSpecified;
        private bool deepCloneableField;
        private bool deletableField;
        private bool deprecatedAndHiddenField;
        private bool feedEnabledField;
        private bool hasSubtypesField;
        private bool idEnabledField;
        private bool isInterfaceField;
        private bool isSubtypeField;
        private string keyPrefixField;
        private string labelField;
        private string labelPluralField;
        private bool layoutableField;
        private bool mergeableField;
        private bool mruEnabledField;
        private string nameField;
        private bool queryableField;
        private bool replicateableField;
        private bool retrieveableField;
        private bool searchableField;
        private bool triggerableField;
        private bool undeletableField;
        private bool updateableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool activateable
        {
            get
            {
                return activateableField;
            }

            set
            {
                activateableField = value;
                RaisePropertyChanged("activateable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string associateEntityType
        {
            get
            {
                return associateEntityTypeField;
            }

            set
            {
                associateEntityTypeField = value;
                RaisePropertyChanged("associateEntityType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string associateParentEntity
        {
            get
            {
                return associateParentEntityField;
            }

            set
            {
                associateParentEntityField = value;
                RaisePropertyChanged("associateParentEntity");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool createable
        {
            get
            {
                return createableField;
            }

            set
            {
                createableField = value;
                RaisePropertyChanged("createable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool custom
        {
            get
            {
                return customField;
            }

            set
            {
                customField = value;
                RaisePropertyChanged("custom");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public bool customSetting
        {
            get
            {
                return customSettingField;
            }

            set
            {
                customSettingField = value;
                RaisePropertyChanged("customSetting");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public bool dataTranslationEnabled
        {
            get
            {
                return dataTranslationEnabledField;
            }

            set
            {
                dataTranslationEnabledField = value;
                RaisePropertyChanged("dataTranslationEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool dataTranslationEnabledSpecified
        {
            get
            {
                return dataTranslationEnabledFieldSpecified;
            }

            set
            {
                dataTranslationEnabledFieldSpecified = value;
                RaisePropertyChanged("dataTranslationEnabledSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public bool deepCloneable
        {
            get
            {
                return deepCloneableField;
            }

            set
            {
                deepCloneableField = value;
                RaisePropertyChanged("deepCloneable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public bool deletable
        {
            get
            {
                return deletableField;
            }

            set
            {
                deletableField = value;
                RaisePropertyChanged("deletable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 9)]
        public bool deprecatedAndHidden
        {
            get
            {
                return deprecatedAndHiddenField;
            }

            set
            {
                deprecatedAndHiddenField = value;
                RaisePropertyChanged("deprecatedAndHidden");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 10)]
        public bool feedEnabled
        {
            get
            {
                return feedEnabledField;
            }

            set
            {
                feedEnabledField = value;
                RaisePropertyChanged("feedEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 11)]
        public bool hasSubtypes
        {
            get
            {
                return hasSubtypesField;
            }

            set
            {
                hasSubtypesField = value;
                RaisePropertyChanged("hasSubtypes");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 12)]
        public bool idEnabled
        {
            get
            {
                return idEnabledField;
            }

            set
            {
                idEnabledField = value;
                RaisePropertyChanged("idEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 13)]
        public bool isInterface
        {
            get
            {
                return isInterfaceField;
            }

            set
            {
                isInterfaceField = value;
                RaisePropertyChanged("isInterface");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 14)]
        public bool isSubtype
        {
            get
            {
                return isSubtypeField;
            }

            set
            {
                isSubtypeField = value;
                RaisePropertyChanged("isSubtype");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 15)]
        public string keyPrefix
        {
            get
            {
                return keyPrefixField;
            }

            set
            {
                keyPrefixField = value;
                RaisePropertyChanged("keyPrefix");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 16)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 17)]
        public string labelPlural
        {
            get
            {
                return labelPluralField;
            }

            set
            {
                labelPluralField = value;
                RaisePropertyChanged("labelPlural");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 18)]
        public bool layoutable
        {
            get
            {
                return layoutableField;
            }

            set
            {
                layoutableField = value;
                RaisePropertyChanged("layoutable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 19)]
        public bool mergeable
        {
            get
            {
                return mergeableField;
            }

            set
            {
                mergeableField = value;
                RaisePropertyChanged("mergeable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 20)]
        public bool mruEnabled
        {
            get
            {
                return mruEnabledField;
            }

            set
            {
                mruEnabledField = value;
                RaisePropertyChanged("mruEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 21)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 22)]
        public bool queryable
        {
            get
            {
                return queryableField;
            }

            set
            {
                queryableField = value;
                RaisePropertyChanged("queryable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 23)]
        public bool replicateable
        {
            get
            {
                return replicateableField;
            }

            set
            {
                replicateableField = value;
                RaisePropertyChanged("replicateable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 24)]
        public bool retrieveable
        {
            get
            {
                return retrieveableField;
            }

            set
            {
                retrieveableField = value;
                RaisePropertyChanged("retrieveable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 25)]
        public bool searchable
        {
            get
            {
                return searchableField;
            }

            set
            {
                searchableField = value;
                RaisePropertyChanged("searchable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 26)]
        public bool triggerable
        {
            get
            {
                return triggerableField;
            }

            set
            {
                triggerableField = value;
                RaisePropertyChanged("triggerable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 27)]
        public bool undeletable
        {
            get
            {
                return undeletableField;
            }

            set
            {
                undeletableField = value;
                RaisePropertyChanged("undeletable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 28)]
        public bool updateable
        {
            get
            {
                return updateableField;
            }

            set
            {
                updateableField = value;
                RaisePropertyChanged("updateable");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeGlobal", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeGlobalRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;

        public describeGlobalRequest() : base()
        {
        }

        public describeGlobalRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeGlobalResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeGlobalResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public DescribeGlobalResult result;

        public describeGlobalResponse() : base()
        {
        }

        public describeGlobalResponse(LimitInfo[] LimitInfoHeader, DescribeGlobalResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeDataCategoryGroupResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private int categoryCountField;
        private string descriptionField;
        private string labelField;
        private string nameField;
        private string sobjectField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public int categoryCount
        {
            get
            {
                return categoryCountField;
            }

            set
            {
                categoryCountField = value;
                RaisePropertyChanged("categoryCount");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string description
        {
            get
            {
                return descriptionField;
            }

            set
            {
                descriptionField = value;
                RaisePropertyChanged("description");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string sobject
        {
            get
            {
                return sobjectField;
            }

            set
            {
                sobjectField = value;
                RaisePropertyChanged("sobject");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeDataCategoryGroups", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeDataCategoryGroupsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sObjectType")]
        public string[] sObjectType;

        public describeDataCategoryGroupsRequest() : base()
        {
        }

        public describeDataCategoryGroupsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] sObjectType) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.sObjectType = sObjectType;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeDataCategoryGroupsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeDataCategoryGroupsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeDataCategoryGroupResult[] result;

        public describeDataCategoryGroupsResponse() : base()
        {
        }

        public describeDataCategoryGroupsResponse(LimitInfo[] LimitInfoHeader, DescribeDataCategoryGroupResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DataCategoryGroupSobjectTypePair : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string dataCategoryGroupNameField;
        private string sobjectField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string dataCategoryGroupName
        {
            get
            {
                return dataCategoryGroupNameField;
            }

            set
            {
                dataCategoryGroupNameField = value;
                RaisePropertyChanged("dataCategoryGroupName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string sobject
        {
            get
            {
                return sobjectField;
            }

            set
            {
                sobjectField = value;
                RaisePropertyChanged("sobject");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeDataCategoryGroupStructureResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string descriptionField;
        private string labelField;
        private string nameField;
        private string sobjectField;
        private DataCategory[] topCategoriesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string description
        {
            get
            {
                return descriptionField;
            }

            set
            {
                descriptionField = value;
                RaisePropertyChanged("description");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string sobject
        {
            get
            {
                return sobjectField;
            }

            set
            {
                sobjectField = value;
                RaisePropertyChanged("sobject");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("topCategories", Order = 4)]
        public DataCategory[] topCategories
        {
            get
            {
                return topCategoriesField;
            }

            set
            {
                topCategoriesField = value;
                RaisePropertyChanged("topCategories");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DataCategory : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DataCategory[] childCategoriesField;
        private string labelField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("childCategories", Order = 0)]
        public DataCategory[] childCategories
        {
            get
            {
                return childCategoriesField;
            }

            set
            {
                childCategoriesField = value;
                RaisePropertyChanged("childCategories");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeDataCategoryGroupStructures", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeDataCategoryGroupStructuresRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("pairs")]
        public DataCategoryGroupSobjectTypePair[] pairs;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public bool topCategoriesOnly;

        public describeDataCategoryGroupStructuresRequest() : base()
        {
        }

        public describeDataCategoryGroupStructuresRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, DataCategoryGroupSobjectTypePair[] pairs, bool topCategoriesOnly) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.pairs = pairs;
            this.topCategoriesOnly = topCategoriesOnly;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeDataCategoryGroupStructuresResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeDataCategoryGroupStructuresResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeDataCategoryGroupStructureResult[] result;

        public describeDataCategoryGroupStructuresResponse() : base()
        {
        }

        public describeDataCategoryGroupStructuresResponse(LimitInfo[] LimitInfoHeader, DescribeDataCategoryGroupStructureResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeDataCategoryMappingResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string dataCategoryGroupIdField;
        private string dataCategoryGroupLabelField;
        private string dataCategoryGroupNameField;
        private string dataCategoryIdField;
        private string dataCategoryLabelField;
        private string dataCategoryNameField;
        private string idField;
        private string mappedEntityField;
        private string mappedFieldField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string dataCategoryGroupId
        {
            get
            {
                return dataCategoryGroupIdField;
            }

            set
            {
                dataCategoryGroupIdField = value;
                RaisePropertyChanged("dataCategoryGroupId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string dataCategoryGroupLabel
        {
            get
            {
                return dataCategoryGroupLabelField;
            }

            set
            {
                dataCategoryGroupLabelField = value;
                RaisePropertyChanged("dataCategoryGroupLabel");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string dataCategoryGroupName
        {
            get
            {
                return dataCategoryGroupNameField;
            }

            set
            {
                dataCategoryGroupNameField = value;
                RaisePropertyChanged("dataCategoryGroupName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string dataCategoryId
        {
            get
            {
                return dataCategoryIdField;
            }

            set
            {
                dataCategoryIdField = value;
                RaisePropertyChanged("dataCategoryId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string dataCategoryLabel
        {
            get
            {
                return dataCategoryLabelField;
            }

            set
            {
                dataCategoryLabelField = value;
                RaisePropertyChanged("dataCategoryLabel");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string dataCategoryName
        {
            get
            {
                return dataCategoryNameField;
            }

            set
            {
                dataCategoryNameField = value;
                RaisePropertyChanged("dataCategoryName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public string mappedEntity
        {
            get
            {
                return mappedEntityField;
            }

            set
            {
                mappedEntityField = value;
                RaisePropertyChanged("mappedEntity");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public string mappedField
        {
            get
            {
                return mappedFieldField;
            }

            set
            {
                mappedFieldField = value;
                RaisePropertyChanged("mappedField");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeDataCategoryMappings", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeDataCategoryMappingsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;

        public describeDataCategoryMappingsRequest() : base()
        {
        }

        public describeDataCategoryMappingsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeDataCategoryMappingsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeDataCategoryMappingsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeDataCategoryMappingResult[] result;

        public describeDataCategoryMappingsResponse() : base()
        {
        }

        public describeDataCategoryMappingsResponse(LimitInfo[] LimitInfoHeader, DescribeDataCategoryMappingResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class KnowledgeSettings : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string defaultLanguageField;
        private bool knowledgeEnabledField;
        private KnowledgeLanguageItem[] languagesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string defaultLanguage
        {
            get
            {
                return defaultLanguageField;
            }

            set
            {
                defaultLanguageField = value;
                RaisePropertyChanged("defaultLanguage");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool knowledgeEnabled
        {
            get
            {
                return knowledgeEnabledField;
            }

            set
            {
                knowledgeEnabledField = value;
                RaisePropertyChanged("knowledgeEnabled");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("languages", Order = 2)]
        public KnowledgeLanguageItem[] languages
        {
            get
            {
                return languagesField;
            }

            set
            {
                languagesField = value;
                RaisePropertyChanged("languages");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class KnowledgeLanguageItem : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool activeField;
        private string assigneeIdField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool active
        {
            get
            {
                return activeField;
            }

            set
            {
                activeField = value;
                RaisePropertyChanged("active");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string assigneeId
        {
            get
            {
                return assigneeIdField;
            }

            set
            {
                assigneeIdField = value;
                RaisePropertyChanged("assigneeId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeKnowledgeSettings", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeKnowledgeSettingsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;

        public describeKnowledgeSettingsRequest() : base()
        {
        }

        public describeKnowledgeSettingsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeKnowledgeSettingsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeKnowledgeSettingsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public KnowledgeSettings result;

        public describeKnowledgeSettingsResponse() : base()
        {
        }

        public describeKnowledgeSettingsResponse(LimitInfo[] LimitInfoHeader, KnowledgeSettings result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum AppMenuType
    {

        /// <remarks/>
        AppSwitcher,

        /// <remarks/>
        Salesforce1,

        /// <remarks/>
        NetworkTabs
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeAppMenuItem : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeColor[] colorsField;
        private string contentField;
        private DescribeIcon[] iconsField;
        private string labelField;
        private string nameField;
        private string typeField;
        private string urlField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("colors", Order = 0)]
        public DescribeColor[] colors
        {
            get
            {
                return colorsField;
            }

            set
            {
                colorsField = value;
                RaisePropertyChanged("colors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string content
        {
            get
            {
                return contentField;
            }

            set
            {
                contentField = value;
                RaisePropertyChanged("content");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("icons", Order = 2)]
        public DescribeIcon[] icons
        {
            get
            {
                return iconsField;
            }

            set
            {
                iconsField = value;
                RaisePropertyChanged("icons");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string url
        {
            get
            {
                return urlField;
            }

            set
            {
                urlField = value;
                RaisePropertyChanged("url");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeColor : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string colorField;
        private string contextField;
        private string themeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string color
        {
            get
            {
                return colorField;
            }

            set
            {
                colorField = value;
                RaisePropertyChanged("color");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string context
        {
            get
            {
                return contextField;
            }

            set
            {
                contextField = value;
                RaisePropertyChanged("context");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string theme
        {
            get
            {
                return themeField;
            }

            set
            {
                themeField = value;
                RaisePropertyChanged("theme");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeIcon : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string contentTypeField;
        private int? heightField;
        private string themeField;
        private string urlField;
        private int? widthField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string contentType
        {
            get
            {
                return contentTypeField;
            }

            set
            {
                contentTypeField = value;
                RaisePropertyChanged("contentType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public int? height
        {
            get
            {
                return heightField;
            }

            set
            {
                heightField = value;
                RaisePropertyChanged("height");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string theme
        {
            get
            {
                return themeField;
            }

            set
            {
                themeField = value;
                RaisePropertyChanged("theme");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string url
        {
            get
            {
                return urlField;
            }

            set
            {
                urlField = value;
                RaisePropertyChanged("url");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public int? width
        {
            get
            {
                return widthField;
            }

            set
            {
                widthField = value;
                RaisePropertyChanged("width");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeAppMenu", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeAppMenuRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public AppMenuType appMenuType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public string networkId;

        public describeAppMenuRequest() : base()
        {
        }

        public describeAppMenuRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, AppMenuType appMenuType, string networkId) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.appMenuType = appMenuType;
            this.networkId = networkId;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeAppMenuResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeAppMenuResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlArray(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItem("appMenuItems", IsNullable = false)]
        public DescribeAppMenuItem[] result;

        public describeAppMenuResponse() : base()
        {
        }

        public describeAppMenuResponse(LimitInfo[] LimitInfoHeader, DescribeAppMenuItem[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeGlobalTheme : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeGlobalResult globalField;
        private DescribeThemeItem[] themeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public DescribeGlobalResult global
        {
            get
            {
                return globalField;
            }

            set
            {
                globalField = value;
                RaisePropertyChanged("global");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArray(Order = 1)]
        [System.Xml.Serialization.XmlArrayItem("themeItems", IsNullable = false)]
        public DescribeThemeItem[] theme
        {
            get
            {
                return themeField;
            }

            set
            {
                themeField = value;
                RaisePropertyChanged("theme");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeThemeItem : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeColor[] colorsField;
        private DescribeIcon[] iconsField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("colors", Order = 0)]
        public DescribeColor[] colors
        {
            get
            {
                return colorsField;
            }

            set
            {
                colorsField = value;
                RaisePropertyChanged("colors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("icons", Order = 1)]
        public DescribeIcon[] icons
        {
            get
            {
                return iconsField;
            }

            set
            {
                iconsField = value;
                RaisePropertyChanged("icons");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeGlobalTheme", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeGlobalThemeRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;

        public describeGlobalThemeRequest() : base()
        {
        }

        public describeGlobalThemeRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeGlobalThemeResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeGlobalThemeResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public DescribeGlobalTheme result;

        public describeGlobalThemeResponse() : base()
        {
        }

        public describeGlobalThemeResponse(LimitInfo[] LimitInfoHeader, DescribeGlobalTheme result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeTheme", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeThemeRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sobjectType")]
        public string[] sobjectType;

        public describeThemeRequest() : base()
        {
        }

        public describeThemeRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sobjectType) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sobjectType = sobjectType;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeThemeResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeThemeResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlArrayItem("themeItems", IsNullable = false)]
        public DescribeThemeItem[] result;

        public describeThemeResponse() : base()
        {
        }

        public describeThemeResponse(LimitInfo[] LimitInfoHeader, DescribeThemeItem[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayoutResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeLayout[] layoutsField;
        private RecordTypeMapping[] recordTypeMappingsField;
        private bool recordTypeSelectorRequiredField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("layouts", Order = 0)]
        public DescribeLayout[] layouts
        {
            get
            {
                return layoutsField;
            }

            set
            {
                layoutsField = value;
                RaisePropertyChanged("layouts");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("recordTypeMappings", Order = 1)]
        public RecordTypeMapping[] recordTypeMappings
        {
            get
            {
                return recordTypeMappingsField;
            }

            set
            {
                recordTypeMappingsField = value;
                RaisePropertyChanged("recordTypeMappings");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool recordTypeSelectorRequired
        {
            get
            {
                return recordTypeSelectorRequiredField;
            }

            set
            {
                recordTypeSelectorRequiredField = value;
                RaisePropertyChanged("recordTypeSelectorRequired");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayout : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeLayoutButton[] buttonLayoutSectionField;
        private DescribeLayoutSection[] detailLayoutSectionsField;
        private DescribeLayoutSection[] editLayoutSectionsField;
        private DescribeLayoutFeedFilter[] feedViewField;
        private DescribeLayoutSection highlightsPanelLayoutSectionField;
        private string idField;
        private DescribeQuickActionListItemResult[] quickActionListField;
        private DescribeRelatedContentItem[] relatedContentField;
        private RelatedList[] relatedListsField;
        private DescribeLayoutSaveOption[] saveOptionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArray(Order = 0)]
        [System.Xml.Serialization.XmlArrayItem("detailButtons", IsNullable = false)]
        public DescribeLayoutButton[] buttonLayoutSection
        {
            get
            {
                return buttonLayoutSectionField;
            }

            set
            {
                buttonLayoutSectionField = value;
                RaisePropertyChanged("buttonLayoutSection");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("detailLayoutSections", Order = 1)]
        public DescribeLayoutSection[] detailLayoutSections
        {
            get
            {
                return detailLayoutSectionsField;
            }

            set
            {
                detailLayoutSectionsField = value;
                RaisePropertyChanged("detailLayoutSections");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("editLayoutSections", Order = 2)]
        public DescribeLayoutSection[] editLayoutSections
        {
            get
            {
                return editLayoutSectionsField;
            }

            set
            {
                editLayoutSectionsField = value;
                RaisePropertyChanged("editLayoutSections");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArray(Order = 3)]
        [System.Xml.Serialization.XmlArrayItem("feedFilters", IsNullable = false)]
        public DescribeLayoutFeedFilter[] feedView
        {
            get
            {
                return feedViewField;
            }

            set
            {
                feedViewField = value;
                RaisePropertyChanged("feedView");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public DescribeLayoutSection highlightsPanelLayoutSection
        {
            get
            {
                return highlightsPanelLayoutSectionField;
            }

            set
            {
                highlightsPanelLayoutSectionField = value;
                RaisePropertyChanged("highlightsPanelLayoutSection");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArray(Order = 6)]
        [System.Xml.Serialization.XmlArrayItem("quickActionListItems", IsNullable = false)]
        public DescribeQuickActionListItemResult[] quickActionList
        {
            get
            {
                return quickActionListField;
            }

            set
            {
                quickActionListField = value;
                RaisePropertyChanged("quickActionList");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArray(Order = 7)]
        [System.Xml.Serialization.XmlArrayItem("relatedContentItems", IsNullable = false)]
        public DescribeRelatedContentItem[] relatedContent
        {
            get
            {
                return relatedContentField;
            }

            set
            {
                relatedContentField = value;
                RaisePropertyChanged("relatedContent");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("relatedLists", Order = 8)]
        public RelatedList[] relatedLists
        {
            get
            {
                return relatedListsField;
            }

            set
            {
                relatedListsField = value;
                RaisePropertyChanged("relatedLists");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("saveOptions", Order = 9)]
        public DescribeLayoutSaveOption[] saveOptions
        {
            get
            {
                return saveOptionsField;
            }

            set
            {
                saveOptionsField = value;
                RaisePropertyChanged("saveOptions");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayoutButton : object, System.ComponentModel.INotifyPropertyChanged
    {
        private WebLinkWindowType? behaviorField;
        private bool behaviorFieldSpecified;
        private DescribeColor[] colorsField;
        private string contentField;
        private WebLinkType? contentSourceField;
        private bool contentSourceFieldSpecified;
        private bool customField;
        private string encodingField;
        private int? heightField;
        private bool heightFieldSpecified;
        private DescribeIcon[] iconsField;
        private string labelField;
        private bool? menubarField;
        private string nameField;
        private bool overriddenField;
        private bool? resizeableField;
        private bool? scrollbarsField;
        private bool? showsLocationField;
        private bool? showsStatusField;
        private bool? toolbarField;
        private string urlField;
        private int? widthField;
        private bool widthFieldSpecified;
        private WebLinkPosition? windowPositionField;
        private bool windowPositionFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public WebLinkWindowType? behavior
        {
            get
            {
                return behaviorField;
            }

            set
            {
                behaviorField = value;
                RaisePropertyChanged("behavior");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool behaviorSpecified
        {
            get
            {
                return behaviorFieldSpecified;
            }

            set
            {
                behaviorFieldSpecified = value;
                RaisePropertyChanged("behaviorSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("colors", Order = 1)]
        public DescribeColor[] colors
        {
            get
            {
                return colorsField;
            }

            set
            {
                colorsField = value;
                RaisePropertyChanged("colors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string content
        {
            get
            {
                return contentField;
            }

            set
            {
                contentField = value;
                RaisePropertyChanged("content");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public WebLinkType? contentSource
        {
            get
            {
                return contentSourceField;
            }

            set
            {
                contentSourceField = value;
                RaisePropertyChanged("contentSource");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool contentSourceSpecified
        {
            get
            {
                return contentSourceFieldSpecified;
            }

            set
            {
                contentSourceFieldSpecified = value;
                RaisePropertyChanged("contentSourceSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool custom
        {
            get
            {
                return customField;
            }

            set
            {
                customField = value;
                RaisePropertyChanged("custom");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public string encoding
        {
            get
            {
                return encodingField;
            }

            set
            {
                encodingField = value;
                RaisePropertyChanged("encoding");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 6)]
        public int? height
        {
            get
            {
                return heightField;
            }

            set
            {
                heightField = value;
                RaisePropertyChanged("height");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool heightSpecified
        {
            get
            {
                return heightFieldSpecified;
            }

            set
            {
                heightFieldSpecified = value;
                RaisePropertyChanged("heightSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("icons", Order = 7)]
        public DescribeIcon[] icons
        {
            get
            {
                return iconsField;
            }

            set
            {
                iconsField = value;
                RaisePropertyChanged("icons");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 8)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 9)]
        public bool? menubar
        {
            get
            {
                return menubarField;
            }

            set
            {
                menubarField = value;
                RaisePropertyChanged("menubar");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 10)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 11)]
        public bool overridden
        {
            get
            {
                return overriddenField;
            }

            set
            {
                overriddenField = value;
                RaisePropertyChanged("overridden");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 12)]
        public bool? resizeable
        {
            get
            {
                return resizeableField;
            }

            set
            {
                resizeableField = value;
                RaisePropertyChanged("resizeable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 13)]
        public bool? scrollbars
        {
            get
            {
                return scrollbarsField;
            }

            set
            {
                scrollbarsField = value;
                RaisePropertyChanged("scrollbars");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 14)]
        public bool? showsLocation
        {
            get
            {
                return showsLocationField;
            }

            set
            {
                showsLocationField = value;
                RaisePropertyChanged("showsLocation");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 15)]
        public bool? showsStatus
        {
            get
            {
                return showsStatusField;
            }

            set
            {
                showsStatusField = value;
                RaisePropertyChanged("showsStatus");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 16)]
        public bool? toolbar
        {
            get
            {
                return toolbarField;
            }

            set
            {
                toolbarField = value;
                RaisePropertyChanged("toolbar");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 17)]
        public string url
        {
            get
            {
                return urlField;
            }

            set
            {
                urlField = value;
                RaisePropertyChanged("url");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 18)]
        public int? width
        {
            get
            {
                return widthField;
            }

            set
            {
                widthField = value;
                RaisePropertyChanged("width");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool widthSpecified
        {
            get
            {
                return widthFieldSpecified;
            }

            set
            {
                widthFieldSpecified = value;
                RaisePropertyChanged("widthSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 19)]
        public WebLinkPosition? windowPosition
        {
            get
            {
                return windowPositionField;
            }

            set
            {
                windowPositionField = value;
                RaisePropertyChanged("windowPosition");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool windowPositionSpecified
        {
            get
            {
                return windowPositionFieldSpecified;
            }

            set
            {
                windowPositionFieldSpecified = value;
                RaisePropertyChanged("windowPositionSpecified");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum WebLinkWindowType
    {

        /// <remarks/>
        newWindow,

        /// <remarks/>
        sidebar,

        /// <remarks/>
        noSidebar,

        /// <remarks/>
        replace,

        /// <remarks/>
        onClickJavaScript
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum WebLinkType
    {

        /// <remarks/>
        url,

        /// <remarks/>
        sControl,

        /// <remarks/>
        javascript,

        /// <remarks/>
        page,

        /// <remarks/>
        flow
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum WebLinkPosition
    {

        /// <remarks/>
        fullScreen,

        /// <remarks/>
        none,

        /// <remarks/>
        topLeft
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayoutSection : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool collapsedField;
        private int columnsField;
        private string headingField;
        private DescribeLayoutRow[] layoutRowsField;
        private string layoutSectionIdField;
        private string parentLayoutIdField;
        private int rowsField;
        private TabOrderType tabOrderField;
        private bool useCollapsibleSectionField;
        private bool useHeadingField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool collapsed
        {
            get
            {
                return collapsedField;
            }

            set
            {
                collapsedField = value;
                RaisePropertyChanged("collapsed");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public int columns
        {
            get
            {
                return columnsField;
            }

            set
            {
                columnsField = value;
                RaisePropertyChanged("columns");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string heading
        {
            get
            {
                return headingField;
            }

            set
            {
                headingField = value;
                RaisePropertyChanged("heading");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("layoutRows", Order = 3)]
        public DescribeLayoutRow[] layoutRows
        {
            get
            {
                return layoutRowsField;
            }

            set
            {
                layoutRowsField = value;
                RaisePropertyChanged("layoutRows");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string layoutSectionId
        {
            get
            {
                return layoutSectionIdField;
            }

            set
            {
                layoutSectionIdField = value;
                RaisePropertyChanged("layoutSectionId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string parentLayoutId
        {
            get
            {
                return parentLayoutIdField;
            }

            set
            {
                parentLayoutIdField = value;
                RaisePropertyChanged("parentLayoutId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public int rows
        {
            get
            {
                return rowsField;
            }

            set
            {
                rowsField = value;
                RaisePropertyChanged("rows");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public TabOrderType tabOrder
        {
            get
            {
                return tabOrderField;
            }

            set
            {
                tabOrderField = value;
                RaisePropertyChanged("tabOrder");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public bool useCollapsibleSection
        {
            get
            {
                return useCollapsibleSectionField;
            }

            set
            {
                useCollapsibleSectionField = value;
                RaisePropertyChanged("useCollapsibleSection");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 9)]
        public bool useHeading
        {
            get
            {
                return useHeadingField;
            }

            set
            {
                useHeadingField = value;
                RaisePropertyChanged("useHeading");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayoutRow : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeLayoutItem[] layoutItemsField;
        private int numItemsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("layoutItems", Order = 0)]
        public DescribeLayoutItem[] layoutItems
        {
            get
            {
                return layoutItemsField;
            }

            set
            {
                layoutItemsField = value;
                RaisePropertyChanged("layoutItems");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public int numItems
        {
            get
            {
                return numItemsField;
            }

            set
            {
                numItemsField = value;
                RaisePropertyChanged("numItems");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayoutItem : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool editableForNewField;
        private bool editableForUpdateField;
        private string labelField;
        private DescribeLayoutComponent[] layoutComponentsField;
        private bool placeholderField;
        private bool requiredField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool editableForNew
        {
            get
            {
                return editableForNewField;
            }

            set
            {
                editableForNewField = value;
                RaisePropertyChanged("editableForNew");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool editableForUpdate
        {
            get
            {
                return editableForUpdateField;
            }

            set
            {
                editableForUpdateField = value;
                RaisePropertyChanged("editableForUpdate");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("layoutComponents", Order = 3)]
        public DescribeLayoutComponent[] layoutComponents
        {
            get
            {
                return layoutComponentsField;
            }

            set
            {
                layoutComponentsField = value;
                RaisePropertyChanged("layoutComponents");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool placeholder
        {
            get
            {
                return placeholderField;
            }

            set
            {
                placeholderField = value;
                RaisePropertyChanged("placeholder");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public bool required
        {
            get
            {
                return requiredField;
            }

            set
            {
                requiredField = value;
                RaisePropertyChanged("required");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlInclude(typeof(CustomLinkComponent))]
    [System.Xml.Serialization.XmlInclude(typeof(AnalyticsCloudComponent))]
    [System.Xml.Serialization.XmlInclude(typeof(ReportChartComponent))]
    [System.Xml.Serialization.XmlInclude(typeof(Canvas))]
    [System.Xml.Serialization.XmlInclude(typeof(VisualforcePage))]
    [System.Xml.Serialization.XmlInclude(typeof(FieldLayoutComponent))]
    [System.Xml.Serialization.XmlInclude(typeof(FieldComponent))]
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayoutComponent : object, System.ComponentModel.INotifyPropertyChanged
    {
        private int displayLinesField;
        private int tabOrderField;
        private layoutComponentType typeField;
        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public int displayLines
        {
            get
            {
                return displayLinesField;
            }

            set
            {
                displayLinesField = value;
                RaisePropertyChanged("displayLines");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public int tabOrder
        {
            get
            {
                return tabOrderField;
            }

            set
            {
                tabOrderField = value;
                RaisePropertyChanged("tabOrder");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public layoutComponentType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
                RaisePropertyChanged("value");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum layoutComponentType
    {

        /// <remarks/>
        ReportChart,

        /// <remarks/>
        Field,

        /// <remarks/>
        Separator,

        /// <remarks/>
        SControl,

        /// <remarks/>
        EmptySpace,

        /// <remarks/>
        VisualforcePage,

        /// <remarks/>
        ExpandedLookup,

        /// <remarks/>
        AuraComponent,

        /// <remarks/>
        Canvas,

        /// <remarks/>
        CustomLink,

        /// <remarks/>
        AnalyticsCloud
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class CustomLinkComponent : DescribeLayoutComponent
    {
        private DescribeLayoutButton customLinkField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public DescribeLayoutButton customLink
        {
            get
            {
                return customLinkField;
            }

            set
            {
                customLinkField = value;
                RaisePropertyChanged("customLink");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class AnalyticsCloudComponent : DescribeLayoutComponent
    {
        private string errorField;
        private string filterField;
        private string heightField;
        private bool hideOnErrorField;
        private bool showSharingField;
        private bool showTitleField;
        private string widthField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string error
        {
            get
            {
                return errorField;
            }

            set
            {
                errorField = value;
                RaisePropertyChanged("error");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string filter
        {
            get
            {
                return filterField;
            }

            set
            {
                filterField = value;
                RaisePropertyChanged("filter");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string height
        {
            get
            {
                return heightField;
            }

            set
            {
                heightField = value;
                RaisePropertyChanged("height");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool hideOnError
        {
            get
            {
                return hideOnErrorField;
            }

            set
            {
                hideOnErrorField = value;
                RaisePropertyChanged("hideOnError");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool showSharing
        {
            get
            {
                return showSharingField;
            }

            set
            {
                showSharingField = value;
                RaisePropertyChanged("showSharing");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public bool showTitle
        {
            get
            {
                return showTitleField;
            }

            set
            {
                showTitleField = value;
                RaisePropertyChanged("showTitle");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string width
        {
            get
            {
                return widthField;
            }

            set
            {
                widthField = value;
                RaisePropertyChanged("width");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ReportChartComponent : DescribeLayoutComponent
    {
        private bool cacheDataField;
        private string contextFilterableFieldField;
        private string errorField;
        private bool hideOnErrorField;
        private bool includeContextField;
        private bool showTitleField;
        private ReportChartSize sizeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool cacheData
        {
            get
            {
                return cacheDataField;
            }

            set
            {
                cacheDataField = value;
                RaisePropertyChanged("cacheData");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string contextFilterableField
        {
            get
            {
                return contextFilterableFieldField;
            }

            set
            {
                contextFilterableFieldField = value;
                RaisePropertyChanged("contextFilterableField");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string error
        {
            get
            {
                return errorField;
            }

            set
            {
                errorField = value;
                RaisePropertyChanged("error");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool hideOnError
        {
            get
            {
                return hideOnErrorField;
            }

            set
            {
                hideOnErrorField = value;
                RaisePropertyChanged("hideOnError");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool includeContext
        {
            get
            {
                return includeContextField;
            }

            set
            {
                includeContextField = value;
                RaisePropertyChanged("includeContext");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public bool showTitle
        {
            get
            {
                return showTitleField;
            }

            set
            {
                showTitleField = value;
                RaisePropertyChanged("showTitle");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public ReportChartSize size
        {
            get
            {
                return sizeField;
            }

            set
            {
                sizeField = value;
                RaisePropertyChanged("size");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum ReportChartSize
    {

        /// <remarks/>
        SMALL,

        /// <remarks/>
        MEDIUM,

        /// <remarks/>
        LARGE
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class Canvas : DescribeLayoutComponent
    {
        private string displayLocationField;
        private string referenceIdField;
        private bool showLabelField;
        private bool showScrollbarsField;
        private string suggestedHeightField;
        private string suggestedWidthField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string displayLocation
        {
            get
            {
                return displayLocationField;
            }

            set
            {
                displayLocationField = value;
                RaisePropertyChanged("displayLocation");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string referenceId
        {
            get
            {
                return referenceIdField;
            }

            set
            {
                referenceIdField = value;
                RaisePropertyChanged("referenceId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool showLabel
        {
            get
            {
                return showLabelField;
            }

            set
            {
                showLabelField = value;
                RaisePropertyChanged("showLabel");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool showScrollbars
        {
            get
            {
                return showScrollbarsField;
            }

            set
            {
                showScrollbarsField = value;
                RaisePropertyChanged("showScrollbars");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string suggestedHeight
        {
            get
            {
                return suggestedHeightField;
            }

            set
            {
                suggestedHeightField = value;
                RaisePropertyChanged("suggestedHeight");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string suggestedWidth
        {
            get
            {
                return suggestedWidthField;
            }

            set
            {
                suggestedWidthField = value;
                RaisePropertyChanged("suggestedWidth");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class VisualforcePage : DescribeLayoutComponent
    {
        private bool showLabelField;
        private bool showScrollbarsField;
        private string suggestedHeightField;
        private string suggestedWidthField;
        private string urlField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool showLabel
        {
            get
            {
                return showLabelField;
            }

            set
            {
                showLabelField = value;
                RaisePropertyChanged("showLabel");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool showScrollbars
        {
            get
            {
                return showScrollbarsField;
            }

            set
            {
                showScrollbarsField = value;
                RaisePropertyChanged("showScrollbars");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string suggestedHeight
        {
            get
            {
                return suggestedHeightField;
            }

            set
            {
                suggestedHeightField = value;
                RaisePropertyChanged("suggestedHeight");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string suggestedWidth
        {
            get
            {
                return suggestedWidthField;
            }

            set
            {
                suggestedWidthField = value;
                RaisePropertyChanged("suggestedWidth");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string url
        {
            get
            {
                return urlField;
            }

            set
            {
                urlField = value;
                RaisePropertyChanged("url");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class FieldLayoutComponent : DescribeLayoutComponent
    {
        private DescribeLayoutComponent[] componentsField;
        private fieldType fieldTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("components", Order = 0)]
        public DescribeLayoutComponent[] components
        {
            get
            {
                return componentsField;
            }

            set
            {
                componentsField = value;
                RaisePropertyChanged("components");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public fieldType fieldType
        {
            get
            {
                return fieldTypeField;
            }

            set
            {
                fieldTypeField = value;
                RaisePropertyChanged("fieldType");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class FieldComponent : DescribeLayoutComponent
    {
        private Field fieldField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public Field field
        {
            get
            {
                return fieldField;
            }

            set
            {
                fieldField = value;
                RaisePropertyChanged("field");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum TabOrderType
    {

        /// <remarks/>
        LeftToRight,

        /// <remarks/>
        TopToBottom
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayoutFeedFilter : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string labelField;
        private string nameField;
        private FeedLayoutFilterType typeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public FeedLayoutFilterType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum FeedLayoutFilterType
    {

        /// <remarks/>
        AllUpdates,

        /// <remarks/>
        FeedItemType,

        /// <remarks/>
        Custom
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeQuickActionListItemResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ShareAccessLevel? accessLevelRequiredField;
        private DescribeColor[] colorsField;
        private string iconUrlField;
        private DescribeIcon[] iconsField;
        private string labelField;
        private string miniIconUrlField;
        private string quickActionNameField;
        private string targetSobjectTypeField;
        private string typeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public ShareAccessLevel? accessLevelRequired
        {
            get
            {
                return accessLevelRequiredField;
            }

            set
            {
                accessLevelRequiredField = value;
                RaisePropertyChanged("accessLevelRequired");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("colors", Order = 1)]
        public DescribeColor[] colors
        {
            get
            {
                return colorsField;
            }

            set
            {
                colorsField = value;
                RaisePropertyChanged("colors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string iconUrl
        {
            get
            {
                return iconUrlField;
            }

            set
            {
                iconUrlField = value;
                RaisePropertyChanged("iconUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("icons", Order = 3)]
        public DescribeIcon[] icons
        {
            get
            {
                return iconsField;
            }

            set
            {
                iconsField = value;
                RaisePropertyChanged("icons");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string miniIconUrl
        {
            get
            {
                return miniIconUrlField;
            }

            set
            {
                miniIconUrlField = value;
                RaisePropertyChanged("miniIconUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string quickActionName
        {
            get
            {
                return quickActionNameField;
            }

            set
            {
                quickActionNameField = value;
                RaisePropertyChanged("quickActionName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 7)]
        public string targetSobjectType
        {
            get
            {
                return targetSobjectTypeField;
            }

            set
            {
                targetSobjectTypeField = value;
                RaisePropertyChanged("targetSobjectType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public string type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum ShareAccessLevel
    {

        /// <remarks/>
        Read,

        /// <remarks/>
        Edit,

        /// <remarks/>
        All
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeRelatedContentItem : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeLayoutItem describeLayoutItemField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public DescribeLayoutItem describeLayoutItem
        {
            get
            {
                return describeLayoutItemField;
            }

            set
            {
                describeLayoutItemField = value;
                RaisePropertyChanged("describeLayoutItem");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RelatedList : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ShareAccessLevel? accessLevelRequiredForCreateField;
        private DescribeLayoutButton[] buttonsField;
        private RelatedListColumn[] columnsField;
        private bool customField;
        private string fieldField;
        private string labelField;
        private int limitRowsField;
        private string nameField;
        private string sobjectField;
        private RelatedListSort[] sortField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public ShareAccessLevel? accessLevelRequiredForCreate
        {
            get
            {
                return accessLevelRequiredForCreateField;
            }

            set
            {
                accessLevelRequiredForCreateField = value;
                RaisePropertyChanged("accessLevelRequiredForCreate");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("buttons", IsNullable = true, Order = 1)]
        public DescribeLayoutButton[] buttons
        {
            get
            {
                return buttonsField;
            }

            set
            {
                buttonsField = value;
                RaisePropertyChanged("buttons");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("columns", Order = 2)]
        public RelatedListColumn[] columns
        {
            get
            {
                return columnsField;
            }

            set
            {
                columnsField = value;
                RaisePropertyChanged("columns");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool custom
        {
            get
            {
                return customField;
            }

            set
            {
                customField = value;
                RaisePropertyChanged("custom");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string field
        {
            get
            {
                return fieldField;
            }

            set
            {
                fieldField = value;
                RaisePropertyChanged("field");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public int limitRows
        {
            get
            {
                return limitRowsField;
            }

            set
            {
                limitRowsField = value;
                RaisePropertyChanged("limitRows");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 8)]
        public string sobject
        {
            get
            {
                return sobjectField;
            }

            set
            {
                sobjectField = value;
                RaisePropertyChanged("sobject");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("sort", Order = 9)]
        public RelatedListSort[] sort
        {
            get
            {
                return sortField;
            }

            set
            {
                sortField = value;
                RaisePropertyChanged("sort");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RelatedListColumn : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string fieldField;
        private string fieldApiNameField;
        private string formatField;
        private string labelField;
        private string lookupIdField;
        private string nameField;
        private bool sortableField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string field
        {
            get
            {
                return fieldField;
            }

            set
            {
                fieldField = value;
                RaisePropertyChanged("field");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string fieldApiName
        {
            get
            {
                return fieldApiNameField;
            }

            set
            {
                fieldApiNameField = value;
                RaisePropertyChanged("fieldApiName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string format
        {
            get
            {
                return formatField;
            }

            set
            {
                formatField = value;
                RaisePropertyChanged("format");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string lookupId
        {
            get
            {
                return lookupIdField;
            }

            set
            {
                lookupIdField = value;
                RaisePropertyChanged("lookupId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public bool sortable
        {
            get
            {
                return sortableField;
            }

            set
            {
                sortableField = value;
                RaisePropertyChanged("sortable");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RelatedListSort : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool ascendingField;
        private string columnField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool ascending
        {
            get
            {
                return ascendingField;
            }

            set
            {
                ascendingField = value;
                RaisePropertyChanged("ascending");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string column
        {
            get
            {
                return columnField;
            }

            set
            {
                columnField = value;
                RaisePropertyChanged("column");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeLayoutSaveOption : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool defaultValueField;
        private bool isDisplayedField;
        private string labelField;
        private string nameField;
        private string restHeaderNameField;
        private string soapHeaderNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool defaultValue
        {
            get
            {
                return defaultValueField;
            }

            set
            {
                defaultValueField = value;
                RaisePropertyChanged("defaultValue");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool isDisplayed
        {
            get
            {
                return isDisplayedField;
            }

            set
            {
                isDisplayedField = value;
                RaisePropertyChanged("isDisplayed");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string restHeaderName
        {
            get
            {
                return restHeaderNameField;
            }

            set
            {
                restHeaderNameField = value;
                RaisePropertyChanged("restHeaderName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string soapHeaderName
        {
            get
            {
                return soapHeaderNameField;
            }

            set
            {
                soapHeaderNameField = value;
                RaisePropertyChanged("soapHeaderName");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RecordTypeMapping : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool activeField;
        private bool availableField;
        private bool defaultRecordTypeMappingField;
        private string developerNameField;
        private string layoutIdField;
        private bool masterField;
        private string nameField;
        private PicklistForRecordType[] picklistsForRecordTypeField;
        private string recordTypeIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool active
        {
            get
            {
                return activeField;
            }

            set
            {
                activeField = value;
                RaisePropertyChanged("active");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool available
        {
            get
            {
                return availableField;
            }

            set
            {
                availableField = value;
                RaisePropertyChanged("available");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool defaultRecordTypeMapping
        {
            get
            {
                return defaultRecordTypeMappingField;
            }

            set
            {
                defaultRecordTypeMappingField = value;
                RaisePropertyChanged("defaultRecordTypeMapping");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string developerName
        {
            get
            {
                return developerNameField;
            }

            set
            {
                developerNameField = value;
                RaisePropertyChanged("developerName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string layoutId
        {
            get
            {
                return layoutIdField;
            }

            set
            {
                layoutIdField = value;
                RaisePropertyChanged("layoutId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public bool master
        {
            get
            {
                return masterField;
            }

            set
            {
                masterField = value;
                RaisePropertyChanged("master");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("picklistsForRecordType", IsNullable = true, Order = 7)]
        public PicklistForRecordType[] picklistsForRecordType
        {
            get
            {
                return picklistsForRecordTypeField;
            }

            set
            {
                picklistsForRecordTypeField = value;
                RaisePropertyChanged("picklistsForRecordType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 8)]
        public string recordTypeId
        {
            get
            {
                return recordTypeIdField;
            }

            set
            {
                recordTypeIdField = value;
                RaisePropertyChanged("recordTypeId");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class PicklistForRecordType : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string picklistNameField;
        private PicklistEntry[] picklistValuesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string picklistName
        {
            get
            {
                return picklistNameField;
            }

            set
            {
                picklistNameField = value;
                RaisePropertyChanged("picklistName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("picklistValues", IsNullable = true, Order = 1)]
        public PicklistEntry[] picklistValues
        {
            get
            {
                return picklistValuesField;
            }

            set
            {
                picklistValuesField = value;
                RaisePropertyChanged("picklistValues");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeLayout", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeLayoutRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string sObjectType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public string layoutName;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 2)]
        [System.Xml.Serialization.XmlElement("recordTypeIds")]
        public string[] recordTypeIds;

        public describeLayoutRequest() : base()
        {
        }

        public describeLayoutRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string layoutName, string[] recordTypeIds) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.layoutName = layoutName;
            this.recordTypeIds = recordTypeIds;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeLayoutResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeLayoutResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public DescribeLayoutResult result;

        public describeLayoutResponse() : base()
        {
        }

        public describeLayoutResponse(LimitInfo[] LimitInfoHeader, DescribeLayoutResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSoftphoneLayoutResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeSoftphoneLayoutCallType[] callTypesField;
        private string idField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("callTypes", Order = 0)]
        public DescribeSoftphoneLayoutCallType[] callTypes
        {
            get
            {
                return callTypesField;
            }

            set
            {
                callTypesField = value;
                RaisePropertyChanged("callTypes");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSoftphoneLayoutCallType : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeSoftphoneLayoutInfoField[] infoFieldsField;
        private string nameField;
        private DescribeSoftphoneScreenPopOption[] screenPopOptionsField;
        private string screenPopsOpenWithinField;
        private DescribeSoftphoneLayoutSection[] sectionsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("infoFields", Order = 0)]
        public DescribeSoftphoneLayoutInfoField[] infoFields
        {
            get
            {
                return infoFieldsField;
            }

            set
            {
                infoFieldsField = value;
                RaisePropertyChanged("infoFields");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("screenPopOptions", Order = 2)]
        public DescribeSoftphoneScreenPopOption[] screenPopOptions
        {
            get
            {
                return screenPopOptionsField;
            }

            set
            {
                screenPopOptionsField = value;
                RaisePropertyChanged("screenPopOptions");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string screenPopsOpenWithin
        {
            get
            {
                return screenPopsOpenWithinField;
            }

            set
            {
                screenPopsOpenWithinField = value;
                RaisePropertyChanged("screenPopsOpenWithin");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("sections", Order = 4)]
        public DescribeSoftphoneLayoutSection[] sections
        {
            get
            {
                return sectionsField;
            }

            set
            {
                sectionsField = value;
                RaisePropertyChanged("sections");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSoftphoneLayoutInfoField : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSoftphoneScreenPopOption : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string matchTypeField;
        private string screenPopDataField;
        private string screenPopTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string matchType
        {
            get
            {
                return matchTypeField;
            }

            set
            {
                matchTypeField = value;
                RaisePropertyChanged("matchType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string screenPopData
        {
            get
            {
                return screenPopDataField;
            }

            set
            {
                screenPopDataField = value;
                RaisePropertyChanged("screenPopData");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string screenPopType
        {
            get
            {
                return screenPopTypeField;
            }

            set
            {
                screenPopTypeField = value;
                RaisePropertyChanged("screenPopType");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSoftphoneLayoutSection : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string entityApiNameField;
        private DescribeSoftphoneLayoutItem[] itemsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string entityApiName
        {
            get
            {
                return entityApiNameField;
            }

            set
            {
                entityApiNameField = value;
                RaisePropertyChanged("entityApiName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("items", Order = 1)]
        public DescribeSoftphoneLayoutItem[] items
        {
            get
            {
                return itemsField;
            }

            set
            {
                itemsField = value;
                RaisePropertyChanged("items");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSoftphoneLayoutItem : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string itemApiNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string itemApiName
        {
            get
            {
                return itemApiNameField;
            }

            set
            {
                itemApiNameField = value;
                RaisePropertyChanged("itemApiName");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSoftphoneLayout", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSoftphoneLayoutRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;

        public describeSoftphoneLayoutRequest() : base()
        {
        }

        public describeSoftphoneLayoutRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSoftphoneLayoutResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSoftphoneLayoutResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public DescribeSoftphoneLayoutResult result;

        public describeSoftphoneLayoutResponse() : base()
        {
        }

        public describeSoftphoneLayoutResponse(LimitInfo[] LimitInfoHeader, DescribeSoftphoneLayoutResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSearchLayoutResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string errorMsgField;
        private string labelField;
        private int? limitRowsField;
        private string objectTypeField;
        private DescribeColumn[] searchColumnsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string errorMsg
        {
            get
            {
                return errorMsgField;
            }

            set
            {
                errorMsgField = value;
                RaisePropertyChanged("errorMsg");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public int? limitRows
        {
            get
            {
                return limitRowsField;
            }

            set
            {
                limitRowsField = value;
                RaisePropertyChanged("limitRows");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string objectType
        {
            get
            {
                return objectTypeField;
            }

            set
            {
                objectTypeField = value;
                RaisePropertyChanged("objectType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("searchColumns", IsNullable = true, Order = 4)]
        public DescribeColumn[] searchColumns
        {
            get
            {
                return searchColumnsField;
            }

            set
            {
                searchColumnsField = value;
                RaisePropertyChanged("searchColumns");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeColumn : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string fieldField;
        private string formatField;
        private string labelField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string field
        {
            get
            {
                return fieldField;
            }

            set
            {
                fieldField = value;
                RaisePropertyChanged("field");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string format
        {
            get
            {
                return formatField;
            }

            set
            {
                formatField = value;
                RaisePropertyChanged("format");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSearchLayouts", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSearchLayoutsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sObjectType")]
        public string[] sObjectType;

        public describeSearchLayoutsRequest() : base()
        {
        }

        public describeSearchLayoutsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sObjectType) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSearchLayoutsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSearchLayoutsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result", IsNullable = true)]
        public DescribeSearchLayoutResult[] result;

        public describeSearchLayoutsResponse() : base()
        {
        }

        public describeSearchLayoutsResponse(LimitInfo[] LimitInfoHeader, DescribeSearchLayoutResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSearchableEntityResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string labelField;
        private string nameField;
        private string pluralLabelField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string pluralLabel
        {
            get
            {
                return pluralLabelField;
            }

            set
            {
                pluralLabelField = value;
                RaisePropertyChanged("pluralLabel");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSearchableEntities", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSearchableEntitiesRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public bool includeOnlyEntitiesWithTabs;

        public describeSearchableEntitiesRequest() : base()
        {
        }

        public describeSearchableEntitiesRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeOnlyEntitiesWithTabs) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.includeOnlyEntitiesWithTabs = includeOnlyEntitiesWithTabs;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSearchableEntitiesResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSearchableEntitiesResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeSearchableEntityResult[] result;

        public describeSearchableEntitiesResponse() : base()
        {
        }

        public describeSearchableEntitiesResponse(LimitInfo[] LimitInfoHeader, DescribeSearchableEntityResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSearchScopeOrderResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string keyPrefixField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string keyPrefix
        {
            get
            {
                return keyPrefixField;
            }

            set
            {
                keyPrefixField = value;
                RaisePropertyChanged("keyPrefix");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSearchScopeOrder", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSearchScopeOrderRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public bool includeRealTimeEntities;

        public describeSearchScopeOrderRequest() : base()
        {
        }

        public describeSearchScopeOrderRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeRealTimeEntities) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.includeRealTimeEntities = includeRealTimeEntities;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSearchScopeOrderResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSearchScopeOrderResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeSearchScopeOrderResult[] result;

        public describeSearchScopeOrderResponse() : base()
        {
        }

        public describeSearchScopeOrderResponse(LimitInfo[] LimitInfoHeader, DescribeSearchScopeOrderResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeCompactLayoutsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeCompactLayout[] compactLayoutsField;
        private string defaultCompactLayoutIdField;
        private RecordTypeCompactLayoutMapping[] recordTypeCompactLayoutMappingsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("compactLayouts", Order = 0)]
        public DescribeCompactLayout[] compactLayouts
        {
            get
            {
                return compactLayoutsField;
            }

            set
            {
                compactLayoutsField = value;
                RaisePropertyChanged("compactLayouts");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string defaultCompactLayoutId
        {
            get
            {
                return defaultCompactLayoutIdField;
            }

            set
            {
                defaultCompactLayoutIdField = value;
                RaisePropertyChanged("defaultCompactLayoutId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("recordTypeCompactLayoutMappings", Order = 2)]
        public RecordTypeCompactLayoutMapping[] recordTypeCompactLayoutMappings
        {
            get
            {
                return recordTypeCompactLayoutMappingsField;
            }

            set
            {
                recordTypeCompactLayoutMappingsField = value;
                RaisePropertyChanged("recordTypeCompactLayoutMappings");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeCompactLayout : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeLayoutButton[] actionsField;
        private DescribeLayoutItem[] fieldItemsField;
        private string idField;
        private DescribeLayoutItem[] imageItemsField;
        private string labelField;
        private string nameField;
        private string objectTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("actions", Order = 0)]
        public DescribeLayoutButton[] actions
        {
            get
            {
                return actionsField;
            }

            set
            {
                actionsField = value;
                RaisePropertyChanged("actions");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fieldItems", Order = 1)]
        public DescribeLayoutItem[] fieldItems
        {
            get
            {
                return fieldItemsField;
            }

            set
            {
                fieldItemsField = value;
                RaisePropertyChanged("fieldItems");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("imageItems", Order = 3)]
        public DescribeLayoutItem[] imageItems
        {
            get
            {
                return imageItemsField;
            }

            set
            {
                imageItemsField = value;
                RaisePropertyChanged("imageItems");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string objectType
        {
            get
            {
                return objectTypeField;
            }

            set
            {
                objectTypeField = value;
                RaisePropertyChanged("objectType");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RecordTypeCompactLayoutMapping : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool availableField;
        private string compactLayoutIdField;
        private string compactLayoutNameField;
        private string recordTypeIdField;
        private string recordTypeNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool available
        {
            get
            {
                return availableField;
            }

            set
            {
                availableField = value;
                RaisePropertyChanged("available");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string compactLayoutId
        {
            get
            {
                return compactLayoutIdField;
            }

            set
            {
                compactLayoutIdField = value;
                RaisePropertyChanged("compactLayoutId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string compactLayoutName
        {
            get
            {
                return compactLayoutNameField;
            }

            set
            {
                compactLayoutNameField = value;
                RaisePropertyChanged("compactLayoutName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string recordTypeId
        {
            get
            {
                return recordTypeIdField;
            }

            set
            {
                recordTypeIdField = value;
                RaisePropertyChanged("recordTypeId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string recordTypeName
        {
            get
            {
                return recordTypeNameField;
            }

            set
            {
                recordTypeNameField = value;
                RaisePropertyChanged("recordTypeName");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeCompactLayouts", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeCompactLayoutsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string sObjectType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement("recordTypeIds")]
        public string[] recordTypeIds;

        public describeCompactLayoutsRequest() : base()
        {
        }

        public describeCompactLayoutsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string[] recordTypeIds) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.recordTypeIds = recordTypeIds;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeCompactLayoutsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeCompactLayoutsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public DescribeCompactLayoutsResult result;

        public describeCompactLayoutsResponse() : base()
        {
        }

        public describeCompactLayoutsResponse(LimitInfo[] LimitInfoHeader, DescribeCompactLayoutsResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribePathAssistant : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool activeField;
        private DescribeAnimationRule[] animationRuleField;
        private string apiNameField;
        private string labelField;
        private string pathPicklistFieldField;
        private PicklistForRecordType[] picklistsForRecordTypeField;
        private string recordTypeIdField;
        private DescribePathAssistantStep[] stepsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool active
        {
            get
            {
                return activeField;
            }

            set
            {
                activeField = value;
                RaisePropertyChanged("active");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("animationRule", IsNullable = true, Order = 1)]
        public DescribeAnimationRule[] animationRule
        {
            get
            {
                return animationRuleField;
            }

            set
            {
                animationRuleField = value;
                RaisePropertyChanged("animationRule");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string apiName
        {
            get
            {
                return apiNameField;
            }

            set
            {
                apiNameField = value;
                RaisePropertyChanged("apiName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string pathPicklistField
        {
            get
            {
                return pathPicklistFieldField;
            }

            set
            {
                pathPicklistFieldField = value;
                RaisePropertyChanged("pathPicklistField");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("picklistsForRecordType", IsNullable = true, Order = 5)]
        public PicklistForRecordType[] picklistsForRecordType
        {
            get
            {
                return picklistsForRecordTypeField;
            }

            set
            {
                picklistsForRecordTypeField = value;
                RaisePropertyChanged("picklistsForRecordType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 6)]
        public string recordTypeId
        {
            get
            {
                return recordTypeIdField;
            }

            set
            {
                recordTypeIdField = value;
                RaisePropertyChanged("recordTypeId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("steps", Order = 7)]
        public DescribePathAssistantStep[] steps
        {
            get
            {
                return stepsField;
            }

            set
            {
                stepsField = value;
                RaisePropertyChanged("steps");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeAnimationRule : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string animationFrequencyField;
        private bool isActiveField;
        private string recordTypeContextField;
        private string recordTypeIdField;
        private string targetFieldField;
        private string targetFieldChangeToValuesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string animationFrequency
        {
            get
            {
                return animationFrequencyField;
            }

            set
            {
                animationFrequencyField = value;
                RaisePropertyChanged("animationFrequency");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool isActive
        {
            get
            {
                return isActiveField;
            }

            set
            {
                isActiveField = value;
                RaisePropertyChanged("isActive");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string recordTypeContext
        {
            get
            {
                return recordTypeContextField;
            }

            set
            {
                recordTypeContextField = value;
                RaisePropertyChanged("recordTypeContext");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string recordTypeId
        {
            get
            {
                return recordTypeIdField;
            }

            set
            {
                recordTypeIdField = value;
                RaisePropertyChanged("recordTypeId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string targetField
        {
            get
            {
                return targetFieldField;
            }

            set
            {
                targetFieldField = value;
                RaisePropertyChanged("targetField");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string targetFieldChangeToValues
        {
            get
            {
                return targetFieldChangeToValuesField;
            }

            set
            {
                targetFieldChangeToValuesField = value;
                RaisePropertyChanged("targetFieldChangeToValues");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribePathAssistantStep : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool closedField;
        private bool convertedField;
        private DescribePathAssistantField[] fieldsField;
        private string infoField;
        private DescribeLayoutSection layoutSectionField;
        private string picklistLabelField;
        private string picklistValueField;
        private bool wonField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool closed
        {
            get
            {
                return closedField;
            }

            set
            {
                closedField = value;
                RaisePropertyChanged("closed");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool converted
        {
            get
            {
                return convertedField;
            }

            set
            {
                convertedField = value;
                RaisePropertyChanged("converted");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fields", Order = 2)]
        public DescribePathAssistantField[] fields
        {
            get
            {
                return fieldsField;
            }

            set
            {
                fieldsField = value;
                RaisePropertyChanged("fields");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string info
        {
            get
            {
                return infoField;
            }

            set
            {
                infoField = value;
                RaisePropertyChanged("info");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public DescribeLayoutSection layoutSection
        {
            get
            {
                return layoutSectionField;
            }

            set
            {
                layoutSectionField = value;
                RaisePropertyChanged("layoutSection");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string picklistLabel
        {
            get
            {
                return picklistLabelField;
            }

            set
            {
                picklistLabelField = value;
                RaisePropertyChanged("picklistLabel");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string picklistValue
        {
            get
            {
                return picklistValueField;
            }

            set
            {
                picklistValueField = value;
                RaisePropertyChanged("picklistValue");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public bool won
        {
            get
            {
                return wonField;
            }

            set
            {
                wonField = value;
                RaisePropertyChanged("won");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribePathAssistantField : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string apiNameField;
        private string labelField;
        private bool readOnlyField;
        private bool requiredField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string apiName
        {
            get
            {
                return apiNameField;
            }

            set
            {
                apiNameField = value;
                RaisePropertyChanged("apiName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool readOnly
        {
            get
            {
                return readOnlyField;
            }

            set
            {
                readOnlyField = value;
                RaisePropertyChanged("readOnly");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool required
        {
            get
            {
                return requiredField;
            }

            set
            {
                requiredField = value;
                RaisePropertyChanged("required");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describePathAssistants", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describePathAssistantsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string sObjectType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public string picklistValue;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 2)]
        [System.Xml.Serialization.XmlElement("recordTypeIds")]
        public string[] recordTypeIds;

        public describePathAssistantsRequest() : base()
        {
        }

        public describePathAssistantsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string picklistValue, string[] recordTypeIds) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.picklistValue = picklistValue;
            this.recordTypeIds = recordTypeIds;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describePathAssistantsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describePathAssistantsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlArray(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItem("pathAssistants", IsNullable = false)]
        public DescribePathAssistant[] result;

        public describePathAssistantsResponse() : base()
        {
        }

        public describePathAssistantsResponse(LimitInfo[] LimitInfoHeader, DescribePathAssistant[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeApprovalLayout : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string idField;
        private string labelField;
        private DescribeLayoutItem[] layoutItemsField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("layoutItems", Order = 2)]
        public DescribeLayoutItem[] layoutItems
        {
            get
            {
                return layoutItemsField;
            }

            set
            {
                layoutItemsField = value;
                RaisePropertyChanged("layoutItems");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeApprovalLayout", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeApprovalLayoutRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string sObjectType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement("approvalProcessNames")]
        public string[] approvalProcessNames;

        public describeApprovalLayoutRequest() : base()
        {
        }

        public describeApprovalLayoutRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string[] approvalProcessNames) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.approvalProcessNames = approvalProcessNames;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeApprovalLayoutResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeApprovalLayoutResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlArray(IsNullable = true)]
        [System.Xml.Serialization.XmlArrayItem("approvalLayouts", IsNullable = false)]
        public DescribeApprovalLayout[] result;

        public describeApprovalLayoutResponse() : base()
        {
        }

        public describeApprovalLayoutResponse(LimitInfo[] LimitInfoHeader, DescribeApprovalLayout[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSoqlListViewParams : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string developerNameOrIdField;
        private string sobjectTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string developerNameOrId
        {
            get
            {
                return developerNameOrIdField;
            }

            set
            {
                developerNameOrIdField = value;
                RaisePropertyChanged("developerNameOrId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string sobjectType
        {
            get
            {
                return sobjectTypeField;
            }

            set
            {
                sobjectTypeField = value;
                RaisePropertyChanged("sobjectType");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeSoqlListView : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ListViewColumn[] columnsField;
        private string idField;
        private ListViewOrderBy[] orderByField;
        private string queryField;
        private string relatedEntityIdField;
        private string scopeField;
        private string scopeEntityIdField;
        private string sobjectTypeField;
        private SoqlWhereCondition whereConditionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("columns", Order = 0)]
        public ListViewColumn[] columns
        {
            get
            {
                return columnsField;
            }

            set
            {
                columnsField = value;
                RaisePropertyChanged("columns");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("orderBy", Order = 2)]
        public ListViewOrderBy[] orderBy
        {
            get
            {
                return orderByField;
            }

            set
            {
                orderByField = value;
                RaisePropertyChanged("orderBy");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string query
        {
            get
            {
                return queryField;
            }

            set
            {
                queryField = value;
                RaisePropertyChanged("query");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string relatedEntityId
        {
            get
            {
                return relatedEntityIdField;
            }

            set
            {
                relatedEntityIdField = value;
                RaisePropertyChanged("relatedEntityId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public string scope
        {
            get
            {
                return scopeField;
            }

            set
            {
                scopeField = value;
                RaisePropertyChanged("scope");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 6)]
        public string scopeEntityId
        {
            get
            {
                return scopeEntityIdField;
            }

            set
            {
                scopeEntityIdField = value;
                RaisePropertyChanged("scopeEntityId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public string sobjectType
        {
            get
            {
                return sobjectTypeField;
            }

            set
            {
                sobjectTypeField = value;
                RaisePropertyChanged("sobjectType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public SoqlWhereCondition whereCondition
        {
            get
            {
                return whereConditionField;
            }

            set
            {
                whereConditionField = value;
                RaisePropertyChanged("whereCondition");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ListViewColumn : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string ascendingLabelField;
        private string descendingLabelField;
        private string fieldNameOrPathField;
        private bool hiddenField;
        private string labelField;
        private bool searchableField;
        private string selectListItemField;
        private orderByDirection? sortDirectionField;
        private int? sortIndexField;
        private bool sortableField;
        private fieldType typeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string ascendingLabel
        {
            get
            {
                return ascendingLabelField;
            }

            set
            {
                ascendingLabelField = value;
                RaisePropertyChanged("ascendingLabel");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string descendingLabel
        {
            get
            {
                return descendingLabelField;
            }

            set
            {
                descendingLabelField = value;
                RaisePropertyChanged("descendingLabel");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string fieldNameOrPath
        {
            get
            {
                return fieldNameOrPathField;
            }

            set
            {
                fieldNameOrPathField = value;
                RaisePropertyChanged("fieldNameOrPath");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool hidden
        {
            get
            {
                return hiddenField;
            }

            set
            {
                hiddenField = value;
                RaisePropertyChanged("hidden");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public bool searchable
        {
            get
            {
                return searchableField;
            }

            set
            {
                searchableField = value;
                RaisePropertyChanged("searchable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string selectListItem
        {
            get
            {
                return selectListItemField;
            }

            set
            {
                selectListItemField = value;
                RaisePropertyChanged("selectListItem");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 7)]
        public orderByDirection? sortDirection
        {
            get
            {
                return sortDirectionField;
            }

            set
            {
                sortDirectionField = value;
                RaisePropertyChanged("sortDirection");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 8)]
        public int? sortIndex
        {
            get
            {
                return sortIndexField;
            }

            set
            {
                sortIndexField = value;
                RaisePropertyChanged("sortIndex");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 9)]
        public bool sortable
        {
            get
            {
                return sortableField;
            }

            set
            {
                sortableField = value;
                RaisePropertyChanged("sortable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 10)]
        public fieldType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum orderByDirection
    {

        /// <remarks/>
        ascending,

        /// <remarks/>
        descending
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ListViewOrderBy : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string fieldNameOrPathField;
        private orderByNullsPosition? nullsPositionField;
        private orderByDirection? sortDirectionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string fieldNameOrPath
        {
            get
            {
                return fieldNameOrPathField;
            }

            set
            {
                fieldNameOrPathField = value;
                RaisePropertyChanged("fieldNameOrPath");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public orderByNullsPosition? nullsPosition
        {
            get
            {
                return nullsPositionField;
            }

            set
            {
                nullsPositionField = value;
                RaisePropertyChanged("nullsPosition");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public orderByDirection? sortDirection
        {
            get
            {
                return sortDirectionField;
            }

            set
            {
                sortDirectionField = value;
                RaisePropertyChanged("sortDirection");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum orderByNullsPosition
    {

        /// <remarks/>
        first,

        /// <remarks/>
        last
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlInclude(typeof(SoqlSubQueryCondition))]
    [System.Xml.Serialization.XmlInclude(typeof(SoqlConditionGroup))]
    [System.Xml.Serialization.XmlInclude(typeof(SoqlNotCondition))]
    [System.Xml.Serialization.XmlInclude(typeof(SoqlCondition))]
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SoqlWhereCondition : object, System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SoqlSubQueryCondition : SoqlWhereCondition
    {
        private string fieldField;
        private soqlOperator operatorField;
        private string subQueryField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string field
        {
            get
            {
                return fieldField;
            }

            set
            {
                fieldField = value;
                RaisePropertyChanged("field");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public soqlOperator @operator
        {
            get
            {
                return operatorField;
            }

            set
            {
                operatorField = value;
                RaisePropertyChanged("operator");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string subQuery
        {
            get
            {
                return subQueryField;
            }

            set
            {
                subQueryField = value;
                RaisePropertyChanged("subQuery");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum soqlOperator
    {

        /// <remarks/>
        equals,

        /// <remarks/>
        excludes,

        /// <remarks/>
        greaterThan,

        /// <remarks/>
        greaterThanOrEqualTo,

        /// <remarks/>
        @in,

        /// <remarks/>
        includes,

        /// <remarks/>
        lessThan,

        /// <remarks/>
        lessThanOrEqualTo,

        /// <remarks/>
        like,

        /// <remarks/>
        notEquals,

        /// <remarks/>
        notIn,

        /// <remarks/>
        within,

        /// <remarks/>
        notLike
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SoqlConditionGroup : SoqlWhereCondition
    {
        private SoqlWhereCondition[] conditionsField;
        private soqlConjunction conjunctionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("conditions", Order = 0)]
        public SoqlWhereCondition[] conditions
        {
            get
            {
                return conditionsField;
            }

            set
            {
                conditionsField = value;
                RaisePropertyChanged("conditions");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public soqlConjunction conjunction
        {
            get
            {
                return conjunctionField;
            }

            set
            {
                conjunctionField = value;
                RaisePropertyChanged("conjunction");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum soqlConjunction
    {

        /// <remarks/>
        and,

        /// <remarks/>
        or
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SoqlNotCondition : SoqlWhereCondition
    {
        private SoqlWhereCondition conditionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public SoqlWhereCondition condition
        {
            get
            {
                return conditionField;
            }

            set
            {
                conditionField = value;
                RaisePropertyChanged("condition");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SoqlCondition : SoqlWhereCondition
    {
        private string fieldField;
        private soqlOperator operatorField;
        private string[] valuesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string field
        {
            get
            {
                return fieldField;
            }

            set
            {
                fieldField = value;
                RaisePropertyChanged("field");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public soqlOperator @operator
        {
            get
            {
                return operatorField;
            }

            set
            {
                operatorField = value;
                RaisePropertyChanged("operator");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("values", Order = 2)]
        public string[] values
        {
            get
            {
                return valuesField;
            }

            set
            {
                valuesField = value;
                RaisePropertyChanged("values");
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSoqlListViews", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSoqlListViewsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlArrayItem("listViewParams", IsNullable = false)]
        public DescribeSoqlListViewParams[] request;

        public describeSoqlListViewsRequest() : base()
        {
        }

        public describeSoqlListViewsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DescribeSoqlListViewParams[] request) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.request = request;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSoqlListViewsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSoqlListViewsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlArrayItem("describeSoqlListViews", IsNullable = false)]
        public DescribeSoqlListView[] result;

        public describeSoqlListViewsResponse() : base()
        {
        }

        public describeSoqlListViewsResponse(LimitInfo[] LimitInfoHeader, DescribeSoqlListView[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class MruHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool updateMruField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool updateMru
        {
            get
            {
                return updateMruField;
            }

            set
            {
                updateMruField = value;
                RaisePropertyChanged("updateMru");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ExecuteListViewRequest : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string developerNameOrIdField;
        private int? limitField;
        private int? offsetField;
        private ListViewOrderBy[] orderByField;
        private string sobjectTypeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string developerNameOrId
        {
            get
            {
                return developerNameOrIdField;
            }

            set
            {
                developerNameOrIdField = value;
                RaisePropertyChanged("developerNameOrId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public int? limit
        {
            get
            {
                return limitField;
            }

            set
            {
                limitField = value;
                RaisePropertyChanged("limit");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public int? offset
        {
            get
            {
                return offsetField;
            }

            set
            {
                offsetField = value;
                RaisePropertyChanged("offset");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("orderBy", Order = 3)]
        public ListViewOrderBy[] orderBy
        {
            get
            {
                return orderByField;
            }

            set
            {
                orderByField = value;
                RaisePropertyChanged("orderBy");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string sobjectType
        {
            get
            {
                return sobjectTypeField;
            }

            set
            {
                sobjectTypeField = value;
                RaisePropertyChanged("sobjectType");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ExecuteListViewResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ListViewColumn[] columnsField;
        private string developerNameField;
        private bool doneField;
        private string idField;
        private string labelField;
        private ListViewRecord[] recordsField;
        private int sizeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("columns", Order = 0)]
        public ListViewColumn[] columns
        {
            get
            {
                return columnsField;
            }

            set
            {
                columnsField = value;
                RaisePropertyChanged("columns");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string developerName
        {
            get
            {
                return developerNameField;
            }

            set
            {
                developerNameField = value;
                RaisePropertyChanged("developerName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool done
        {
            get
            {
                return doneField;
            }

            set
            {
                doneField = value;
                RaisePropertyChanged("done");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("records", Order = 5)]
        public ListViewRecord[] records
        {
            get
            {
                return recordsField;
            }

            set
            {
                recordsField = value;
                RaisePropertyChanged("records");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public int size
        {
            get
            {
                return sizeField;
            }

            set
            {
                sizeField = value;
                RaisePropertyChanged("size");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ListViewRecord : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ListViewRecordColumn[] columnsField;
        private string tmpField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("columns", Order = 0)]
        public ListViewRecordColumn[] columns
        {
            get
            {
                return columnsField;
            }

            set
            {
                columnsField = value;
                RaisePropertyChanged("columns");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttribute()]
        public string tmp
        {
            get
            {
                return tmpField;
            }

            set
            {
                tmpField = value;
                RaisePropertyChanged("tmp");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ListViewRecordColumn : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string fieldNameOrPathField;
        private string valueField;
        private string tmpField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string fieldNameOrPath
        {
            get
            {
                return fieldNameOrPathField;
            }

            set
            {
                fieldNameOrPathField = value;
                RaisePropertyChanged("fieldNameOrPath");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
                RaisePropertyChanged("value");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttribute()]
        public string tmp
        {
            get
            {
                return tmpField;
            }

            set
            {
                tmpField = value;
                RaisePropertyChanged("tmp");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "executeListView", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class executeListViewRequest1
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public MruHeader MruHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public ExecuteListViewRequest request;

        public executeListViewRequest1() : base()
        {
        }

        public executeListViewRequest1(SessionHeader SessionHeader, CallOptions CallOptions, MruHeader MruHeader, ExecuteListViewRequest request) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.MruHeader = MruHeader;
            this.request = request;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "executeListViewResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class executeListViewResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public ExecuteListViewResult result;

        public executeListViewResponse() : base()
        {
        }

        public executeListViewResponse(LimitInfo[] LimitInfoHeader, ExecuteListViewResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum listViewIsSoqlCompatible
    {

        /// <remarks/>
        TRUE,

        /// <remarks/>
        FALSE,

        /// <remarks/>
        ALL
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSObjectListViews", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSObjectListViewsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string sObjectType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public bool recentsOnly;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 2)]
        public listViewIsSoqlCompatible isSoqlCompatible;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 3)]
        public int limit;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 4)]
        public int offset;

        public describeSObjectListViewsRequest() : base()
        {
        }

        public describeSObjectListViewsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, bool recentsOnly, listViewIsSoqlCompatible isSoqlCompatible, int limit, int offset) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectType = sObjectType;
            this.recentsOnly = recentsOnly;
            this.isSoqlCompatible = isSoqlCompatible;
            this.limit = limit;
            this.offset = offset;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeSObjectListViewsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeSObjectListViewsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlArrayItem("describeSoqlListViews", IsNullable = false)]
        public DescribeSoqlListView[] result;

        public describeSObjectListViewsResponse() : base()
        {
        }

        public describeSObjectListViewsResponse(LimitInfo[] LimitInfoHeader, DescribeSoqlListView[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeTabSetResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string descriptionField;
        private string labelField;
        private string logoUrlField;
        private string namespaceField;
        private bool selectedField;
        private string tabSetIdField;
        private DescribeTab[] tabsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string description
        {
            get
            {
                return descriptionField;
            }

            set
            {
                descriptionField = value;
                RaisePropertyChanged("description");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string logoUrl
        {
            get
            {
                return logoUrlField;
            }

            set
            {
                logoUrlField = value;
                RaisePropertyChanged("logoUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string @namespace
        {
            get
            {
                return namespaceField;
            }

            set
            {
                namespaceField = value;
                RaisePropertyChanged("namespace");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool selected
        {
            get
            {
                return selectedField;
            }

            set
            {
                selectedField = value;
                RaisePropertyChanged("selected");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string tabSetId
        {
            get
            {
                return tabSetIdField;
            }

            set
            {
                tabSetIdField = value;
                RaisePropertyChanged("tabSetId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("tabs", Order = 6)]
        public DescribeTab[] tabs
        {
            get
            {
                return tabsField;
            }

            set
            {
                tabsField = value;
                RaisePropertyChanged("tabs");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeTab : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DescribeColor[] colorsField;
        private bool customField;
        private string iconUrlField;
        private DescribeIcon[] iconsField;
        private string labelField;
        private string miniIconUrlField;
        private string nameField;
        private string sobjectNameField;
        private string urlField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("colors", Order = 0)]
        public DescribeColor[] colors
        {
            get
            {
                return colorsField;
            }

            set
            {
                colorsField = value;
                RaisePropertyChanged("colors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool custom
        {
            get
            {
                return customField;
            }

            set
            {
                customField = value;
                RaisePropertyChanged("custom");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string iconUrl
        {
            get
            {
                return iconUrlField;
            }

            set
            {
                iconUrlField = value;
                RaisePropertyChanged("iconUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("icons", Order = 3)]
        public DescribeIcon[] icons
        {
            get
            {
                return iconsField;
            }

            set
            {
                iconsField = value;
                RaisePropertyChanged("icons");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string miniIconUrl
        {
            get
            {
                return miniIconUrlField;
            }

            set
            {
                miniIconUrlField = value;
                RaisePropertyChanged("miniIconUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 7)]
        public string sobjectName
        {
            get
            {
                return sobjectNameField;
            }

            set
            {
                sobjectNameField = value;
                RaisePropertyChanged("sobjectName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public string url
        {
            get
            {
                return urlField;
            }

            set
            {
                urlField = value;
                RaisePropertyChanged("url");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeTabs", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeTabsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;

        public describeTabsRequest() : base()
        {
        }

        public describeTabsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeTabsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeTabsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result", IsNullable = true)]
        public DescribeTabSetResult[] result;

        public describeTabsResponse() : base()
        {
        }

        public describeTabsResponse(LimitInfo[] LimitInfoHeader, DescribeTabSetResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeAllTabs", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeAllTabsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;

        public describeAllTabsRequest() : base()
        {
        }

        public describeAllTabsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeAllTabsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeAllTabsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result", IsNullable = true)]
        public DescribeTab[] result;

        public describeAllTabsResponse() : base()
        {
        }

        public describeAllTabsResponse(LimitInfo[] LimitInfoHeader, DescribeTab[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describePrimaryCompactLayouts", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describePrimaryCompactLayoutsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sObjectTypes")]
        public string[] sObjectTypes;

        public describePrimaryCompactLayoutsRequest() : base()
        {
        }

        public describePrimaryCompactLayoutsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sObjectTypes) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.sObjectTypes = sObjectTypes;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describePrimaryCompactLayoutsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describePrimaryCompactLayoutsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeCompactLayout[] result;

        public describePrimaryCompactLayoutsResponse() : base()
        {
        }

        public describePrimaryCompactLayoutsResponse(LimitInfo[] LimitInfoHeader, DescribeCompactLayout[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class AssignmentRuleHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string assignmentRuleIdField;
        private bool? useDefaultRuleField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string assignmentRuleId
        {
            get
            {
                return assignmentRuleIdField;
            }

            set
            {
                assignmentRuleIdField = value;
                RaisePropertyChanged("assignmentRuleId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public bool? useDefaultRule
        {
            get
            {
                return useDefaultRuleField;
            }

            set
            {
                useDefaultRuleField = value;
                RaisePropertyChanged("useDefaultRule");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class AllowFieldTruncationHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool allowFieldTruncationField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool allowFieldTruncation
        {
            get
            {
                return allowFieldTruncationField;
            }

            set
            {
                allowFieldTruncationField = value;
                RaisePropertyChanged("allowFieldTruncation");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class DisableFeedTrackingHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool disableFeedTrackingField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool disableFeedTracking
        {
            get
            {
                return disableFeedTrackingField;
            }

            set
            {
                disableFeedTrackingField = value;
                RaisePropertyChanged("disableFeedTracking");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class StreamingEnabledHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool streamingEnabledField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool streamingEnabled
        {
            get
            {
                return streamingEnabledField;
            }

            set
            {
                streamingEnabledField = value;
                RaisePropertyChanged("streamingEnabled");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class AllOrNoneHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool allOrNoneField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool allOrNone
        {
            get
            {
                return allOrNoneField;
            }

            set
            {
                allOrNoneField = value;
                RaisePropertyChanged("allOrNone");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class DuplicateRuleHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool allowSaveField;
        private bool includeRecordDetailsField;
        private bool runAsCurrentUserField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool allowSave
        {
            get
            {
                return allowSaveField;
            }

            set
            {
                allowSaveField = value;
                RaisePropertyChanged("allowSave");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool includeRecordDetails
        {
            get
            {
                return includeRecordDetailsField;
            }

            set
            {
                includeRecordDetailsField = value;
                RaisePropertyChanged("includeRecordDetails");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool runAsCurrentUser
        {
            get
            {
                return runAsCurrentUserField;
            }

            set
            {
                runAsCurrentUserField = value;
                RaisePropertyChanged("runAsCurrentUser");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class DebuggingHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private LogInfo[] categoriesField;
        private DebugLevel debugLevelField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("categories", Order = 0)]
        public LogInfo[] categories
        {
            get
            {
                return categoriesField;
            }

            set
            {
                categoriesField = value;
                RaisePropertyChanged("categories");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public DebugLevel debugLevel
        {
            get
            {
                return debugLevelField;
            }

            set
            {
                debugLevelField = value;
                RaisePropertyChanged("debugLevel");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class LogInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        private LogCategory categoryField;
        private LogCategoryLevel levelField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public LogCategory category
        {
            get
            {
                return categoryField;
            }

            set
            {
                categoryField = value;
                RaisePropertyChanged("category");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public LogCategoryLevel level
        {
            get
            {
                return levelField;
            }

            set
            {
                levelField = value;
                RaisePropertyChanged("level");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum LogCategory
    {

        /// <remarks/>
        Db,

        /// <remarks/>
        Workflow,

        /// <remarks/>
        Validation,

        /// <remarks/>
        Callout,

        /// <remarks/>
        Apex_code,

        /// <remarks/>
        Apex_profiling,

        /// <remarks/>
        Visualforce,

        /// <remarks/>
        System,

        /// <remarks/>
        All
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum LogCategoryLevel
    {

        /// <remarks/>
        None,

        /// <remarks/>
        Finest,

        /// <remarks/>
        Finer,

        /// <remarks/>
        Fine,

        /// <remarks/>
        Debug,

        /// <remarks/>
        Info,

        /// <remarks/>
        Warn,

        /// <remarks/>
        Error
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum DebugLevel
    {

        /// <remarks/>
        None,

        /// <remarks/>
        DebugOnly,

        /// <remarks/>
        Db,

        /// <remarks/>
        Profiling,

        /// <remarks/>
        Callout,

        /// <remarks/>
        Detail
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class EmailHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool triggerAutoResponseEmailField;
        private bool triggerOtherEmailField;
        private bool triggerUserEmailField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool triggerAutoResponseEmail
        {
            get
            {
                return triggerAutoResponseEmailField;
            }

            set
            {
                triggerAutoResponseEmailField = value;
                RaisePropertyChanged("triggerAutoResponseEmail");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool triggerOtherEmail
        {
            get
            {
                return triggerOtherEmailField;
            }

            set
            {
                triggerOtherEmailField = value;
                RaisePropertyChanged("triggerOtherEmail");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool triggerUserEmail
        {
            get
            {
                return triggerUserEmailField;
            }

            set
            {
                triggerUserEmailField = value;
                RaisePropertyChanged("triggerUserEmail");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:sobject.partner.soap.sforce.com")]
    public partial class sObject : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string typeField;
        private string[] fieldsToNullField;
        private string idField;
        private System.Xml.XmlElement[] anyField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fieldsToNull", IsNullable = true, Order = 1)]
        public string[] fieldsToNull
        {
            get
            {
                return fieldsToNullField;
            }

            set
            {
                fieldsToNullField = value;
                RaisePropertyChanged("fieldsToNull");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string Id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("Id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElement(Namespace = "urn:sobject.partner.soap.sforce.com", Order = 3)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return anyField;
            }

            set
            {
                anyField = value;
                RaisePropertyChanged("Any");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class DebuggingInfo : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string debugLogField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string debugLog
        {
            get
            {
                return debugLogField;
            }

            set
            {
                debugLogField = value;
                RaisePropertyChanged("debugLog");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SaveResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private Error[] errorsField;
        private string idField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 0)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlInclude(typeof(DuplicateError))]
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class Error : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ExtendedErrorDetails[] extendedErrorDetailsField;
        private string[] fieldsField;
        private string messageField;
        private StatusCode statusCodeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("extendedErrorDetails", IsNullable = true, Order = 0)]
        public ExtendedErrorDetails[] extendedErrorDetails
        {
            get
            {
                return extendedErrorDetailsField;
            }

            set
            {
                extendedErrorDetailsField = value;
                RaisePropertyChanged("extendedErrorDetails");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fields", IsNullable = true, Order = 1)]
        public string[] fields
        {
            get
            {
                return fieldsField;
            }

            set
            {
                fieldsField = value;
                RaisePropertyChanged("fields");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string message
        {
            get
            {
                return messageField;
            }

            set
            {
                messageField = value;
                RaisePropertyChanged("message");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public StatusCode statusCode
        {
            get
            {
                return statusCodeField;
            }

            set
            {
                statusCodeField = value;
                RaisePropertyChanged("statusCode");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum StatusCode
    {

        /// <remarks/>
        ALL_OR_NONE_OPERATION_ROLLED_BACK,

        /// <remarks/>
        ALREADY_IN_PROCESS,

        /// <remarks/>
        ALREADY_REDEEMED_VOUCHER,

        /// <remarks/>
        APEX_DATA_ACCESS_RESTRICTION,

        /// <remarks/>
        APEX_FAILED,

        /// <remarks/>
        ASSIGNEE_TYPE_REQUIRED,

        /// <remarks/>
        AURA_COMPILE_ERROR,

        /// <remarks/>
        AUTH_PROVIDER_NEEDS_AUTH,

        /// <remarks/>
        AUTH_PROVIDER_NOT_FOUND,

        /// <remarks/>
        B2B_SEARCH_ADMIN_ERROR,

        /// <remarks/>
        BAD_CUSTOM_ENTITY_PARENT_DOMAIN,

        /// <remarks/>
        BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED,

        /// <remarks/>
        CANNOT_CASCADE_PRODUCT_ACTIVE,

        /// <remarks/>
        CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD,

        /// <remarks/>
        CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD,

        /// <remarks/>
        CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE,

        /// <remarks/>
        CANNOT_DEACTIVATE_DIVISION,

        /// <remarks/>
        CANNOT_DELETE_GLOBAL_ACTION_LIST,

        /// <remarks/>
        CANNOT_DELETE_LAST_DATED_CONVERSION_RATE,

        /// <remarks/>
        CANNOT_DELETE_MANAGED_OBJECT,

        /// <remarks/>
        CANNOT_DISABLE_LAST_ADMIN,

        /// <remarks/>
        CANNOT_ENABLE_IP_RESTRICT_REQUESTS,

        /// <remarks/>
        CANNOT_EXECUTE_FLOW_TRIGGER,

        /// <remarks/>
        CANNOT_FREEZE_SELF,

        /// <remarks/>
        CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY,

        /// <remarks/>
        CANNOT_MODIFY_MANAGED_OBJECT,

        /// <remarks/>
        CANNOT_PASSWORD_LOCKOUT,

        /// <remarks/>
        CANNOT_POST_TO_ARCHIVED_GROUP,

        /// <remarks/>
        CANNOT_RENAME_APEX_REFERENCED_FIELD,

        /// <remarks/>
        CANNOT_RENAME_APEX_REFERENCED_OBJECT,

        /// <remarks/>
        CANNOT_RENAME_REFERENCED_FIELD,

        /// <remarks/>
        CANNOT_RENAME_REFERENCED_OBJECT,

        /// <remarks/>
        CANNOT_REPARENT_RECORD,

        /// <remarks/>
        CANNOT_UPDATE_CONVERTED_LEAD,

        /// <remarks/>
        CANT_DISABLE_CORP_CURRENCY,

        /// <remarks/>
        CANT_UNSET_CORP_CURRENCY,

        /// <remarks/>
        CHILD_SHARE_FAILS_PARENT,

        /// <remarks/>
        CIRCULAR_DEPENDENCY,

        /// <remarks/>
        CLEAN_SERVICE_ERROR,

        /// <remarks/>
        CLONE_FIELD_INTEGRITY_EXCEPTION,

        /// <remarks/>
        CLONE_NOT_SUPPORTED,

        /// <remarks/>
        CMS_FOLDER_ITEM_MOVE_FAILED,

        /// <remarks/>
        COLLISION_DETECTED,

        /// <remarks/>
        COMMERCIAL_CONTROL_ERROR,

        /// <remarks/>
        COMMUNITY_NOT_ACCESSIBLE,

        /// <remarks/>
        CONFLICTING_ENVIRONMENT_HUB_MEMBER,

        /// <remarks/>
        CONFLICTING_SSO_USER_MAPPING,

        /// <remarks/>
        CONTENT_TYPE_NOT_FOUND,

        /// <remarks/>
        CUSTOM_APEX_ERROR,

        /// <remarks/>
        CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED,

        /// <remarks/>
        CUSTOM_ENTITY_OR_FIELD_LIMIT,

        /// <remarks/>
        CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED,

        /// <remarks/>
        CUSTOM_INDEX_EXISTS,

        /// <remarks/>
        CUSTOM_LINK_LIMIT_EXCEEDED,

        /// <remarks/>
        CUSTOM_METADATA_LIMIT_EXCEEDED,

        /// <remarks/>
        CUSTOM_METADATA_REL_FIELD_MANAGEABILITY,

        /// <remarks/>
        CUSTOM_SETTINGS_LIMIT_EXCEEDED,

        /// <remarks/>
        CUSTOM_TAB_LIMIT_EXCEEDED,

        /// <remarks/>
        DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR,

        /// <remarks/>
        DATAASSESSMENT_CONFIG_SERVICE_ERROR,

        /// <remarks/>
        DATACLOUDADDRESS_NO_RECORDS_FOUND,

        /// <remarks/>
        DATACLOUDADDRESS_PROCESSING_ERROR,

        /// <remarks/>
        DATACLOUDADDRESS_SERVER_ERROR,

        /// <remarks/>
        DATE_OUT_OF_RANGE,

        /// <remarks/>
        DELETE_FAILED,

        /// <remarks/>
        DELETE_NOT_ALLOWED,

        /// <remarks/>
        DELETE_OPERATION_TOO_LARGE,

        /// <remarks/>
        DELETE_REQUIRED_ON_CASCADE,

        /// <remarks/>
        DEPENDENCY_EXISTS,

        /// <remarks/>
        DUPLICATES_DETECTED,

        /// <remarks/>
        DUPLICATE_CASE_SOLUTION,

        /// <remarks/>
        DUPLICATE_COMM_NICKNAME,

        /// <remarks/>
        DUPLICATE_CUSTOM_ENTITY_DEFINITION,

        /// <remarks/>
        DUPLICATE_CUSTOM_TAB_MOTIF,

        /// <remarks/>
        DUPLICATE_DEVELOPER_NAME,

        /// <remarks/>
        DUPLICATE_EXTERNAL_ID,

        /// <remarks/>
        DUPLICATE_MASTER_LABEL,

        /// <remarks/>
        DUPLICATE_SENDER_DISPLAY_NAME,

        /// <remarks/>
        DUPLICATE_USERNAME,

        /// <remarks/>
        DUPLICATE_VALUE,

        /// <remarks/>
        EMAIL_ADDRESS_BOUNCED,

        /// <remarks/>
        EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR,

        /// <remarks/>
        EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR,

        /// <remarks/>
        EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR,

        /// <remarks/>
        EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR,

        /// <remarks/>
        EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR,

        /// <remarks/>
        EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR,

        /// <remarks/>
        EMAIL_OPTED_OUT,

        /// <remarks/>
        EMAIL_TEMPLATE_FORMULA_ERROR,

        /// <remarks/>
        EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR,

        /// <remarks/>
        EMAIL_TEMPLATE_MERGEFIELD_ERROR,

        /// <remarks/>
        EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR,

        /// <remarks/>
        EMAIL_TEMPLATE_PROCESSING_ERROR,

        /// <remarks/>
        EMPTY_SCONTROL_FILE_NAME,

        /// <remarks/>
        ENHANCED_EMAIL_TEMPLATE_COMPILATION_ERROR,

        /// <remarks/>
        ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE,

        /// <remarks/>
        ENTITY_IS_ARCHIVED,

        /// <remarks/>
        ENTITY_IS_DELETED,

        /// <remarks/>
        ENTITY_IS_LOCKED,

        /// <remarks/>
        ENTITY_SAVE_ERROR,

        /// <remarks/>
        ENTITY_SAVE_VALIDATION_ERROR,

        /// <remarks/>
        ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT,

        /// <remarks/>
        ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB,

        /// <remarks/>
        ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB,

        /// <remarks/>
        ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN,

        /// <remarks/>
        ERROR_CALCULATING_EXPIRY_DATE,

        /// <remarks/>
        ERROR_IN_MAILER,

        /// <remarks/>
        EXCEEDED_MAX_SEMIJOIN_SUBSELECTS_WRITE,

        /// <remarks/>
        EXCHANGE_WEB_SERVICES_URL_INVALID,

        /// <remarks/>
        EXTERNAL_RESOURCE_FORBIDDEN,

        /// <remarks/>
        FAILED_ACTIVATION,

        /// <remarks/>
        FAILED_DUE_TO_OTHER_INPUTS,

        /// <remarks/>
        FIELD_CUSTOM_VALIDATION_EXCEPTION,

        /// <remarks/>
        FIELD_FILTER_VALIDATION_EXCEPTION,

        /// <remarks/>
        FIELD_INTEGRITY_EXCEPTION,

        /// <remarks/>
        FIELD_KEYWORD_LIST_MATCH_LIMIT,

        /// <remarks/>
        FIELD_MAPPING_ERROR,

        /// <remarks/>
        FIELD_MODERATION_RULE_BLOCK,

        /// <remarks/>
        FIELD_NOT_UPDATABLE,

        /// <remarks/>
        FILE_EXTENSION_NOT_ALLOWED,

        /// <remarks/>
        FILE_SIZE_LIMIT_EXCEEDED,

        /// <remarks/>
        FILTERED_LOOKUP_LIMIT_EXCEEDED,

        /// <remarks/>
        FIND_DUPLICATES_ERROR,

        /// <remarks/>
        FLOW_EXCEPTION,

        /// <remarks/>
        FUNCTIONALITY_NOT_ENABLED,

        /// <remarks/>
        HAS_PUBLIC_REFERENCES,

        /// <remarks/>
        HTML_FILE_UPLOAD_NOT_ALLOWED,

        /// <remarks/>
        IAS_AM_AUTH_BAD_REQUEST,

        /// <remarks/>
        IAS_AM_AUTH_UNAUTHORIZED,

        /// <remarks/>
        IAS_INVALID_AUTH,

        /// <remarks/>
        IAS_INVALID_REQUEST_PARAMETER,

        /// <remarks/>
        IAS_RECORD_DOES_NOT_EXIST,

        /// <remarks/>
        IAS_TENANT_NOT_PROVISIONED,

        /// <remarks/>
        IMAGE_TOO_LARGE,

        /// <remarks/>
        INACTIVE_OWNER_OR_USER,

        /// <remarks/>
        INACTIVE_RULE_ERROR,

        /// <remarks/>
        INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE,

        /// <remarks/>
        INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY,

        /// <remarks/>
        INSUFFICIENT_ACCESS_OR_READONLY,

        /// <remarks/>
        INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA,

        /// <remarks/>
        INSUFFICIENT_BALANCE,

        /// <remarks/>
        INSUFFICIENT_CREDITS,

        /// <remarks/>
        INTEGRATION_CANCELLED,

        /// <remarks/>
        INTERNAL_ERROR,

        /// <remarks/>
        INVALID_ACCESS_LEVEL,

        /// <remarks/>
        INVALID_ACCESS_TOKEN,

        /// <remarks/>
        INVALID_API_INPUT,

        /// <remarks/>
        INVALID_ARGUMENT_TYPE,

        /// <remarks/>
        INVALID_ASSIGNEE_TYPE,

        /// <remarks/>
        INVALID_ASSIGNMENT_RULE,

        /// <remarks/>
        INVALID_AUTH_HEADER,

        /// <remarks/>
        INVALID_BATCH_OPERATION,

        /// <remarks/>
        INVALID_CONTENT_TYPE,

        /// <remarks/>
        INVALID_CREDIT_CARD_INFO,

        /// <remarks/>
        INVALID_CROSS_REFERENCE_KEY,

        /// <remarks/>
        INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD,

        /// <remarks/>
        INVALID_CURRENCY_CONV_RATE,

        /// <remarks/>
        INVALID_CURRENCY_CORP_RATE,

        /// <remarks/>
        INVALID_CURRENCY_ISO,

        /// <remarks/>
        INVALID_DATASET_REFERENCE_INPUT,

        /// <remarks/>
        INVALID_DATA_CATEGORY_GROUP_REFERENCE,

        /// <remarks/>
        INVALID_DATA_URI,

        /// <remarks/>
        INVALID_EMAIL_ADDRESS,

        /// <remarks/>
        INVALID_EMPTY_KEY_OWNER,

        /// <remarks/>
        INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR,

        /// <remarks/>
        INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR,

        /// <remarks/>
        INVALID_ENTITY_FOR_UPSERT,

        /// <remarks/>
        INVALID_ENVIRONMENT_HUB_MEMBER,

        /// <remarks/>
        INVALID_EVENT_DELIVERY,

        /// <remarks/>
        INVALID_EVENT_INPUT,

        /// <remarks/>
        INVALID_EVENT_SUBSCRIPTION,

        /// <remarks/>
        INVALID_EXTENSION_ID,

        /// <remarks/>
        INVALID_FIELD,

        /// <remarks/>
        INVALID_FIELD_FOR_INSERT_UPDATE,

        /// <remarks/>
        INVALID_FIELD_WHEN_USING_TEMPLATE,

        /// <remarks/>
        INVALID_FILTER_ACTION,

        /// <remarks/>
        INVALID_GOOGLE_DOCS_URL,

        /// <remarks/>
        INVALID_ID_FIELD,

        /// <remarks/>
        INVALID_INET_ADDRESS,

        /// <remarks/>
        INVALID_INPUT,

        /// <remarks/>
        INVALID_INPUT_FORMAT,

        /// <remarks/>
        INVALID_KEY_FIELD_INPUT,

        /// <remarks/>
        INVALID_LINEITEM_CLONE_STATE,

        /// <remarks/>
        INVALID_MARKUP,

        /// <remarks/>
        INVALID_MASTER_OR_TRANSLATED_SOLUTION,

        /// <remarks/>
        INVALID_MESSAGE_ID_REFERENCE,

        /// <remarks/>
        INVALID_NAMESPACE_PREFIX,

        /// <remarks/>
        INVALID_OAUTH_URL,

        /// <remarks/>
        INVALID_OPERATION,

        /// <remarks/>
        INVALID_OPERATOR,

        /// <remarks/>
        INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST,

        /// <remarks/>
        INVALID_OWNER,

        /// <remarks/>
        INVALID_PACKAGE_LICENSE,

        /// <remarks/>
        INVALID_PACKAGE_VERSION,

        /// <remarks/>
        INVALID_PARTNER_NETWORK_STATUS,

        /// <remarks/>
        INVALID_PAYLOAD_VERSION,

        /// <remarks/>
        INVALID_PERSON_ACCOUNT_OPERATION,

        /// <remarks/>
        INVALID_PROVIDER_TYPE,

        /// <remarks/>
        INVALID_QUERY_KEY,

        /// <remarks/>
        INVALID_QUERY_LOCATOR,

        /// <remarks/>
        INVALID_QUERY_VALUE,

        /// <remarks/>
        INVALID_READ_ONLY_USER_DML,

        /// <remarks/>
        INVALID_REFRESH_TOKEN,

        /// <remarks/>
        INVALID_REQUEST_STATE,

        /// <remarks/>
        INVALID_RUNTIME_VALUE,

        /// <remarks/>
        INVALID_SAVE_AS_ACTIVITY_FLAG,

        /// <remarks/>
        INVALID_SCS_INBOUND_USER,

        /// <remarks/>
        INVALID_SESSION_ID,

        /// <remarks/>
        INVALID_SETUP_OWNER,

        /// <remarks/>
        INVALID_SIGNUP_COUNTRY,

        /// <remarks/>
        INVALID_SIGNUP_OPTION,

        /// <remarks/>
        INVALID_SITE_DELETE_EXCEPTION,

        /// <remarks/>
        INVALID_SITE_FILE_IMPORTED_EXCEPTION,

        /// <remarks/>
        INVALID_SITE_FILE_TYPE_EXCEPTION,

        /// <remarks/>
        INVALID_SOURCE_OBJECT_ID,

        /// <remarks/>
        INVALID_STATUS,

        /// <remarks/>
        INVALID_SUBDOMAIN,

        /// <remarks/>
        INVALID_TEXT_REPRESENTATION,

        /// <remarks/>
        INVALID_TYPE,

        /// <remarks/>
        INVALID_TYPE_FOR_OPERATION,

        /// <remarks/>
        INVALID_TYPE_ON_FIELD_IN_RECORD,

        /// <remarks/>
        INVALID_USERID,

        /// <remarks/>
        IP_RANGE_LIMIT_EXCEEDED,

        /// <remarks/>
        ITEM_NOT_FOUND,

        /// <remarks/>
        JIGSAW_IMPORT_LIMIT_EXCEEDED,

        /// <remarks/>
        LICENSE_LIMIT_EXCEEDED,

        /// <remarks/>
        LIGHT_PORTAL_USER_EXCEPTION,

        /// <remarks/>
        LIMIT_EXCEEDED,

        /// <remarks/>
        LIST_PRICE_NOT_FOUND,

        /// <remarks/>
        MALFORMED_ID,

        /// <remarks/>
        MANAGER_NOT_DEFINED,

        /// <remarks/>
        MASSMAIL_RETRY_LIMIT_EXCEEDED,

        /// <remarks/>
        MASS_MAIL_LIMIT_EXCEEDED,

        /// <remarks/>
        MATCH_DEFINITION_ERROR,

        /// <remarks/>
        MATCH_OPERATION_ERROR,

        /// <remarks/>
        MATCH_OPERATION_INVALID_ENGINE_ERROR,

        /// <remarks/>
        MATCH_OPERATION_INVALID_RULE_ERROR,

        /// <remarks/>
        MATCH_OPERATION_MISSING_ENGINE_ERROR,

        /// <remarks/>
        MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR,

        /// <remarks/>
        MATCH_OPERATION_MISSING_OPTIONS_ERROR,

        /// <remarks/>
        MATCH_OPERATION_MISSING_RULE_ERROR,

        /// <remarks/>
        MATCH_OPERATION_UNKNOWN_RULE_ERROR,

        /// <remarks/>
        MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR,

        /// <remarks/>
        MATCH_PRECONDITION_FAILED,

        /// <remarks/>
        MATCH_RUNTIME_ERROR,

        /// <remarks/>
        MATCH_SERVICE_ERROR,

        /// <remarks/>
        MATCH_SERVICE_TIMED_OUT,

        /// <remarks/>
        MATCH_SERVICE_UNAVAILABLE_ERROR,

        /// <remarks/>
        MAXIMUM_CCEMAILS_EXCEEDED,

        /// <remarks/>
        MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED,

        /// <remarks/>
        MAXIMUM_HIERARCHY_CHILDREN_REACHED,

        /// <remarks/>
        MAXIMUM_HIERARCHY_LEVELS_REACHED,

        /// <remarks/>
        MAXIMUM_HIERARCHY_TREE_SIZE_REACHED,

        /// <remarks/>
        MAXIMUM_SIZE_OF_ATTACHMENT,

        /// <remarks/>
        MAXIMUM_SIZE_OF_DOCUMENT,

        /// <remarks/>
        MAX_ACTIONS_PER_RULE_EXCEEDED,

        /// <remarks/>
        MAX_ACTIVE_RULES_EXCEEDED,

        /// <remarks/>
        MAX_APPROVAL_STEPS_EXCEEDED,

        /// <remarks/>
        MAX_DEPTH_IN_FLOW_EXECUTION,

        /// <remarks/>
        MAX_FORMULAS_PER_RULE_EXCEEDED,

        /// <remarks/>
        MAX_LIMIT_EXCEEDED,

        /// <remarks/>
        MAX_RULES_EXCEEDED,

        /// <remarks/>
        MAX_RULE_ENTRIES_EXCEEDED,

        /// <remarks/>
        MAX_TASK_DESCRIPTION_EXCEEEDED,

        /// <remarks/>
        MAX_TM_RULES_EXCEEDED,

        /// <remarks/>
        MAX_TM_RULE_ITEMS_EXCEEDED,

        /// <remarks/>
        MAX_TRIGGERS_EXCEEDED,

        /// <remarks/>
        MERGE_FAILED,

        /// <remarks/>
        METADATA_FIELD_UPDATE_ERROR,

        /// <remarks/>
        MISSING_ARGUMENT,

        /// <remarks/>
        MISSING_RECORD,

        /// <remarks/>
        MIXED_DML_OPERATION,

        /// <remarks/>
        MULTIPLE_VOUCHERS,

        /// <remarks/>
        NONUNIQUE_SHIPPING_ADDRESS,

        /// <remarks/>
        NO_ACCESS_TOKEN,

        /// <remarks/>
        NO_ACCESS_TOKEN_FROM_REFRESH,

        /// <remarks/>
        NO_APPLICABLE_PROCESS,

        /// <remarks/>
        NO_ATTACHMENT_PERMISSION,

        /// <remarks/>
        NO_AUTH_PROVIDER,

        /// <remarks/>
        NO_INACTIVE_DIVISION_MEMBERS,

        /// <remarks/>
        NO_MASS_MAIL_PERMISSION,

        /// <remarks/>
        NO_PARTNER_PERMISSION,

        /// <remarks/>
        NO_REFRESH_TOKEN,

        /// <remarks/>
        NO_SUCH_USER_EXISTS,

        /// <remarks/>
        NO_TOKEN_ENDPOINT,

        /// <remarks/>
        NUMBER_OUTSIDE_VALID_RANGE,

        /// <remarks/>
        NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED,

        /// <remarks/>
        OPERATION_ENQUEUED,

        /// <remarks/>
        OPTED_OUT_OF_MASS_MAIL,

        /// <remarks/>
        OP_WITH_INVALID_USER_TYPE_EXCEPTION,

        /// <remarks/>
        ORCHESTRATION_INVALID,

        /// <remarks/>
        ORDER_MANAGEMENT_ACTION_NOT_ALLOWED,

        /// <remarks/>
        ORDER_MANAGEMENT_RECORD_EXISTS,

        /// <remarks/>
        ORDER_MANAGEMENT_RECORD_NOT_FOUND,

        /// <remarks/>
        PACKAGE_DISABLED,

        /// <remarks/>
        PACKAGE_LICENSE_REQUIRED,

        /// <remarks/>
        PACKAGING_API_INSTALL_FAILED,

        /// <remarks/>
        PACKAGING_API_UNINSTALL_FAILED,

        /// <remarks/>
        PALI_INVALID_ACTION_ID,

        /// <remarks/>
        PALI_INVALID_ACTION_NAME,

        /// <remarks/>
        PALI_INVALID_ACTION_TYPE,

        /// <remarks/>
        PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID,

        /// <remarks/>
        PAL_INVALID_ENTITY_ID,

        /// <remarks/>
        PAL_INVALID_FLEXIPAGE_ID,

        /// <remarks/>
        PAL_INVALID_LAYOUT_ID,

        /// <remarks/>
        PAL_INVALID_PARAMETERS,

        /// <remarks/>
        PARTICIPANT_RELATIONSHIP_EXISTS,

        /// <remarks/>
        PAYLOAD_SIZE_EXCEEDED,

        /// <remarks/>
        PA_API_EXCEPTION,

        /// <remarks/>
        PA_AXIS_FAULT,

        /// <remarks/>
        PA_INVALID_ID_EXCEPTION,

        /// <remarks/>
        PA_NO_ACCESS_EXCEPTION,

        /// <remarks/>
        PA_NO_DATA_FOUND_EXCEPTION,

        /// <remarks/>
        PA_URI_SYNTAX_EXCEPTION,

        /// <remarks/>
        PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION,

        /// <remarks/>
        PICKLIST_INACTIVE_VALUES_EXCEEDED,

        /// <remarks/>
        PLATFORM_EVENT_ENCRYPTION_ERROR,

        /// <remarks/>
        PLATFORM_EVENT_PUBLISHING_UNAVAILABLE,

        /// <remarks/>
        PLATFORM_EVENT_PUBLISH_FAILED,

        /// <remarks/>
        PORTAL_NO_ACCESS,

        /// <remarks/>
        PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT,

        /// <remarks/>
        PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION,

        /// <remarks/>
        PRICE_NOT_FOUND,

        /// <remarks/>
        PRIVATE_CONTACT_ON_ASSET,

        /// <remarks/>
        PROCESSING_HALTED,

        /// <remarks/>
        QA_INVALID_CREATE_FEED_ITEM,

        /// <remarks/>
        QA_INVALID_SUCCESS_MESSAGE,

        /// <remarks/>
        QUERY_TIMEOUT,

        /// <remarks/>
        QUICK_ACTION_LIST_ITEM_NOT_ALLOWED,

        /// <remarks/>
        QUICK_ACTION_LIST_NOT_ALLOWED,

        /// <remarks/>
        RECORD_CREATION_FAILED,

        /// <remarks/>
        RECORD_IN_USE_BY_WORKFLOW,

        /// <remarks/>
        RELATED_ENTITY_FILTER_VALIDATION_EXCEPTION,

        /// <remarks/>
        REL_FIELD_BAD_ACCESSIBILITY,

        /// <remarks/>
        REPUTATION_MINIMUM_NUMBER_NOT_REACHED,

        /// <remarks/>
        REQUEST_RUNNING_TOO_LONG,

        /// <remarks/>
        REQUIRED_FEATURE_MISSING,

        /// <remarks/>
        REQUIRED_FIELD_MISSING,

        /// <remarks/>
        REQUIRE_CONNECTED_APP_SCS,

        /// <remarks/>
        REQUIRE_CONNECTED_APP_SESSION_SCS,

        /// <remarks/>
        REQUIRE_RUNAS_USER,

        /// <remarks/>
        RETRIEVE_EXCHANGE_ATTACHMENT_FAILED,

        /// <remarks/>
        RETRIEVE_EXCHANGE_EMAIL_FAILED,

        /// <remarks/>
        RETRIEVE_EXCHANGE_EVENT_FAILED,

        /// <remarks/>
        RETRIEVE_GOOGLE_EMAIL_FAILED,

        /// <remarks/>
        RETRIEVE_GOOGLE_EVENT_FAILED,

        /// <remarks/>
        RETRIEVE_USER_CONFIG_ERROR,

        /// <remarks/>
        SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR,

        /// <remarks/>
        SALESFORCE_INBOX_TRANSPORT_INVALID_INPUT_ERROR,

        /// <remarks/>
        SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR,

        /// <remarks/>
        SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR,

        /// <remarks/>
        SELF_REFERENCE_FROM_FLOW,

        /// <remarks/>
        SELF_REFERENCE_FROM_TRIGGER,

        /// <remarks/>
        SESSION_EXPIRED,

        /// <remarks/>
        SESSION_INVALIDATED,

        /// <remarks/>
        SHARE_NEEDED_FOR_CHILD_OWNER,

        /// <remarks/>
        SINGLE_EMAIL_LIMIT_EXCEEDED,

        /// <remarks/>
        SOCIAL_ACCOUNT_NOT_FOUND,

        /// <remarks/>
        SOCIAL_ACTION_INVALID,

        /// <remarks/>
        SOCIAL_PERSONA_NOT_FOUND,

        /// <remarks/>
        SOCIAL_POST_INVALID,

        /// <remarks/>
        SOCIAL_POST_NOT_FOUND,

        /// <remarks/>
        SPECIFICATION_GENERATION_EXCEPTION,

        /// <remarks/>
        STANDARD_PRICE_NOT_DEFINED,

        /// <remarks/>
        STORAGE_LIMIT_EXCEEDED,

        /// <remarks/>
        STRING_TOO_LONG,

        /// <remarks/>
        SUBDOMAIN_IN_USE,

        /// <remarks/>
        TABSET_LIMIT_EXCEEDED,

        /// <remarks/>
        TEMPLATE_NOT_ACTIVE,

        /// <remarks/>
        TEMPLATE_NOT_FOUND,

        /// <remarks/>
        TERMS_OF_SERVICE_UNREAD,

        /// <remarks/>
        TERRITORY_REALIGN_IN_PROGRESS,

        /// <remarks/>
        TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET,

        /// <remarks/>
        TOO_MANY_APEX_REQUESTS,

        /// <remarks/>
        TOO_MANY_ENUM_VALUE,

        /// <remarks/>
        TOO_MANY_JOBS,

        /// <remarks/>
        TOO_MANY_POSSIBLE_USERS_EXIST,

        /// <remarks/>
        TRANSFER_REQUIRES_READ,

        /// <remarks/>
        UNABLE_TO_LOCK_ROW,

        /// <remarks/>
        UNAVAILABLE_RECORDTYPE_EXCEPTION,

        /// <remarks/>
        UNAVAILABLE_REF,

        /// <remarks/>
        UNDEFINED_MAPPING_DEFINITION,

        /// <remarks/>
        UNDELETE_FAILED,

        /// <remarks/>
        UNKNOWN_EXCEPTION,

        /// <remarks/>
        UNKNOWN_TOKEN_ERROR,

        /// <remarks/>
        UNSAFE_HTML_CONTENT,

        /// <remarks/>
        UNSPECIFIED_EMAIL_ADDRESS,

        /// <remarks/>
        UNSUPPORTED_APEX_TRIGGER_OPERATON,

        /// <remarks/>
        UNSUPPORTED_SITE_FILE_IMPORTED_EXCEPTION,

        /// <remarks/>
        UNSUPPORTED_SOCIAL_PROVIDER,

        /// <remarks/>
        UNVERIFIED_SENDER_ADDRESS,

        /// <remarks/>
        UPDATE_GOOGLE_EMAIL_LABEL_FAILED,

        /// <remarks/>
        USER_OWNS_PORTAL_ACCOUNT_EXCEPTION,

        /// <remarks/>
        USER_WITH_APEX_SHARES_EXCEPTION,

        /// <remarks/>
        VF_COMPILE_ERROR,

        /// <remarks/>
        WEBLINK_SIZE_LIMIT_EXCEEDED,

        /// <remarks/>
        WEBLINK_URL_INVALID,

        /// <remarks/>
        WRONG_CONTROLLER_TYPE,

        /// <remarks/>
        XCLEAN_DJ_MATCH_IGNORABLE_ERROR,

        /// <remarks/>
        XCLEAN_DJ_MATCH_INTERNAL_DJ_ERROR,

        /// <remarks/>
        XCLEAN_DJ_MATCH_NON_RETRIABLE_ERROR,

        /// <remarks/>
        XCLEAN_DJ_MATCH_RETRIABLE_ERROR,

        /// <remarks/>
        XCLEAN_DJ_MATCH_UNKNOWN_ERROR,

        /// <remarks/>
        XCLEAN_UNEXPECTED_ERROR
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DuplicateError : Error
    {
        private DuplicateResult duplicateResultField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public DuplicateResult duplicateResult
        {
            get
            {
                return duplicateResultField;
            }

            set
            {
                duplicateResultField = value;
                RaisePropertyChanged("duplicateResult");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DuplicateResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool allowSaveField;
        private string duplicateRuleField;
        private string duplicateRuleEntityTypeField;
        private string errorMessageField;
        private MatchResult[] matchResultsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool allowSave
        {
            get
            {
                return allowSaveField;
            }

            set
            {
                allowSaveField = value;
                RaisePropertyChanged("allowSave");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string duplicateRule
        {
            get
            {
                return duplicateRuleField;
            }

            set
            {
                duplicateRuleField = value;
                RaisePropertyChanged("duplicateRule");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string duplicateRuleEntityType
        {
            get
            {
                return duplicateRuleEntityTypeField;
            }

            set
            {
                duplicateRuleEntityTypeField = value;
                RaisePropertyChanged("duplicateRuleEntityType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string errorMessage
        {
            get
            {
                return errorMessageField;
            }

            set
            {
                errorMessageField = value;
                RaisePropertyChanged("errorMessage");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("matchResults", Order = 4)]
        public MatchResult[] matchResults
        {
            get
            {
                return matchResultsField;
            }

            set
            {
                matchResultsField = value;
                RaisePropertyChanged("matchResults");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class MatchResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string entityTypeField;
        private Error[] errorsField;
        private string matchEngineField;
        private MatchRecord[] matchRecordsField;
        private string ruleField;
        private int sizeField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string entityType
        {
            get
            {
                return entityTypeField;
            }

            set
            {
                entityTypeField = value;
                RaisePropertyChanged("entityType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 1)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string matchEngine
        {
            get
            {
                return matchEngineField;
            }

            set
            {
                matchEngineField = value;
                RaisePropertyChanged("matchEngine");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("matchRecords", Order = 3)]
        public MatchRecord[] matchRecords
        {
            get
            {
                return matchRecordsField;
            }

            set
            {
                matchRecordsField = value;
                RaisePropertyChanged("matchRecords");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string rule
        {
            get
            {
                return ruleField;
            }

            set
            {
                ruleField = value;
                RaisePropertyChanged("rule");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public int size
        {
            get
            {
                return sizeField;
            }

            set
            {
                sizeField = value;
                RaisePropertyChanged("size");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class MatchRecord : object, System.ComponentModel.INotifyPropertyChanged
    {
        private AdditionalInformationMap[] additionalInformationField;
        private FieldDiff[] fieldDiffsField;
        private double matchConfidenceField;
        private sObject recordField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("additionalInformation", Order = 0)]
        public AdditionalInformationMap[] additionalInformation
        {
            get
            {
                return additionalInformationField;
            }

            set
            {
                additionalInformationField = value;
                RaisePropertyChanged("additionalInformation");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fieldDiffs", Order = 1)]
        public FieldDiff[] fieldDiffs
        {
            get
            {
                return fieldDiffsField;
            }

            set
            {
                fieldDiffsField = value;
                RaisePropertyChanged("fieldDiffs");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public double matchConfidence
        {
            get
            {
                return matchConfidenceField;
            }

            set
            {
                matchConfidenceField = value;
                RaisePropertyChanged("matchConfidence");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public sObject record
        {
            get
            {
                return recordField;
            }

            set
            {
                recordField = value;
                RaisePropertyChanged("record");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class AdditionalInformationMap : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string nameField;
        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
                RaisePropertyChanged("value");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class FieldDiff : object, System.ComponentModel.INotifyPropertyChanged
    {
        private differenceType differenceField;
        private string nameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public differenceType difference
        {
            get
            {
                return differenceField;
            }

            set
            {
                differenceField = value;
                RaisePropertyChanged("difference");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum differenceType
    {

        /// <remarks/>
        DIFFERENT,

        /// <remarks/>
        NULL,

        /// <remarks/>
        SAME,

        /// <remarks/>
        SIMILAR
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "create", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class createRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AssignmentRuleHeader AssignmentRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public MruHeader MruHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllOrNoneHeader AllOrNoneHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public EmailHeader EmailHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sObjects")]
        public sObject[] sObjects;

        public createRequest() : base()
        {
        }

        public createRequest(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, sObject[] sObjects) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.sObjects = sObjects;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "createResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class createResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public SaveResult[] result;

        public createResponse() : base()
        {
        }

        public createResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, SaveResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class OwnerChangeOption : object, System.ComponentModel.INotifyPropertyChanged
    {
        private OwnerChangeOptionType typeField;
        private bool executeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public OwnerChangeOptionType type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool execute
        {
            get
            {
                return executeField;
            }

            set
            {
                executeField = value;
                RaisePropertyChanged("execute");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum OwnerChangeOptionType
    {

        /// <remarks/>
        EnforceNewOwnerHasReadAccess,

        /// <remarks/>
        TransferOpenActivities,

        /// <remarks/>
        TransferNotesAndAttachments,

        /// <remarks/>
        TransferOthersOpenOpportunities,

        /// <remarks/>
        TransferOwnedOpenOpportunities,

        /// <remarks/>
        TransferOwnedClosedOpportunities,

        /// <remarks/>
        TransferOwnedOpenCases,

        /// <remarks/>
        TransferAllOwnedCases,

        /// <remarks/>
        TransferContracts,

        /// <remarks/>
        TransferOrders,

        /// <remarks/>
        TransferContacts,

        /// <remarks/>
        TransferArticleOwnedPublishedVersion,

        /// <remarks/>
        TransferArticleOwnedArchivedVersions,

        /// <remarks/>
        TransferArticleAllVersions,

        /// <remarks/>
        KeepAccountTeam,

        /// <remarks/>
        KeepSalesTeam,

        /// <remarks/>
        KeepSalesTeamGrantCurrentOwnerReadWriteAccess
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "update", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class updateRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AssignmentRuleHeader AssignmentRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public MruHeader MruHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllOrNoneHeader AllOrNoneHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public EmailHeader EmailHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("options")]
        public OwnerChangeOption[] OwnerChangeOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sObjects")]
        public sObject[] sObjects;

        public updateRequest() : base()
        {
        }

        public updateRequest(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, sObject[] sObjects) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.OwnerChangeOptions = OwnerChangeOptions;
            this.sObjects = sObjects;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "updateResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class updateResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public SaveResult[] result;

        public updateResponse() : base()
        {
        }

        public updateResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, SaveResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class UpsertResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool createdField;
        private Error[] errorsField;
        private string idField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool created
        {
            get
            {
                return createdField;
            }

            set
            {
                createdField = value;
                RaisePropertyChanged("created");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 1)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "upsert", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class upsertRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AssignmentRuleHeader AssignmentRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public MruHeader MruHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllOrNoneHeader AllOrNoneHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public EmailHeader EmailHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("options")]
        public OwnerChangeOption[] OwnerChangeOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string externalIDFieldName;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement("sObjects")]
        public sObject[] sObjects;

        public upsertRequest() : base()
        {
        }

        public upsertRequest(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, string externalIDFieldName, sObject[] sObjects) : base()















        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.OwnerChangeOptions = OwnerChangeOptions;
            this.externalIDFieldName = externalIDFieldName;
            this.sObjects = sObjects;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "upsertResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class upsertResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public UpsertResult[] result;

        public upsertResponse() : base()
        {
        }

        public upsertResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, UpsertResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class MergeRequest : object, System.ComponentModel.INotifyPropertyChanged
    {
        private AdditionalInformationMap[] additionalInformationMapField;
        private sObject masterRecordField;
        private string[] recordToMergeIdsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("additionalInformationMap", Order = 0)]
        public AdditionalInformationMap[] additionalInformationMap
        {
            get
            {
                return additionalInformationMapField;
            }

            set
            {
                additionalInformationMapField = value;
                RaisePropertyChanged("additionalInformationMap");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public sObject masterRecord
        {
            get
            {
                return masterRecordField;
            }

            set
            {
                masterRecordField = value;
                RaisePropertyChanged("masterRecord");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("recordToMergeIds", Order = 2)]
        public string[] recordToMergeIds
        {
            get
            {
                return recordToMergeIdsField;
            }

            set
            {
                recordToMergeIdsField = value;
                RaisePropertyChanged("recordToMergeIds");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class MergeResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private Error[] errorsField;
        private string idField;
        private string[] mergedRecordIdsField;
        private bool successField;
        private string[] updatedRelatedIdsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 0)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("mergedRecordIds", Order = 2)]
        public string[] mergedRecordIds
        {
            get
            {
                return mergedRecordIdsField;
            }

            set
            {
                mergedRecordIdsField = value;
                RaisePropertyChanged("mergedRecordIds");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("updatedRelatedIds", Order = 4)]
        public string[] updatedRelatedIds
        {
            get
            {
                return updatedRelatedIdsField;
            }

            set
            {
                updatedRelatedIdsField = value;
                RaisePropertyChanged("updatedRelatedIds");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "merge", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class mergeRequest1
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AssignmentRuleHeader AssignmentRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public MruHeader MruHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public EmailHeader EmailHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("request")]
        public MergeRequest[] request;

        public mergeRequest1() : base()
        {
        }

        public mergeRequest1(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, MergeRequest[] request) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.request = request;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "mergeResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class mergeResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public MergeResult[] result;

        public mergeResponse() : base()
        {
        }

        public mergeResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, MergeResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class UserTerritoryDeleteHeader : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string transferToUserIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string transferToUserId
        {
            get
            {
                return transferToUserIdField;
            }

            set
            {
                transferToUserIdField = value;
                RaisePropertyChanged("transferToUserId");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DeleteResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private Error[] errorsField;
        private string idField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", IsNullable = true, Order = 0)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "delete", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class deleteRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public UserTerritoryDeleteHeader UserTerritoryDeleteHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public EmailHeader EmailHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllOrNoneHeader AllOrNoneHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("ids")]
        public string[] ids;

        public deleteRequest() : base()
        {
        }

        public deleteRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, UserTerritoryDeleteHeader UserTerritoryDeleteHeader, EmailHeader EmailHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, string[] ids) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.UserTerritoryDeleteHeader = UserTerritoryDeleteHeader;
            this.EmailHeader = EmailHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.ids = ids;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "deleteResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class deleteResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DeleteResult[] result;

        public deleteResponse() : base()
        {
        }

        public deleteResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, DeleteResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class UndeleteResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private Error[] errorsField;
        private string idField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 0)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "undelete", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class undeleteRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllOrNoneHeader AllOrNoneHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("ids")]
        public string[] ids;

        public undeleteRequest() : base()
        {
        }

        public undeleteRequest(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, string[] ids) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.ids = ids;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "undeleteResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class undeleteResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public UndeleteResult[] result;

        public undeleteResponse() : base()
        {
        }

        public undeleteResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, UndeleteResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class EmptyRecycleBinResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private Error[] errorsField;
        private string idField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 0)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "emptyRecycleBin", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class emptyRecycleBinRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("ids")]
        public string[] ids;

        public emptyRecycleBinRequest() : base()
        {
        }

        public emptyRecycleBinRequest(SessionHeader SessionHeader, CallOptions CallOptions, string[] ids) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.ids = ids;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "emptyRecycleBinResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class emptyRecycleBinResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public EmptyRecycleBinResult[] result;

        public emptyRecycleBinResponse() : base()
        {
        }

        public emptyRecycleBinResponse(LimitInfo[] LimitInfoHeader, EmptyRecycleBinResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(AnonymousType = true, Namespace = "urn:partner.soap.sforce.com")]
    public partial class QueryOptions : object, System.ComponentModel.INotifyPropertyChanged
    {
        private int batchSizeField;
        private bool batchSizeFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public int batchSize
        {
            get
            {
                return batchSizeField;
            }

            set
            {
                batchSizeField = value;
                RaisePropertyChanged("batchSize");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool batchSizeSpecified
        {
            get
            {
                return batchSizeFieldSpecified;
            }

            set
            {
                batchSizeFieldSpecified = value;
                RaisePropertyChanged("batchSizeSpecified");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "retrieve", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class retrieveRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public QueryOptions QueryOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public MruHeader MruHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string fieldList;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public string sObjectType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 2)]
        [System.Xml.Serialization.XmlElement("ids")]
        public string[] ids;

        public retrieveRequest() : base()
        {
        }

        public retrieveRequest(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, MruHeader MruHeader, PackageVersion[] PackageVersionHeader, string fieldList, string sObjectType, string[] ids) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.QueryOptions = QueryOptions;
            this.MruHeader = MruHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.fieldList = fieldList;
            this.sObjectType = sObjectType;
            this.ids = ids;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "retrieveResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class retrieveResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result", IsNullable = true)]
        public sObject[] result;

        public retrieveResponse() : base()
        {
        }

        public retrieveResponse(LimitInfo[] LimitInfoHeader, sObject[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlInclude(typeof(ProcessWorkitemRequest))]
    [System.Xml.Serialization.XmlInclude(typeof(ProcessSubmitRequest))]
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ProcessRequest : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string commentsField;
        private string[] nextApproverIdsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string comments
        {
            get
            {
                return commentsField;
            }

            set
            {
                commentsField = value;
                RaisePropertyChanged("comments");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("nextApproverIds", IsNullable = true, Order = 1)]
        public string[] nextApproverIds
        {
            get
            {
                return nextApproverIdsField;
            }

            set
            {
                nextApproverIdsField = value;
                RaisePropertyChanged("nextApproverIds");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ProcessWorkitemRequest : ProcessRequest
    {
        private string actionField;
        private string workitemIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string action
        {
            get
            {
                return actionField;
            }

            set
            {
                actionField = value;
                RaisePropertyChanged("action");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string workitemId
        {
            get
            {
                return workitemIdField;
            }

            set
            {
                workitemIdField = value;
                RaisePropertyChanged("workitemId");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ProcessSubmitRequest : ProcessRequest
    {
        private string objectIdField;
        private string submitterIdField;
        private string processDefinitionNameOrIdField;
        private bool? skipEntryCriteriaField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string objectId
        {
            get
            {
                return objectIdField;
            }

            set
            {
                objectIdField = value;
                RaisePropertyChanged("objectId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string submitterId
        {
            get
            {
                return submitterIdField;
            }

            set
            {
                submitterIdField = value;
                RaisePropertyChanged("submitterId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string processDefinitionNameOrId
        {
            get
            {
                return processDefinitionNameOrIdField;
            }

            set
            {
                processDefinitionNameOrIdField = value;
                RaisePropertyChanged("processDefinitionNameOrId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public bool? skipEntryCriteria
        {
            get
            {
                return skipEntryCriteriaField;
            }

            set
            {
                skipEntryCriteriaField = value;
                RaisePropertyChanged("skipEntryCriteria");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ProcessResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string[] actorIdsField;
        private string entityIdField;
        private Error[] errorsField;
        private string instanceIdField;
        private string instanceStatusField;
        private string[] newWorkitemIdsField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("actorIds", Order = 0)]
        public string[] actorIds
        {
            get
            {
                return actorIdsField;
            }

            set
            {
                actorIdsField = value;
                RaisePropertyChanged("actorIds");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string entityId
        {
            get
            {
                return entityIdField;
            }

            set
            {
                entityIdField = value;
                RaisePropertyChanged("entityId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 2)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string instanceId
        {
            get
            {
                return instanceIdField;
            }

            set
            {
                instanceIdField = value;
                RaisePropertyChanged("instanceId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string instanceStatus
        {
            get
            {
                return instanceStatusField;
            }

            set
            {
                instanceStatusField = value;
                RaisePropertyChanged("instanceStatus");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("newWorkitemIds", IsNullable = true, Order = 5)]
        public string[] newWorkitemIds
        {
            get
            {
                return newWorkitemIdsField;
            }

            set
            {
                newWorkitemIdsField = value;
                RaisePropertyChanged("newWorkitemIds");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "process", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class processRequest1
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("actions")]
        public ProcessRequest[] actions;

        public processRequest1() : base()
        {
        }

        public processRequest1(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, ProcessRequest[] actions) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.actions = actions;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "processResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class processResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public ProcessResult[] result;

        public processResponse() : base()
        {
        }

        public processResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, ProcessResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class LeadConvert : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string accountIdField;
        private sObject accountRecordField;
        private bool? bypassAccountDedupeCheckField;
        private bool? bypassContactDedupeCheckField;
        private string contactIdField;
        private sObject contactRecordField;
        private string convertedStatusField;
        private bool doNotCreateOpportunityField;
        private string leadIdField;
        private string opportunityIdField;
        private string opportunityNameField;
        private sObject opportunityRecordField;
        private bool overwriteLeadSourceField;
        private string ownerIdField;
        private string relatedPersonAccountIdField;
        private sObject relatedPersonAccountRecordField;
        private bool sendNotificationEmailField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string accountId
        {
            get
            {
                return accountIdField;
            }

            set
            {
                accountIdField = value;
                RaisePropertyChanged("accountId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public sObject accountRecord
        {
            get
            {
                return accountRecordField;
            }

            set
            {
                accountRecordField = value;
                RaisePropertyChanged("accountRecord");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public bool? bypassAccountDedupeCheck
        {
            get
            {
                return bypassAccountDedupeCheckField;
            }

            set
            {
                bypassAccountDedupeCheckField = value;
                RaisePropertyChanged("bypassAccountDedupeCheck");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public bool? bypassContactDedupeCheck
        {
            get
            {
                return bypassContactDedupeCheckField;
            }

            set
            {
                bypassContactDedupeCheckField = value;
                RaisePropertyChanged("bypassContactDedupeCheck");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string contactId
        {
            get
            {
                return contactIdField;
            }

            set
            {
                contactIdField = value;
                RaisePropertyChanged("contactId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public sObject contactRecord
        {
            get
            {
                return contactRecordField;
            }

            set
            {
                contactRecordField = value;
                RaisePropertyChanged("contactRecord");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public string convertedStatus
        {
            get
            {
                return convertedStatusField;
            }

            set
            {
                convertedStatusField = value;
                RaisePropertyChanged("convertedStatus");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 7)]
        public bool doNotCreateOpportunity
        {
            get
            {
                return doNotCreateOpportunityField;
            }

            set
            {
                doNotCreateOpportunityField = value;
                RaisePropertyChanged("doNotCreateOpportunity");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 8)]
        public string leadId
        {
            get
            {
                return leadIdField;
            }

            set
            {
                leadIdField = value;
                RaisePropertyChanged("leadId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 9)]
        public string opportunityId
        {
            get
            {
                return opportunityIdField;
            }

            set
            {
                opportunityIdField = value;
                RaisePropertyChanged("opportunityId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 10)]
        public string opportunityName
        {
            get
            {
                return opportunityNameField;
            }

            set
            {
                opportunityNameField = value;
                RaisePropertyChanged("opportunityName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 11)]
        public sObject opportunityRecord
        {
            get
            {
                return opportunityRecordField;
            }

            set
            {
                opportunityRecordField = value;
                RaisePropertyChanged("opportunityRecord");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 12)]
        public bool overwriteLeadSource
        {
            get
            {
                return overwriteLeadSourceField;
            }

            set
            {
                overwriteLeadSourceField = value;
                RaisePropertyChanged("overwriteLeadSource");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 13)]
        public string ownerId
        {
            get
            {
                return ownerIdField;
            }

            set
            {
                ownerIdField = value;
                RaisePropertyChanged("ownerId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 14)]
        public string relatedPersonAccountId
        {
            get
            {
                return relatedPersonAccountIdField;
            }

            set
            {
                relatedPersonAccountIdField = value;
                RaisePropertyChanged("relatedPersonAccountId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 15)]
        public sObject relatedPersonAccountRecord
        {
            get
            {
                return relatedPersonAccountRecordField;
            }

            set
            {
                relatedPersonAccountRecordField = value;
                RaisePropertyChanged("relatedPersonAccountRecord");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 16)]
        public bool sendNotificationEmail
        {
            get
            {
                return sendNotificationEmailField;
            }

            set
            {
                sendNotificationEmailField = value;
                RaisePropertyChanged("sendNotificationEmail");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class LeadConvertResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string accountIdField;
        private string contactIdField;
        private Error[] errorsField;
        private string leadIdField;
        private string opportunityIdField;
        private string relatedPersonAccountIdField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string accountId
        {
            get
            {
                return accountIdField;
            }

            set
            {
                accountIdField = value;
                RaisePropertyChanged("accountId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string contactId
        {
            get
            {
                return contactIdField;
            }

            set
            {
                contactIdField = value;
                RaisePropertyChanged("contactId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 2)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string leadId
        {
            get
            {
                return leadIdField;
            }

            set
            {
                leadIdField = value;
                RaisePropertyChanged("leadId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string opportunityId
        {
            get
            {
                return opportunityIdField;
            }

            set
            {
                opportunityIdField = value;
                RaisePropertyChanged("opportunityId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public string relatedPersonAccountId
        {
            get
            {
                return relatedPersonAccountIdField;
            }

            set
            {
                relatedPersonAccountIdField = value;
                RaisePropertyChanged("relatedPersonAccountId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 6)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "convertLead", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class convertLeadRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("leadConverts")]
        public LeadConvert[] leadConverts;

        public convertLeadRequest() : base()
        {
        }

        public convertLeadRequest(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, LeadConvert[] leadConverts) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.leadConverts = leadConverts;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "convertLeadResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class convertLeadResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public LeadConvertResult[] result;

        public convertLeadResponse() : base()
        {
        }

        public convertLeadResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, LeadConvertResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "logout", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class logoutRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;

        public logoutRequest() : base()
        {
        }

        public logoutRequest(SessionHeader SessionHeader, CallOptions CallOptions) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "logoutResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class logoutResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;

        public logoutResponse() : base()
        {
        }

        public logoutResponse(LimitInfo[] LimitInfoHeader) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class InvalidateSessionsResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private Error[] errorsField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 0)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "invalidateSessions", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class invalidateSessionsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sessionIds")]
        public string[] sessionIds;

        public invalidateSessionsRequest() : base()
        {
        }

        public invalidateSessionsRequest(SessionHeader SessionHeader, CallOptions CallOptions, string[] sessionIds) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.sessionIds = sessionIds;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "invalidateSessionsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class invalidateSessionsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public InvalidateSessionsResult[] result;

        public invalidateSessionsResponse() : base()
        {
        }

        public invalidateSessionsResponse(LimitInfo[] LimitInfoHeader, InvalidateSessionsResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class GetDeletedResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DeletedRecord[] deletedRecordsField;
        private DateTime earliestDateAvailableField;
        private DateTime latestDateCoveredField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("deletedRecords", Order = 0)]
        public DeletedRecord[] deletedRecords
        {
            get
            {
                return deletedRecordsField;
            }

            set
            {
                deletedRecordsField = value;
                RaisePropertyChanged("deletedRecords");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public DateTime earliestDateAvailable
        {
            get
            {
                return earliestDateAvailableField;
            }

            set
            {
                earliestDateAvailableField = value;
                RaisePropertyChanged("earliestDateAvailable");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public DateTime latestDateCovered
        {
            get
            {
                return latestDateCoveredField;
            }

            set
            {
                latestDateCoveredField = value;
                RaisePropertyChanged("latestDateCovered");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DeletedRecord : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DateTime deletedDateField;
        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public DateTime deletedDate
        {
            get
            {
                return deletedDateField;
            }

            set
            {
                deletedDateField = value;
                RaisePropertyChanged("deletedDate");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "getDeleted", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class getDeletedRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string sObjectType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public DateTime startDate;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 2)]
        public DateTime endDate;

        public getDeletedRequest() : base()
        {
        }

        public getDeletedRequest(SessionHeader SessionHeader, CallOptions CallOptions, string sObjectType, DateTime startDate, DateTime endDate) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.sObjectType = sObjectType;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "getDeletedResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class getDeletedResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public GetDeletedResult result;

        public getDeletedResponse() : base()
        {
        }

        public getDeletedResponse(LimitInfo[] LimitInfoHeader, GetDeletedResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class GetUpdatedResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string[] idsField;
        private DateTime latestDateCoveredField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("ids", Order = 0)]
        public string[] ids
        {
            get
            {
                return idsField;
            }

            set
            {
                idsField = value;
                RaisePropertyChanged("ids");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public DateTime latestDateCovered
        {
            get
            {
                return latestDateCoveredField;
            }

            set
            {
                latestDateCoveredField = value;
                RaisePropertyChanged("latestDateCovered");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "getUpdated", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class getUpdatedRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string sObjectType;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public DateTime startDate;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 2)]
        public DateTime endDate;

        public getUpdatedRequest() : base()
        {
        }

        public getUpdatedRequest(SessionHeader SessionHeader, CallOptions CallOptions, string sObjectType, DateTime startDate, DateTime endDate) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.sObjectType = sObjectType;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "getUpdatedResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class getUpdatedResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public GetUpdatedResult result;

        public getUpdatedResponse() : base()
        {
        }

        public getUpdatedResponse(LimitInfo[] LimitInfoHeader, GetUpdatedResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class QueryResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool doneField;
        private string queryLocatorField;
        private sObject[] recordsField;
        private int sizeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool done
        {
            get
            {
                return doneField;
            }

            set
            {
                doneField = value;
                RaisePropertyChanged("done");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string queryLocator
        {
            get
            {
                return queryLocatorField;
            }

            set
            {
                queryLocatorField = value;
                RaisePropertyChanged("queryLocator");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("records", IsNullable = true, Order = 2)]
        public sObject[] records
        {
            get
            {
                return recordsField;
            }

            set
            {
                recordsField = value;
                RaisePropertyChanged("records");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public int size
        {
            get
            {
                return sizeField;
            }

            set
            {
                sizeField = value;
                RaisePropertyChanged("size");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "query", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class queryRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public QueryOptions QueryOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public MruHeader MruHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string queryString;

        public queryRequest() : base()
        {
        }

        public queryRequest(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, MruHeader MruHeader, PackageVersion[] PackageVersionHeader, string queryString) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.QueryOptions = QueryOptions;
            this.MruHeader = MruHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.queryString = queryString;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "queryResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class queryResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public QueryResult result;

        public queryResponse() : base()
        {
        }

        public queryResponse(LimitInfo[] LimitInfoHeader, QueryResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "queryAll", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class queryAllRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public QueryOptions QueryOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string queryString;

        public queryAllRequest() : base()
        {
        }

        public queryAllRequest(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, string queryString) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.QueryOptions = QueryOptions;
            this.queryString = queryString;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "queryAllResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class queryAllResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public QueryResult result;

        public queryAllResponse() : base()
        {
        }

        public queryAllResponse(LimitInfo[] LimitInfoHeader, QueryResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "queryMore", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class queryMoreRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public QueryOptions QueryOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string queryLocator;

        public queryMoreRequest() : base()
        {
        }

        public queryMoreRequest(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, string queryLocator) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.QueryOptions = QueryOptions;
            this.queryLocator = queryLocator;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "queryMoreResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class queryMoreResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public QueryResult result;

        public queryMoreResponse() : base()
        {
        }

        public queryMoreResponse(LimitInfo[] LimitInfoHeader, QueryResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SearchResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string queryIdField;
        private SearchRecord[] searchRecordsField;
        private SearchResultsMetadata searchResultsMetadataField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string queryId
        {
            get
            {
                return queryIdField;
            }

            set
            {
                queryIdField = value;
                RaisePropertyChanged("queryId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("searchRecords", Order = 1)]
        public SearchRecord[] searchRecords
        {
            get
            {
                return searchRecordsField;
            }

            set
            {
                searchRecordsField = value;
                RaisePropertyChanged("searchRecords");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public SearchResultsMetadata searchResultsMetadata
        {
            get
            {
                return searchResultsMetadataField;
            }

            set
            {
                searchResultsMetadataField = value;
                RaisePropertyChanged("searchResultsMetadata");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SearchRecord : object, System.ComponentModel.INotifyPropertyChanged
    {
        private sObject recordField;
        private SearchRecordMetadata searchRecordMetadataField;
        private SearchSnippet snippetField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public sObject record
        {
            get
            {
                return recordField;
            }

            set
            {
                recordField = value;
                RaisePropertyChanged("record");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public SearchRecordMetadata searchRecordMetadata
        {
            get
            {
                return searchRecordMetadataField;
            }

            set
            {
                searchRecordMetadataField = value;
                RaisePropertyChanged("searchRecordMetadata");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public SearchSnippet snippet
        {
            get
            {
                return snippetField;
            }

            set
            {
                snippetField = value;
                RaisePropertyChanged("snippet");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SearchRecordMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool searchPromotedField;
        private bool spellCorrectedField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool searchPromoted
        {
            get
            {
                return searchPromotedField;
            }

            set
            {
                searchPromotedField = value;
                RaisePropertyChanged("searchPromoted");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool spellCorrected
        {
            get
            {
                return spellCorrectedField;
            }

            set
            {
                spellCorrectedField = value;
                RaisePropertyChanged("spellCorrected");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SearchSnippet : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string textField;
        private NameValuePair[] wholeFieldsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string text
        {
            get
            {
                return textField;
            }

            set
            {
                textField = value;
                RaisePropertyChanged("text");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("wholeFields", Order = 1)]
        public NameValuePair[] wholeFields
        {
            get
            {
                return wholeFieldsField;
            }

            set
            {
                wholeFieldsField = value;
                RaisePropertyChanged("wholeFields");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class NameValuePair : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string nameField;
        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
                RaisePropertyChanged("value");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SearchResultsMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private LabelsSearchMetadata[] entityLabelMetadataField;
        private EntitySearchMetadata[] entityMetadataField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("entityLabelMetadata", Order = 0)]
        public LabelsSearchMetadata[] entityLabelMetadata
        {
            get
            {
                return entityLabelMetadataField;
            }

            set
            {
                entityLabelMetadataField = value;
                RaisePropertyChanged("entityLabelMetadata");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("entityMetadata", Order = 1)]
        public EntitySearchMetadata[] entityMetadata
        {
            get
            {
                return entityMetadataField;
            }

            set
            {
                entityMetadataField = value;
                RaisePropertyChanged("entityMetadata");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class LabelsSearchMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private NameValuePair[] entityFieldLabelsField;
        private string entityNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("entityFieldLabels", Order = 0)]
        public NameValuePair[] entityFieldLabels
        {
            get
            {
                return entityFieldLabelsField;
            }

            set
            {
                entityFieldLabelsField = value;
                RaisePropertyChanged("entityFieldLabels");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string entityName
        {
            get
            {
                return entityNameField;
            }

            set
            {
                entityNameField = value;
                RaisePropertyChanged("entityName");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class EntitySearchMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string entityNameField;
        private EntityErrorMetadata errorMetadataField;
        private FieldLevelSearchMetadata[] fieldMetadataField;
        private EntityIntentQueryMetadata intentQueryMetadataField;
        private EntitySearchPromotionMetadata searchPromotionMetadataField;
        private EntitySpellCorrectionMetadata spellCorrectionMetadataField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string entityName
        {
            get
            {
                return entityNameField;
            }

            set
            {
                entityNameField = value;
                RaisePropertyChanged("entityName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public EntityErrorMetadata errorMetadata
        {
            get
            {
                return errorMetadataField;
            }

            set
            {
                errorMetadataField = value;
                RaisePropertyChanged("errorMetadata");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fieldMetadata", Order = 2)]
        public FieldLevelSearchMetadata[] fieldMetadata
        {
            get
            {
                return fieldMetadataField;
            }

            set
            {
                fieldMetadataField = value;
                RaisePropertyChanged("fieldMetadata");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public EntityIntentQueryMetadata intentQueryMetadata
        {
            get
            {
                return intentQueryMetadataField;
            }

            set
            {
                intentQueryMetadataField = value;
                RaisePropertyChanged("intentQueryMetadata");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public EntitySearchPromotionMetadata searchPromotionMetadata
        {
            get
            {
                return searchPromotionMetadataField;
            }

            set
            {
                searchPromotionMetadataField = value;
                RaisePropertyChanged("searchPromotionMetadata");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public EntitySpellCorrectionMetadata spellCorrectionMetadata
        {
            get
            {
                return spellCorrectionMetadataField;
            }

            set
            {
                spellCorrectionMetadataField = value;
                RaisePropertyChanged("spellCorrectionMetadata");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class EntityErrorMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string errorCodeField;
        private string messageField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string errorCode
        {
            get
            {
                return errorCodeField;
            }

            set
            {
                errorCodeField = value;
                RaisePropertyChanged("errorCode");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string message
        {
            get
            {
                return messageField;
            }

            set
            {
                messageField = value;
                RaisePropertyChanged("message");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class FieldLevelSearchMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string labelField;
        private string nameField;
        private string typeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class EntityIntentQueryMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool intentQueryField;
        private string messageField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool intentQuery
        {
            get
            {
                return intentQueryField;
            }

            set
            {
                intentQueryField = value;
                RaisePropertyChanged("intentQuery");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string message
        {
            get
            {
                return messageField;
            }

            set
            {
                messageField = value;
                RaisePropertyChanged("message");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class EntitySearchPromotionMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private int promotedResultCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public int promotedResultCount
        {
            get
            {
                return promotedResultCountField;
            }

            set
            {
                promotedResultCountField = value;
                RaisePropertyChanged("promotedResultCount");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class EntitySpellCorrectionMetadata : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string correctedQueryField;
        private bool hasNonCorrectedResultsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string correctedQuery
        {
            get
            {
                return correctedQueryField;
            }

            set
            {
                correctedQueryField = value;
                RaisePropertyChanged("correctedQuery");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool hasNonCorrectedResults
        {
            get
            {
                return hasNonCorrectedResultsField;
            }

            set
            {
                hasNonCorrectedResultsField = value;
                RaisePropertyChanged("hasNonCorrectedResults");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "search", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class searchRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string searchString;

        public searchRequest() : base()
        {
        }

        public searchRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string searchString) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.searchString = searchString;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "searchResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class searchResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public SearchResult result;

        public searchResponse() : base()
        {
        }

        public searchResponse(LimitInfo[] LimitInfoHeader, SearchResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class GetServerTimestampResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DateTime timestampField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public DateTime timestamp
        {
            get
            {
                return timestampField;
            }

            set
            {
                timestampField = value;
                RaisePropertyChanged("timestamp");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "getServerTimestamp", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class getServerTimestampRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;

        public getServerTimestampRequest() : base()
        {
        }

        public getServerTimestampRequest(SessionHeader SessionHeader, CallOptions CallOptions) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "getServerTimestampResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class getServerTimestampResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public GetServerTimestampResult result;

        public getServerTimestampResponse() : base()
        {
        }

        public getServerTimestampResponse(LimitInfo[] LimitInfoHeader, GetServerTimestampResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SetPasswordResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "setPassword", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class setPasswordRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string userId;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public string password;

        public setPasswordRequest() : base()
        {
        }

        public setPasswordRequest(SessionHeader SessionHeader, CallOptions CallOptions, string userId, string password) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.userId = userId;
            this.password = password;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "setPasswordResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class setPasswordResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public SetPasswordResult result;

        public setPasswordResponse() : base()
        {
        }

        public setPasswordResponse(LimitInfo[] LimitInfoHeader, SetPasswordResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ChangeOwnPasswordResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "changeOwnPassword", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class changeOwnPasswordRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string oldPassword;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public string newPassword;

        public changeOwnPasswordRequest() : base()
        {
        }

        public changeOwnPasswordRequest(SessionHeader SessionHeader, CallOptions CallOptions, string oldPassword, string newPassword) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.oldPassword = oldPassword;
            this.newPassword = newPassword;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "changeOwnPasswordResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class changeOwnPasswordResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public ChangeOwnPasswordResult result;

        public changeOwnPasswordResponse() : base()
        {
        }

        public changeOwnPasswordResponse(LimitInfo[] LimitInfoHeader, ChangeOwnPasswordResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class ResetPasswordResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string passwordField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string password
        {
            get
            {
                return passwordField;
            }

            set
            {
                passwordField = value;
                RaisePropertyChanged("password");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "resetPassword", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class resetPasswordRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public EmailHeader EmailHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string userId;

        public resetPasswordRequest() : base()
        {
        }

        public resetPasswordRequest(SessionHeader SessionHeader, CallOptions CallOptions, EmailHeader EmailHeader, string userId) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.EmailHeader = EmailHeader;
            this.userId = userId;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "resetPasswordResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class resetPasswordResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public ResetPasswordResult result;

        public resetPasswordResponse() : base()
        {
        }

        public resetPasswordResponse(LimitInfo[] LimitInfoHeader, ResetPasswordResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "getUserInfo", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class getUserInfoRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;

        public getUserInfoRequest() : base()
        {
        }

        public getUserInfoRequest(SessionHeader SessionHeader, CallOptions CallOptions) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "getUserInfoResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class getUserInfoResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public GetUserInfoResult result;

        public getUserInfoResponse() : base()
        {
        }

        public getUserInfoResponse(LimitInfo[] LimitInfoHeader, GetUserInfoResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DeleteByExampleResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private sObject entityField;
        private Error[] errorsField;
        private long rowCountField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public sObject entity
        {
            get
            {
                return entityField;
            }

            set
            {
                entityField = value;
                RaisePropertyChanged("entity");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", IsNullable = true, Order = 1)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public long rowCount
        {
            get
            {
                return rowCountField;
            }

            set
            {
                rowCountField = value;
                RaisePropertyChanged("rowCount");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "deleteByExample", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class deleteByExampleRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public UserTerritoryDeleteHeader UserTerritoryDeleteHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public EmailHeader EmailHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllOrNoneHeader AllOrNoneHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sObjects")]
        public sObject[] sObjects;

        public deleteByExampleRequest() : base()
        {
        }

        public deleteByExampleRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, UserTerritoryDeleteHeader UserTerritoryDeleteHeader, EmailHeader EmailHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, sObject[] sObjects) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.UserTerritoryDeleteHeader = UserTerritoryDeleteHeader;
            this.EmailHeader = EmailHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.sObjects = sObjects;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "deleteByExampleResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class deleteByExampleResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingInfo DebuggingInfo;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DeleteByExampleResult[] result;

        public deleteByExampleResponse() : base()
        {
        }

        public deleteByExampleResponse(DebuggingInfo DebuggingInfo, LimitInfo[] LimitInfoHeader, DeleteByExampleResult[] result) : base()
        {
            this.DebuggingInfo = DebuggingInfo;
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SendEmailResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private SendEmailError[] errorsField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 0)]
        public SendEmailError[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SendEmailError : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string[] fieldsField;
        private string messageField;
        private StatusCode statusCodeField;
        private string targetObjectIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fields", IsNullable = true, Order = 0)]
        public string[] fields
        {
            get
            {
                return fieldsField;
            }

            set
            {
                fieldsField = value;
                RaisePropertyChanged("fields");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string message
        {
            get
            {
                return messageField;
            }

            set
            {
                messageField = value;
                RaisePropertyChanged("message");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public StatusCode statusCode
        {
            get
            {
                return statusCodeField;
            }

            set
            {
                statusCodeField = value;
                RaisePropertyChanged("statusCode");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string targetObjectId
        {
            get
            {
                return targetObjectIdField;
            }

            set
            {
                targetObjectIdField = value;
                RaisePropertyChanged("targetObjectId");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "sendEmailMessage", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class sendEmailMessageRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("ids")]
        public string[] ids;

        public sendEmailMessageRequest() : base()
        {
        }

        public sendEmailMessageRequest(SessionHeader SessionHeader, CallOptions CallOptions, string[] ids) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.ids = ids;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "sendEmailMessageResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class sendEmailMessageResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public SendEmailResult[] result;

        public sendEmailMessageResponse() : base()
        {
        }

        public sendEmailMessageResponse(LimitInfo[] LimitInfoHeader, SendEmailResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlInclude(typeof(SingleEmailMessage))]
    [System.Xml.Serialization.XmlInclude(typeof(MassEmailMessage))]
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class Email : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool? bccSenderField;
        private EmailPriority? emailPriorityField;
        private string replyToField;
        private bool? saveAsActivityField;
        private string senderDisplayNameField;
        private string subjectField;
        private bool? useSignatureField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public bool? bccSender
        {
            get
            {
                return bccSenderField;
            }

            set
            {
                bccSenderField = value;
                RaisePropertyChanged("bccSender");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public EmailPriority? emailPriority
        {
            get
            {
                return emailPriorityField;
            }

            set
            {
                emailPriorityField = value;
                RaisePropertyChanged("emailPriority");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string replyTo
        {
            get
            {
                return replyToField;
            }

            set
            {
                replyToField = value;
                RaisePropertyChanged("replyTo");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public bool? saveAsActivity
        {
            get
            {
                return saveAsActivityField;
            }

            set
            {
                saveAsActivityField = value;
                RaisePropertyChanged("saveAsActivity");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string senderDisplayName
        {
            get
            {
                return senderDisplayNameField;
            }

            set
            {
                senderDisplayNameField = value;
                RaisePropertyChanged("senderDisplayName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public string subject
        {
            get
            {
                return subjectField;
            }

            set
            {
                subjectField = value;
                RaisePropertyChanged("subject");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 6)]
        public bool? useSignature
        {
            get
            {
                return useSignatureField;
            }

            set
            {
                useSignatureField = value;
                RaisePropertyChanged("useSignature");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum EmailPriority
    {

        /// <remarks/>
        Highest,

        /// <remarks/>
        High,

        /// <remarks/>
        Normal,

        /// <remarks/>
        Low,

        /// <remarks/>
        Lowest
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class SingleEmailMessage : Email
    {
        private string[] bccAddressesField;
        private string[] ccAddressesField;
        private string charsetField;
        private string[] documentAttachmentsField;
        private string[] entityAttachmentsField;
        private EmailFileAttachment[] fileAttachmentsField;
        private string htmlBodyField;
        private string inReplyToField;
        private SendEmailOptOutPolicy? optOutPolicyField;
        private string orgWideEmailAddressIdField;
        private string plainTextBodyField;
        private string referencesField;
        private string targetObjectIdField;
        private string templateIdField;
        private string templateNameField;
        private string[] toAddressesField;
        private bool? treatBodiesAsTemplateField;
        private bool? treatTargetObjectAsRecipientField;
        private string whatIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("bccAddresses", IsNullable = true, Order = 0)]
        public string[] bccAddresses
        {
            get
            {
                return bccAddressesField;
            }

            set
            {
                bccAddressesField = value;
                RaisePropertyChanged("bccAddresses");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("ccAddresses", IsNullable = true, Order = 1)]
        public string[] ccAddresses
        {
            get
            {
                return ccAddressesField;
            }

            set
            {
                ccAddressesField = value;
                RaisePropertyChanged("ccAddresses");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string charset
        {
            get
            {
                return charsetField;
            }

            set
            {
                charsetField = value;
                RaisePropertyChanged("charset");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("documentAttachments", Order = 3)]
        public string[] documentAttachments
        {
            get
            {
                return documentAttachmentsField;
            }

            set
            {
                documentAttachmentsField = value;
                RaisePropertyChanged("documentAttachments");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("entityAttachments", Order = 4)]
        public string[] entityAttachments
        {
            get
            {
                return entityAttachmentsField;
            }

            set
            {
                entityAttachmentsField = value;
                RaisePropertyChanged("entityAttachments");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("fileAttachments", Order = 5)]
        public EmailFileAttachment[] fileAttachments
        {
            get
            {
                return fileAttachmentsField;
            }

            set
            {
                fileAttachmentsField = value;
                RaisePropertyChanged("fileAttachments");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 6)]
        public string htmlBody
        {
            get
            {
                return htmlBodyField;
            }

            set
            {
                htmlBodyField = value;
                RaisePropertyChanged("htmlBody");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 7)]
        public string inReplyTo
        {
            get
            {
                return inReplyToField;
            }

            set
            {
                inReplyToField = value;
                RaisePropertyChanged("inReplyTo");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 8)]
        public SendEmailOptOutPolicy? optOutPolicy
        {
            get
            {
                return optOutPolicyField;
            }

            set
            {
                optOutPolicyField = value;
                RaisePropertyChanged("optOutPolicy");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 9)]
        public string orgWideEmailAddressId
        {
            get
            {
                return orgWideEmailAddressIdField;
            }

            set
            {
                orgWideEmailAddressIdField = value;
                RaisePropertyChanged("orgWideEmailAddressId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 10)]
        public string plainTextBody
        {
            get
            {
                return plainTextBodyField;
            }

            set
            {
                plainTextBodyField = value;
                RaisePropertyChanged("plainTextBody");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 11)]
        public string references
        {
            get
            {
                return referencesField;
            }

            set
            {
                referencesField = value;
                RaisePropertyChanged("references");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 12)]
        public string targetObjectId
        {
            get
            {
                return targetObjectIdField;
            }

            set
            {
                targetObjectIdField = value;
                RaisePropertyChanged("targetObjectId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 13)]
        public string templateId
        {
            get
            {
                return templateIdField;
            }

            set
            {
                templateIdField = value;
                RaisePropertyChanged("templateId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 14)]
        public string templateName
        {
            get
            {
                return templateNameField;
            }

            set
            {
                templateNameField = value;
                RaisePropertyChanged("templateName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("toAddresses", IsNullable = true, Order = 15)]
        public string[] toAddresses
        {
            get
            {
                return toAddressesField;
            }

            set
            {
                toAddressesField = value;
                RaisePropertyChanged("toAddresses");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 16)]
        public bool? treatBodiesAsTemplate
        {
            get
            {
                return treatBodiesAsTemplateField;
            }

            set
            {
                treatBodiesAsTemplateField = value;
                RaisePropertyChanged("treatBodiesAsTemplate");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 17)]
        public bool? treatTargetObjectAsRecipient
        {
            get
            {
                return treatTargetObjectAsRecipientField;
            }

            set
            {
                treatTargetObjectAsRecipientField = value;
                RaisePropertyChanged("treatTargetObjectAsRecipient");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 18)]
        public string whatId
        {
            get
            {
                return whatIdField;
            }

            set
            {
                whatIdField = value;
                RaisePropertyChanged("whatId");
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class EmailFileAttachment : object, System.ComponentModel.INotifyPropertyChanged
    {
        private byte[] bodyField;
        private string contentTypeField;
        private string fileNameField;
        private string idField;
        private bool inlineField;
        private bool inlineFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(DataType = "base64Binary", IsNullable = true, Order = 0)]
        public byte[] body
        {
            get
            {
                return bodyField;
            }

            set
            {
                bodyField = value;
                RaisePropertyChanged("body");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string contentType
        {
            get
            {
                return contentTypeField;
            }

            set
            {
                contentTypeField = value;
                RaisePropertyChanged("contentType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string fileName
        {
            get
            {
                return fileNameField;
            }

            set
            {
                fileNameField = value;
                RaisePropertyChanged("fileName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string id
        {
            get
            {
                return idField;
            }

            set
            {
                idField = value;
                RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool inline
        {
            get
            {
                return inlineField;
            }

            set
            {
                inlineField = value;
                RaisePropertyChanged("inline");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool inlineSpecified
        {
            get
            {
                return inlineFieldSpecified;
            }

            set
            {
                inlineFieldSpecified = value;
                RaisePropertyChanged("inlineSpecified");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum SendEmailOptOutPolicy
    {

        /// <remarks/>
        SEND,

        /// <remarks/>
        FILTER,

        /// <remarks/>
        REJECT
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class MassEmailMessage : Email
    {
        private string descriptionField;
        private string[] targetObjectIdsField;
        private string templateIdField;
        private string[] whatIdsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string description
        {
            get
            {
                return descriptionField;
            }

            set
            {
                descriptionField = value;
                RaisePropertyChanged("description");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("targetObjectIds", Order = 1)]
        public string[] targetObjectIds
        {
            get
            {
                return targetObjectIdsField;
            }

            set
            {
                targetObjectIdsField = value;
                RaisePropertyChanged("targetObjectIds");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string templateId
        {
            get
            {
                return templateIdField;
            }

            set
            {
                templateIdField = value;
                RaisePropertyChanged("templateId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("whatIds", Order = 3)]
        public string[] whatIds
        {
            get
            {
                return whatIdsField;
            }

            set
            {
                whatIdsField = value;
                RaisePropertyChanged("whatIds");
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "sendEmail", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class sendEmailRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("messages")]
        public Email[] messages;

        public sendEmailRequest() : base()
        {
        }

        public sendEmailRequest(SessionHeader SessionHeader, CallOptions CallOptions, Email[] messages) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.messages = messages;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "sendEmailResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class sendEmailResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public SendEmailResult[] result;

        public sendEmailResponse() : base()
        {
        }

        public sendEmailResponse(LimitInfo[] LimitInfoHeader, SendEmailResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RenderEmailTemplateRequest : object, System.ComponentModel.INotifyPropertyChanged
    {
        private bool escapeHtmlInMergeFieldsField;
        private bool escapeHtmlInMergeFieldsFieldSpecified;
        private string[] templateBodiesField;
        private string whatIdField;
        private string whoIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public bool escapeHtmlInMergeFields
        {
            get
            {
                return escapeHtmlInMergeFieldsField;
            }

            set
            {
                escapeHtmlInMergeFieldsField = value;
                RaisePropertyChanged("escapeHtmlInMergeFields");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool escapeHtmlInMergeFieldsSpecified
        {
            get
            {
                return escapeHtmlInMergeFieldsFieldSpecified;
            }

            set
            {
                escapeHtmlInMergeFieldsFieldSpecified = value;
                RaisePropertyChanged("escapeHtmlInMergeFieldsSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("templateBodies", Order = 1)]
        public string[] templateBodies
        {
            get
            {
                return templateBodiesField;
            }

            set
            {
                templateBodiesField = value;
                RaisePropertyChanged("templateBodies");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string whatId
        {
            get
            {
                return whatIdField;
            }

            set
            {
                whatIdField = value;
                RaisePropertyChanged("whatId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string whoId
        {
            get
            {
                return whoIdField;
            }

            set
            {
                whoIdField = value;
                RaisePropertyChanged("whoId");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RenderEmailTemplateResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private RenderEmailTemplateBodyResult[] bodyResultsField;
        private Error[] errorsField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("bodyResults", Order = 0)]
        public RenderEmailTemplateBodyResult[] bodyResults
        {
            get
            {
                return bodyResultsField;
            }

            set
            {
                bodyResultsField = value;
                RaisePropertyChanged("bodyResults");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 1)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RenderEmailTemplateBodyResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private RenderEmailTemplateError[] errorsField;
        private string mergedBodyField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 0)]
        public RenderEmailTemplateError[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public string mergedBody
        {
            get
            {
                return mergedBodyField;
            }

            set
            {
                mergedBodyField = value;
                RaisePropertyChanged("mergedBody");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RenderEmailTemplateError : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string fieldNameField;
        private string messageField;
        private int offsetField;
        private StatusCode statusCodeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string fieldName
        {
            get
            {
                return fieldNameField;
            }

            set
            {
                fieldNameField = value;
                RaisePropertyChanged("fieldName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string message
        {
            get
            {
                return messageField;
            }

            set
            {
                messageField = value;
                RaisePropertyChanged("message");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public int offset
        {
            get
            {
                return offsetField;
            }

            set
            {
                offsetField = value;
                RaisePropertyChanged("offset");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public StatusCode statusCode
        {
            get
            {
                return statusCodeField;
            }

            set
            {
                statusCodeField = value;
                RaisePropertyChanged("statusCode");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "renderEmailTemplate", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class renderEmailTemplateRequest1
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("renderRequests")]
        public RenderEmailTemplateRequest[] renderRequests;

        public renderEmailTemplateRequest1() : base()
        {
        }

        public renderEmailTemplateRequest1(SessionHeader SessionHeader, CallOptions CallOptions, RenderEmailTemplateRequest[] renderRequests) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.renderRequests = renderRequests;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "renderEmailTemplateResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class renderEmailTemplateResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public RenderEmailTemplateResult[] result;

        public renderEmailTemplateResponse() : base()
        {
        }

        public renderEmailTemplateResponse(LimitInfo[] LimitInfoHeader, RenderEmailTemplateResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RenderStoredEmailTemplateRequest : object, System.ComponentModel.INotifyPropertyChanged
    {
        private AttachmentRetrievalOption? attachmentRetrievalOptionField;
        private string templateIdField;
        private bool updateTemplateUsageField;
        private bool updateTemplateUsageFieldSpecified;
        private string whatIdField;
        private string whoIdField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public AttachmentRetrievalOption? attachmentRetrievalOption
        {
            get
            {
                return attachmentRetrievalOptionField;
            }

            set
            {
                attachmentRetrievalOptionField = value;
                RaisePropertyChanged("attachmentRetrievalOption");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string templateId
        {
            get
            {
                return templateIdField;
            }

            set
            {
                templateIdField = value;
                RaisePropertyChanged("templateId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool updateTemplateUsage
        {
            get
            {
                return updateTemplateUsageField;
            }

            set
            {
                updateTemplateUsageField = value;
                RaisePropertyChanged("updateTemplateUsage");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool updateTemplateUsageSpecified
        {
            get
            {
                return updateTemplateUsageFieldSpecified;
            }

            set
            {
                updateTemplateUsageFieldSpecified = value;
                RaisePropertyChanged("updateTemplateUsageSpecified");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string whatId
        {
            get
            {
                return whatIdField;
            }

            set
            {
                whatIdField = value;
                RaisePropertyChanged("whatId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public string whoId
        {
            get
            {
                return whoIdField;
            }

            set
            {
                whoIdField = value;
                RaisePropertyChanged("whoId");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum AttachmentRetrievalOption
    {

        /// <remarks/>
        None,

        /// <remarks/>
        MetadataOnly,

        /// <remarks/>
        MetadataWithBody
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class RenderStoredEmailTemplateResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private Error[] errorsField;
        private SingleEmailMessage renderedEmailField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 0)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public SingleEmailMessage renderedEmail
        {
            get
            {
                return renderedEmailField;
            }

            set
            {
                renderedEmailField = value;
                RaisePropertyChanged("renderedEmail");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "renderStoredEmailTemplate", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class renderStoredEmailTemplateRequest1
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public RenderStoredEmailTemplateRequest request;

        public renderStoredEmailTemplateRequest1() : base()
        {
        }

        public renderStoredEmailTemplateRequest1(SessionHeader SessionHeader, CallOptions CallOptions, RenderStoredEmailTemplateRequest request) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.request = request;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "renderStoredEmailTemplateResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class renderStoredEmailTemplateResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public RenderStoredEmailTemplateResult result;

        public renderStoredEmailTemplateResponse() : base()
        {
        }

        public renderStoredEmailTemplateResponse(LimitInfo[] LimitInfoHeader, RenderStoredEmailTemplateResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class PerformQuickActionRequest : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string contextIdField;
        private string quickActionNameField;
        private sObject[] recordsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string contextId
        {
            get
            {
                return contextIdField;
            }

            set
            {
                contextIdField = value;
                RaisePropertyChanged("contextId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string quickActionName
        {
            get
            {
                return quickActionNameField;
            }

            set
            {
                quickActionNameField = value;
                RaisePropertyChanged("quickActionName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("records", IsNullable = true, Order = 2)]
        public sObject[] records
        {
            get
            {
                return recordsField;
            }

            set
            {
                recordsField = value;
                RaisePropertyChanged("records");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class PerformQuickActionResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string contextIdField;
        private bool createdField;
        private Error[] errorsField;
        private string[] feedItemIdsField;
        private string[] idsField;
        private bool successField;
        private string successMessageField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string contextId
        {
            get
            {
                return contextIdField;
            }

            set
            {
                contextIdField = value;
                RaisePropertyChanged("contextId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public bool created
        {
            get
            {
                return createdField;
            }

            set
            {
                createdField = value;
                RaisePropertyChanged("created");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 2)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("feedItemIds", IsNullable = true, Order = 3)]
        public string[] feedItemIds
        {
            get
            {
                return feedItemIdsField;
            }

            set
            {
                feedItemIdsField = value;
                RaisePropertyChanged("feedItemIds");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("ids", IsNullable = true, Order = 4)]
        public string[] ids
        {
            get
            {
                return idsField;
            }

            set
            {
                idsField = value;
                RaisePropertyChanged("ids");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 5)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 6)]
        public string successMessage
        {
            get
            {
                return successMessageField;
            }

            set
            {
                successMessageField = value;
                RaisePropertyChanged("successMessage");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "performQuickActions", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class performQuickActionsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AssignmentRuleHeader AssignmentRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public MruHeader MruHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllowFieldTruncationHeader AllowFieldTruncationHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DisableFeedTrackingHeader DisableFeedTrackingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public StreamingEnabledHeader StreamingEnabledHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public AllOrNoneHeader AllOrNoneHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DebuggingHeader DebuggingHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public EmailHeader EmailHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("options")]
        public OwnerChangeOption[] OwnerChangeOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("quickActions")]
        public PerformQuickActionRequest[] quickActions;

        public performQuickActionsRequest() : base()
        {
        }

        public performQuickActionsRequest(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, PerformQuickActionRequest[] quickActions) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.AssignmentRuleHeader = AssignmentRuleHeader;
            this.MruHeader = MruHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.StreamingEnabledHeader = StreamingEnabledHeader;
            this.AllOrNoneHeader = AllOrNoneHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.LocaleOptions = LocaleOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.EmailHeader = EmailHeader;
            this.OwnerChangeOptions = OwnerChangeOptions;
            this.quickActions = quickActions;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "performQuickActionsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class performQuickActionsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public PerformQuickActionResult[] result;

        public performQuickActionsResponse() : base()
        {
        }

        public performQuickActionsResponse(LimitInfo[] LimitInfoHeader, PerformQuickActionResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeQuickActionResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private ShareAccessLevel? accessLevelRequiredField;
        private string actionEnumOrIdField;
        private string canvasApplicationIdField;
        private string canvasApplicationNameField;
        private DescribeColor[] colorsField;
        private string contextSobjectTypeField;
        private DescribeQuickActionDefaultValue[] defaultValuesField;
        private string flowDevNameField;
        private string flowRecordIdVarField;
        private int? heightField;
        private string iconNameField;
        private string iconUrlField;
        private DescribeIcon[] iconsField;
        private string labelField;
        private DescribeLayoutSection layoutField;
        private string lightningComponentBundleIdField;
        private string lightningComponentBundleNameField;
        private string lightningComponentQualifiedNameField;
        private string lightningWebComponentBundleIdField;
        private string lightningWebComponentBundleNameField;
        private string lightningWebComponentQualifiedNameField;
        private string miniIconUrlField;
        private string mobileExtensionIdField;
        private string nameField;
        private bool showQuickActionLcHeaderField;
        private bool showQuickActionVfHeaderField;
        private string targetParentFieldField;
        private string targetRecordTypeIdField;
        private string targetSobjectTypeField;
        private string typeField;
        private string visualforcePageNameField;
        private string visualforcePageUrlField;
        private int? widthField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public ShareAccessLevel? accessLevelRequired
        {
            get
            {
                return accessLevelRequiredField;
            }

            set
            {
                accessLevelRequiredField = value;
                RaisePropertyChanged("accessLevelRequired");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string actionEnumOrId
        {
            get
            {
                return actionEnumOrIdField;
            }

            set
            {
                actionEnumOrIdField = value;
                RaisePropertyChanged("actionEnumOrId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public string canvasApplicationId
        {
            get
            {
                return canvasApplicationIdField;
            }

            set
            {
                canvasApplicationIdField = value;
                RaisePropertyChanged("canvasApplicationId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public string canvasApplicationName
        {
            get
            {
                return canvasApplicationNameField;
            }

            set
            {
                canvasApplicationNameField = value;
                RaisePropertyChanged("canvasApplicationName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("colors", Order = 4)]
        public DescribeColor[] colors
        {
            get
            {
                return colorsField;
            }

            set
            {
                colorsField = value;
                RaisePropertyChanged("colors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public string contextSobjectType
        {
            get
            {
                return contextSobjectTypeField;
            }

            set
            {
                contextSobjectTypeField = value;
                RaisePropertyChanged("contextSobjectType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("defaultValues", IsNullable = true, Order = 6)]
        public DescribeQuickActionDefaultValue[] defaultValues
        {
            get
            {
                return defaultValuesField;
            }

            set
            {
                defaultValuesField = value;
                RaisePropertyChanged("defaultValues");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 7)]
        public string flowDevName
        {
            get
            {
                return flowDevNameField;
            }

            set
            {
                flowDevNameField = value;
                RaisePropertyChanged("flowDevName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 8)]
        public string flowRecordIdVar
        {
            get
            {
                return flowRecordIdVarField;
            }

            set
            {
                flowRecordIdVarField = value;
                RaisePropertyChanged("flowRecordIdVar");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 9)]
        public int? height
        {
            get
            {
                return heightField;
            }

            set
            {
                heightField = value;
                RaisePropertyChanged("height");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 10)]
        public string iconName
        {
            get
            {
                return iconNameField;
            }

            set
            {
                iconNameField = value;
                RaisePropertyChanged("iconName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 11)]
        public string iconUrl
        {
            get
            {
                return iconUrlField;
            }

            set
            {
                iconUrlField = value;
                RaisePropertyChanged("iconUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("icons", Order = 12)]
        public DescribeIcon[] icons
        {
            get
            {
                return iconsField;
            }

            set
            {
                iconsField = value;
                RaisePropertyChanged("icons");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 13)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 14)]
        public DescribeLayoutSection layout
        {
            get
            {
                return layoutField;
            }

            set
            {
                layoutField = value;
                RaisePropertyChanged("layout");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 15)]
        public string lightningComponentBundleId
        {
            get
            {
                return lightningComponentBundleIdField;
            }

            set
            {
                lightningComponentBundleIdField = value;
                RaisePropertyChanged("lightningComponentBundleId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 16)]
        public string lightningComponentBundleName
        {
            get
            {
                return lightningComponentBundleNameField;
            }

            set
            {
                lightningComponentBundleNameField = value;
                RaisePropertyChanged("lightningComponentBundleName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 17)]
        public string lightningComponentQualifiedName
        {
            get
            {
                return lightningComponentQualifiedNameField;
            }

            set
            {
                lightningComponentQualifiedNameField = value;
                RaisePropertyChanged("lightningComponentQualifiedName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 18)]
        public string lightningWebComponentBundleId
        {
            get
            {
                return lightningWebComponentBundleIdField;
            }

            set
            {
                lightningWebComponentBundleIdField = value;
                RaisePropertyChanged("lightningWebComponentBundleId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 19)]
        public string lightningWebComponentBundleName
        {
            get
            {
                return lightningWebComponentBundleNameField;
            }

            set
            {
                lightningWebComponentBundleNameField = value;
                RaisePropertyChanged("lightningWebComponentBundleName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 20)]
        public string lightningWebComponentQualifiedName
        {
            get
            {
                return lightningWebComponentQualifiedNameField;
            }

            set
            {
                lightningWebComponentQualifiedNameField = value;
                RaisePropertyChanged("lightningWebComponentQualifiedName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 21)]
        public string miniIconUrl
        {
            get
            {
                return miniIconUrlField;
            }

            set
            {
                miniIconUrlField = value;
                RaisePropertyChanged("miniIconUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 22)]
        public string mobileExtensionId
        {
            get
            {
                return mobileExtensionIdField;
            }

            set
            {
                mobileExtensionIdField = value;
                RaisePropertyChanged("mobileExtensionId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 23)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 24)]
        public bool showQuickActionLcHeader
        {
            get
            {
                return showQuickActionLcHeaderField;
            }

            set
            {
                showQuickActionLcHeaderField = value;
                RaisePropertyChanged("showQuickActionLcHeader");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 25)]
        public bool showQuickActionVfHeader
        {
            get
            {
                return showQuickActionVfHeaderField;
            }

            set
            {
                showQuickActionVfHeaderField = value;
                RaisePropertyChanged("showQuickActionVfHeader");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 26)]
        public string targetParentField
        {
            get
            {
                return targetParentFieldField;
            }

            set
            {
                targetParentFieldField = value;
                RaisePropertyChanged("targetParentField");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 27)]
        public string targetRecordTypeId
        {
            get
            {
                return targetRecordTypeIdField;
            }

            set
            {
                targetRecordTypeIdField = value;
                RaisePropertyChanged("targetRecordTypeId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 28)]
        public string targetSobjectType
        {
            get
            {
                return targetSobjectTypeField;
            }

            set
            {
                targetSobjectTypeField = value;
                RaisePropertyChanged("targetSobjectType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 29)]
        public string type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 30)]
        public string visualforcePageName
        {
            get
            {
                return visualforcePageNameField;
            }

            set
            {
                visualforcePageNameField = value;
                RaisePropertyChanged("visualforcePageName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 31)]
        public string visualforcePageUrl
        {
            get
            {
                return visualforcePageUrlField;
            }

            set
            {
                visualforcePageUrlField = value;
                RaisePropertyChanged("visualforcePageUrl");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 32)]
        public int? width
        {
            get
            {
                return widthField;
            }

            set
            {
                widthField = value;
                RaisePropertyChanged("width");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeQuickActionDefaultValue : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string defaultValueField;
        private string fieldField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string defaultValue
        {
            get
            {
                return defaultValueField;
            }

            set
            {
                defaultValueField = value;
                RaisePropertyChanged("defaultValue");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string field
        {
            get
            {
                return fieldField;
            }

            set
            {
                fieldField = value;
                RaisePropertyChanged("field");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeQuickActions", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeQuickActionsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("quickActions")]
        public string[] quickActions;

        public describeQuickActionsRequest() : base()
        {
        }

        public describeQuickActionsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActions) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.quickActions = quickActions;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeQuickActionsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeQuickActionsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeQuickActionResult[] result;

        public describeQuickActionsResponse() : base()
        {
        }

        public describeQuickActionsResponse(LimitInfo[] LimitInfoHeader, DescribeQuickActionResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeQuickActionsForRecordType", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeQuickActionsForRecordTypeRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("quickActions")]
        public string[] quickActions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public string recordTypeId;

        public describeQuickActionsForRecordTypeRequest() : base()
        {
        }

        public describeQuickActionsForRecordTypeRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActions, string recordTypeId) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.quickActions = quickActions;
            this.recordTypeId = recordTypeId;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeQuickActionsForRecordTypeResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeQuickActionsForRecordTypeResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeQuickActionResult[] result;

        public describeQuickActionsForRecordTypeResponse() : base()
        {
        }

        public describeQuickActionsForRecordTypeResponse(LimitInfo[] LimitInfoHeader, DescribeQuickActionResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeAvailableQuickActionResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string actionEnumOrIdField;
        private string labelField;
        private string nameField;
        private string typeField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string actionEnumOrId
        {
            get
            {
                return actionEnumOrIdField;
            }

            set
            {
                actionEnumOrIdField = value;
                RaisePropertyChanged("actionEnumOrId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string label
        {
            get
            {
                return labelField;
            }

            set
            {
                labelField = value;
                RaisePropertyChanged("label");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string type
        {
            get
            {
                return typeField;
            }

            set
            {
                typeField = value;
                RaisePropertyChanged("type");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeAvailableQuickActions", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeAvailableQuickActionsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public string contextType;

        public describeAvailableQuickActionsRequest() : base()
        {
        }

        public describeAvailableQuickActionsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string contextType) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.contextType = contextType;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeAvailableQuickActionsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeAvailableQuickActionsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public DescribeAvailableQuickActionResult[] result;

        public describeAvailableQuickActionsResponse() : base()
        {
        }

        public describeAvailableQuickActionsResponse(LimitInfo[] LimitInfoHeader, DescribeAvailableQuickActionResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class QuickActionTemplateResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string contextIdField;
        private sObject defaultValueFormulasField;
        private sObject defaultValuesField;
        private Error[] errorsField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public string contextId
        {
            get
            {
                return contextIdField;
            }

            set
            {
                contextIdField = value;
                RaisePropertyChanged("contextId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public sObject defaultValueFormulas
        {
            get
            {
                return defaultValueFormulasField;
            }

            set
            {
                defaultValueFormulasField = value;
                RaisePropertyChanged("defaultValueFormulas");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public sObject defaultValues
        {
            get
            {
                return defaultValuesField;
            }

            set
            {
                defaultValuesField = value;
                RaisePropertyChanged("defaultValues");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 3)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 4)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "retrieveQuickActionTemplates", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class retrieveQuickActionTemplatesRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("quickActionNames")]
        public string[] quickActionNames;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public string contextId;

        public retrieveQuickActionTemplatesRequest() : base()
        {
        }

        public retrieveQuickActionTemplatesRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActionNames, string contextId) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.quickActionNames = quickActionNames;
            this.contextId = contextId;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "retrieveQuickActionTemplatesResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class retrieveQuickActionTemplatesResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public QuickActionTemplateResult[] result;

        public retrieveQuickActionTemplatesResponse() : base()
        {
        }

        public retrieveQuickActionTemplatesResponse(LimitInfo[] LimitInfoHeader, QuickActionTemplateResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "retrieveMassQuickActionTemplates", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class retrieveMassQuickActionTemplatesRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public string quickActionName;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement("contextIds")]
        public string[] contextIds;

        public retrieveMassQuickActionTemplatesRequest() : base()
        {
        }

        public retrieveMassQuickActionTemplatesRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string quickActionName, string[] contextIds) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.quickActionName = quickActionName;
            this.contextIds = contextIds;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "retrieveMassQuickActionTemplatesResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class retrieveMassQuickActionTemplatesResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public QuickActionTemplateResult[] result;

        public retrieveMassQuickActionTemplatesResponse() : base()
        {
        }

        public retrieveMassQuickActionTemplatesResponse(LimitInfo[] LimitInfoHeader, QuickActionTemplateResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeVisualForceResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private string domainField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 0)]
        public string domain
        {
            get
            {
                return domainField;
            }

            set
            {
                domainField = value;
                RaisePropertyChanged("domain");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeVisualForce", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeVisualForceRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public bool includeAllDetails;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        [System.Xml.Serialization.XmlElement(IsNullable = true)]
        public string namespacePrefix;

        public describeVisualForceRequest() : base()
        {
        }

        public describeVisualForceRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeAllDetails, string namespacePrefix) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.includeAllDetails = includeAllDetails;
            this.namespacePrefix = namespacePrefix;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeVisualForceResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeVisualForceResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        public DescribeVisualForceResult result;

        public describeVisualForceResponse() : base()
        {
        }

        public describeVisualForceResponse(LimitInfo[] LimitInfoHeader, DescribeVisualForceResult result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class FindDuplicatesResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private DuplicateResult[] duplicateResultsField;
        private Error[] errorsField;
        private bool successField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("duplicateResults", Order = 0)]
        public DuplicateResult[] duplicateResults
        {
            get
            {
                return duplicateResultsField;
            }

            set
            {
                duplicateResultsField = value;
                RaisePropertyChanged("duplicateResults");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("errors", Order = 1)]
        public Error[] errors
        {
            get
            {
                return errorsField;
            }

            set
            {
                errorsField = value;
                RaisePropertyChanged("errors");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 2)]
        public bool success
        {
            get
            {
                return successField;
            }

            set
            {
                successField = value;
                RaisePropertyChanged("success");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "findDuplicates", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class findDuplicatesRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("sObjects")]
        public sObject[] sObjects;

        public findDuplicatesRequest() : base()
        {
        }

        public findDuplicatesRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DuplicateRuleHeader DuplicateRuleHeader, sObject[] sObjects) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.sObjects = sObjects;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "findDuplicatesResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class findDuplicatesResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public FindDuplicatesResult[] result;

        public findDuplicatesResponse() : base()
        {
        }

        public findDuplicatesResponse(LimitInfo[] LimitInfoHeader, FindDuplicatesResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "findDuplicatesByIds", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class findDuplicatesByIdsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public DuplicateRuleHeader DuplicateRuleHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("ids")]
        public string[] ids;

        public findDuplicatesByIdsRequest() : base()
        {
        }

        public findDuplicatesByIdsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DuplicateRuleHeader DuplicateRuleHeader, string[] ids) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.DuplicateRuleHeader = DuplicateRuleHeader;
            this.ids = ids;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "findDuplicatesByIdsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class findDuplicatesByIdsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result")]
        public FindDuplicatesResult[] result;

        public findDuplicatesByIdsResponse() : base()
        {
        }

        public findDuplicatesByIdsResponse(LimitInfo[] LimitInfoHeader, FindDuplicatesResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class DescribeNounResult : object, System.ComponentModel.INotifyPropertyChanged
    {
        private NameCaseValue[] caseValuesField;
        private string developerNameField;
        private Gender? genderField;
        private string nameField;
        private string pluralAliasField;
        private StartsWith? startsWithField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement("caseValues", Order = 0)]
        public NameCaseValue[] caseValues
        {
            get
            {
                return caseValuesField;
            }

            set
            {
                caseValuesField = value;
                RaisePropertyChanged("caseValues");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 1)]
        public string developerName
        {
            get
            {
                return developerNameField;
            }

            set
            {
                developerNameField = value;
                RaisePropertyChanged("developerName");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public Gender? gender
        {
            get
            {
                return genderField;
            }

            set
            {
                genderField = value;
                RaisePropertyChanged("gender");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(Order = 3)]
        public string name
        {
            get
            {
                return nameField;
            }

            set
            {
                nameField = value;
                RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string pluralAlias
        {
            get
            {
                return pluralAliasField;
            }

            set
            {
                pluralAliasField = value;
                RaisePropertyChanged("pluralAlias");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 5)]
        public StartsWith? startsWith
        {
            get
            {
                return startsWithField;
            }

            set
            {
                startsWithField = value;
                RaisePropertyChanged("startsWith");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.DesignerCategory("code")]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public partial class NameCaseValue : object, System.ComponentModel.INotifyPropertyChanged
    {
        private Article? articleField;
        private CaseType? caseTypeField;
        private GrammaticalNumber? numberField;
        private Possessive? possessiveField;
        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 0)]
        public Article? article
        {
            get
            {
                return articleField;
            }

            set
            {
                articleField = value;
                RaisePropertyChanged("article");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 1)]
        public CaseType? caseType
        {
            get
            {
                return caseTypeField;
            }

            set
            {
                caseTypeField = value;
                RaisePropertyChanged("caseType");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 2)]
        public GrammaticalNumber? number
        {
            get
            {
                return numberField;
            }

            set
            {
                numberField = value;
                RaisePropertyChanged("number");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 3)]
        public Possessive? possessive
        {
            get
            {
                return possessiveField;
            }

            set
            {
                possessiveField = value;
                RaisePropertyChanged("possessive");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElement(IsNullable = true, Order = 4)]
        public string value
        {
            get
            {
                return valueField;
            }

            set
            {
                valueField = value;
                RaisePropertyChanged("value");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            var propertyChanged = PropertyChanged;
            if (propertyChanged is object)
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum Article
    {

        /// <remarks/>
        None,

        /// <remarks/>
        Indefinite,

        /// <remarks/>
        Definite
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum CaseType
    {

        /// <remarks/>
        Nominative,

        /// <remarks/>
        Accusative,

        /// <remarks/>
        Genitive,

        /// <remarks/>
        Dative,

        /// <remarks/>
        Inessive,

        /// <remarks/>
        Elative,

        /// <remarks/>
        Illative,

        /// <remarks/>
        Adessive,

        /// <remarks/>
        Ablative,

        /// <remarks/>
        Allative,

        /// <remarks/>
        Essive,

        /// <remarks/>
        Translative,

        /// <remarks/>
        Partitive,

        /// <remarks/>
        Objective,

        /// <remarks/>
        Subjective,

        /// <remarks/>
        Instrumental,

        /// <remarks/>
        Prepositional,

        /// <remarks/>
        Locative,

        /// <remarks/>
        Vocative,

        /// <remarks/>
        Sublative,

        /// <remarks/>
        Superessive,

        /// <remarks/>
        Delative,

        /// <remarks/>
        Causalfinal,

        /// <remarks/>
        Essiveformal,

        /// <remarks/>
        Termanative,

        /// <remarks/>
        Distributive,

        /// <remarks/>
        Ergative,

        /// <remarks/>
        Adverbial,

        /// <remarks/>
        Abessive,

        /// <remarks/>
        Comitative
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum GrammaticalNumber
    {

        /// <remarks/>
        Singular,

        /// <remarks/>
        Plural,

        /// <remarks/>
        Dual
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum Possessive
    {

        /// <remarks/>
        None,

        /// <remarks/>
        First,

        /// <remarks/>
        Second
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum Gender
    {

        /// <remarks/>
        Neuter,

        /// <remarks/>
        Masculine,

        /// <remarks/>
        Feminine,

        /// <remarks/>
        AnimateMasculine,

        /// <remarks/>
        ClassI,

        /// <remarks/>
        ClassIII,

        /// <remarks/>
        ClassV,

        /// <remarks/>
        ClassVII,

        /// <remarks/>
        ClassIX,

        /// <remarks/>
        ClassXI,

        /// <remarks/>
        ClassXIV,

        /// <remarks/>
        ClassXV,

        /// <remarks/>
        ClassXVI,

        /// <remarks/>
        ClassXVII,

        /// <remarks/>
        ClassXVIII
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCode("System.Xml", "4.8.4084.0")]
    [Serializable()]
    [System.Xml.Serialization.XmlType(Namespace = "urn:partner.soap.sforce.com")]
    public enum StartsWith
    {

        /// <remarks/>
        Consonant,

        /// <remarks/>
        Vowel,

        /// <remarks/>
        Special
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeNouns", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeNounsRequest
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public SessionHeader SessionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public CallOptions CallOptions;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("packageVersions", IsNullable = false)]
        public PackageVersion[] PackageVersionHeader;
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        public LocaleOptions LocaleOptions;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("nouns")]
        public string[] nouns;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 1)]
        public bool onlyRenamed;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 2)]
        public bool includeFields;

        public describeNounsRequest() : base()
        {
        }

        public describeNounsRequest(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] nouns, bool onlyRenamed, bool includeFields) : base()
        {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.PackageVersionHeader = PackageVersionHeader;
            this.LocaleOptions = LocaleOptions;
            this.nouns = nouns;
            this.onlyRenamed = onlyRenamed;
            this.includeFields = includeFields;
        }
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContract(WrapperName = "describeNounsResponse", WrapperNamespace = "urn:partner.soap.sforce.com", IsWrapped = true)]
    public partial class describeNounsResponse
    {
        [System.ServiceModel.MessageHeader(Namespace = "urn:partner.soap.sforce.com")]
        [System.Xml.Serialization.XmlArrayItem("limitInfo", IsNullable = false)]
        public LimitInfo[] LimitInfoHeader;
        [System.ServiceModel.MessageBodyMember(Namespace = "urn:partner.soap.sforce.com", Order = 0)]
        [System.Xml.Serialization.XmlElement("result", IsNullable = true)]
        public DescribeNounResult[] result;

        public describeNounsResponse() : base()
        {
        }

        public describeNounsResponse(LimitInfo[] LimitInfoHeader, DescribeNounResult[] result) : base()
        {
            this.LimitInfoHeader = LimitInfoHeader;
            this.result = result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface SoapChannel : Soap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThrough()]
    [System.CodeDom.Compiler.GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class SoapClient : System.ServiceModel.ClientBase<Soap>, Soap
    {
        public SoapClient() : base()
        {
        }

        public SoapClient(string endpointConfigurationName) : base(endpointConfigurationName)
        {
        }

        public SoapClient(string endpointConfigurationName, string remoteAddress) : base(endpointConfigurationName, remoteAddress)
        {
        }

        public SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : base(endpointConfigurationName, remoteAddress)
        {
        }

        public SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : base(binding, remoteAddress)
        {
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public loginResponse login(loginRequest request)
        {
            return Channel.login(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public loginResponse Partner_Soap_login(loginRequest request) => login(request);

        public LoginResult login(LoginScopeHeader LoginScopeHeader, CallOptions CallOptions, string username, string password)
        {
            var inValue = new loginRequest();
            inValue.LoginScopeHeader = LoginScopeHeader;
            inValue.CallOptions = CallOptions;
            inValue.username = username;
            inValue.password = password;
            var retVal = ((Soap)this).login(inValue);
            return retVal.result;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<loginResponse> loginAsync(loginRequest request)
        {
            return Channel.loginAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<loginResponse> Partner_Soap_loginAsync(loginRequest request) => loginAsync(request);

        public System.Threading.Tasks.Task<loginResponse> loginAsync(LoginScopeHeader LoginScopeHeader, CallOptions CallOptions, string username, string password)
        {
            var inValue = new loginRequest();
            inValue.LoginScopeHeader = LoginScopeHeader;
            inValue.CallOptions = CallOptions;
            inValue.username = username;
            inValue.password = password;
            return ((Soap)this).loginAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSObjectResponse describeSObject(describeSObjectRequest request)
        {
            return Channel.describeSObject(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSObjectResponse Partner_Soap_describeSObject(describeSObjectRequest request) => describeSObject(request);

        public LimitInfo[] describeSObject(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string sObjectType, out DescribeSObjectResult result)
        {
            var inValue = new describeSObjectRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.sObjectType = sObjectType;
            var retVal = ((Soap)this).describeSObject(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSObjectResponse> describeSObjectAsync(describeSObjectRequest request)
        {
            return Channel.describeSObjectAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSObjectResponse> Partner_Soap_describeSObjectAsync(describeSObjectRequest request) => describeSObjectAsync(request);

        public System.Threading.Tasks.Task<describeSObjectResponse> describeSObjectAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string sObjectType)
        {
            var inValue = new describeSObjectRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.sObjectType = sObjectType;
            return ((Soap)this).describeSObjectAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSObjectsResponse describeSObjects(describeSObjectsRequest request)
        {
            return Channel.describeSObjects(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSObjectsResponse Partner_Soap_describeSObjects(describeSObjectsRequest request) => describeSObjects(request);

        public LimitInfo[] describeSObjects(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] sObjectType, out DescribeSObjectResult[] result)
        {
            var inValue = new describeSObjectsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.sObjectType = sObjectType;
            var retVal = ((Soap)this).describeSObjects(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSObjectsResponse> describeSObjectsAsync(describeSObjectsRequest request)
        {
            return Channel.describeSObjectsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSObjectsResponse> Partner_Soap_describeSObjectsAsync(describeSObjectsRequest request) => describeSObjectsAsync(request);

        public System.Threading.Tasks.Task<describeSObjectsResponse> describeSObjectsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] sObjectType)
        {
            var inValue = new describeSObjectsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.sObjectType = sObjectType;
            return ((Soap)this).describeSObjectsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeGlobalResponse describeGlobal(describeGlobalRequest request)
        {
            return Channel.describeGlobal(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeGlobalResponse Partner_Soap_describeGlobal(describeGlobalRequest request) => describeGlobal(request);

        public LimitInfo[] describeGlobal(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, out DescribeGlobalResult result)
        {
            var inValue = new describeGlobalRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            var retVal = ((Soap)this).describeGlobal(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeGlobalResponse> describeGlobalAsync(describeGlobalRequest request)
        {
            return Channel.describeGlobalAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeGlobalResponse> Partner_Soap_describeGlobalAsync(describeGlobalRequest request) => describeGlobalAsync(request);

        public System.Threading.Tasks.Task<describeGlobalResponse> describeGlobalAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            var inValue = new describeGlobalRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            return ((Soap)this).describeGlobalAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeDataCategoryGroupsResponse describeDataCategoryGroups(describeDataCategoryGroupsRequest request)
        {
            return Channel.describeDataCategoryGroups(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeDataCategoryGroupsResponse Partner_Soap_describeDataCategoryGroups(describeDataCategoryGroupsRequest request) => describeDataCategoryGroups(request);

        public LimitInfo[] describeDataCategoryGroups(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] sObjectType, out DescribeDataCategoryGroupResult[] result)
        {
            var inValue = new describeDataCategoryGroupsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.sObjectType = sObjectType;
            var retVal = ((Soap)this).describeDataCategoryGroups(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeDataCategoryGroupsResponse> describeDataCategoryGroupsAsync(describeDataCategoryGroupsRequest request)
        {
            return Channel.describeDataCategoryGroupsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeDataCategoryGroupsResponse> Partner_Soap_describeDataCategoryGroupsAsync(describeDataCategoryGroupsRequest request) => describeDataCategoryGroupsAsync(request);

        public System.Threading.Tasks.Task<describeDataCategoryGroupsResponse> describeDataCategoryGroupsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] sObjectType)
        {
            var inValue = new describeDataCategoryGroupsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.sObjectType = sObjectType;
            return ((Soap)this).describeDataCategoryGroupsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeDataCategoryGroupStructuresResponse describeDataCategoryGroupStructures(describeDataCategoryGroupStructuresRequest request)
        {
            return Channel.describeDataCategoryGroupStructures(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeDataCategoryGroupStructuresResponse Partner_Soap_describeDataCategoryGroupStructures(describeDataCategoryGroupStructuresRequest request) => describeDataCategoryGroupStructures(request);

        public LimitInfo[] describeDataCategoryGroupStructures(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, DataCategoryGroupSobjectTypePair[] pairs, bool topCategoriesOnly, out DescribeDataCategoryGroupStructureResult[] result)
        {
            var inValue = new describeDataCategoryGroupStructuresRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.pairs = pairs;
            inValue.topCategoriesOnly = topCategoriesOnly;
            var retVal = ((Soap)this).describeDataCategoryGroupStructures(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeDataCategoryGroupStructuresResponse> describeDataCategoryGroupStructuresAsync(describeDataCategoryGroupStructuresRequest request)
        {
            return Channel.describeDataCategoryGroupStructuresAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeDataCategoryGroupStructuresResponse> Partner_Soap_describeDataCategoryGroupStructuresAsync(describeDataCategoryGroupStructuresRequest request) => describeDataCategoryGroupStructuresAsync(request);

        public System.Threading.Tasks.Task<describeDataCategoryGroupStructuresResponse> describeDataCategoryGroupStructuresAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, DataCategoryGroupSobjectTypePair[] pairs, bool topCategoriesOnly)
        {
            var inValue = new describeDataCategoryGroupStructuresRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.pairs = pairs;
            inValue.topCategoriesOnly = topCategoriesOnly;
            return ((Soap)this).describeDataCategoryGroupStructuresAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeDataCategoryMappingsResponse describeDataCategoryMappings(describeDataCategoryMappingsRequest request)
        {
            return Channel.describeDataCategoryMappings(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeDataCategoryMappingsResponse Partner_Soap_describeDataCategoryMappings(describeDataCategoryMappingsRequest request) => describeDataCategoryMappings(request);

        public LimitInfo[] describeDataCategoryMappings(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, out DescribeDataCategoryMappingResult[] result)
        {
            var inValue = new describeDataCategoryMappingsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            var retVal = ((Soap)this).describeDataCategoryMappings(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeDataCategoryMappingsResponse> describeDataCategoryMappingsAsync(describeDataCategoryMappingsRequest request)
        {
            return Channel.describeDataCategoryMappingsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeDataCategoryMappingsResponse> Partner_Soap_describeDataCategoryMappingsAsync(describeDataCategoryMappingsRequest request) => describeDataCategoryMappingsAsync(request);

        public System.Threading.Tasks.Task<describeDataCategoryMappingsResponse> describeDataCategoryMappingsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions)
        {
            var inValue = new describeDataCategoryMappingsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            return ((Soap)this).describeDataCategoryMappingsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeKnowledgeSettingsResponse describeKnowledgeSettings(describeKnowledgeSettingsRequest request)
        {
            return Channel.describeKnowledgeSettings(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeKnowledgeSettingsResponse Partner_Soap_describeKnowledgeSettings(describeKnowledgeSettingsRequest request) => describeKnowledgeSettings(request);

        public LimitInfo[] describeKnowledgeSettings(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, out KnowledgeSettings result)
        {
            var inValue = new describeKnowledgeSettingsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            var retVal = ((Soap)this).describeKnowledgeSettings(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeKnowledgeSettingsResponse> describeKnowledgeSettingsAsync(describeKnowledgeSettingsRequest request)
        {
            return Channel.describeKnowledgeSettingsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeKnowledgeSettingsResponse> Partner_Soap_describeKnowledgeSettingsAsync(describeKnowledgeSettingsRequest request) => describeKnowledgeSettingsAsync(request);

        public System.Threading.Tasks.Task<describeKnowledgeSettingsResponse> describeKnowledgeSettingsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions)
        {
            var inValue = new describeKnowledgeSettingsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            return ((Soap)this).describeKnowledgeSettingsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeAppMenuResponse describeAppMenu(describeAppMenuRequest request)
        {
            return Channel.describeAppMenu(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeAppMenuResponse Partner_Soap_describeAppMenu(describeAppMenuRequest request) => describeAppMenu(request);

        public LimitInfo[] describeAppMenu(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, AppMenuType appMenuType, string networkId, out DescribeAppMenuItem[] result)
        {
            var inValue = new describeAppMenuRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.appMenuType = appMenuType;
            inValue.networkId = networkId;
            var retVal = ((Soap)this).describeAppMenu(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeAppMenuResponse> describeAppMenuAsync(describeAppMenuRequest request)
        {
            return Channel.describeAppMenuAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeAppMenuResponse> Partner_Soap_describeAppMenuAsync(describeAppMenuRequest request) => describeAppMenuAsync(request);

        public System.Threading.Tasks.Task<describeAppMenuResponse> describeAppMenuAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, AppMenuType appMenuType, string networkId)
        {
            var inValue = new describeAppMenuRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.appMenuType = appMenuType;
            inValue.networkId = networkId;
            return ((Soap)this).describeAppMenuAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeGlobalThemeResponse describeGlobalTheme(describeGlobalThemeRequest request)
        {
            return Channel.describeGlobalTheme(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeGlobalThemeResponse Partner_Soap_describeGlobalTheme(describeGlobalThemeRequest request) => describeGlobalTheme(request);

        public LimitInfo[] describeGlobalTheme(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, out DescribeGlobalTheme result)
        {
            var inValue = new describeGlobalThemeRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            var retVal = ((Soap)this).describeGlobalTheme(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeGlobalThemeResponse> describeGlobalThemeAsync(describeGlobalThemeRequest request)
        {
            return Channel.describeGlobalThemeAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeGlobalThemeResponse> Partner_Soap_describeGlobalThemeAsync(describeGlobalThemeRequest request) => describeGlobalThemeAsync(request);

        public System.Threading.Tasks.Task<describeGlobalThemeResponse> describeGlobalThemeAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            var inValue = new describeGlobalThemeRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            return ((Soap)this).describeGlobalThemeAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeThemeResponse describeTheme(describeThemeRequest request)
        {
            return Channel.describeTheme(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeThemeResponse Partner_Soap_describeTheme(describeThemeRequest request) => describeTheme(request);

        public LimitInfo[] describeTheme(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sobjectType, out DescribeThemeItem[] result)
        {
            var inValue = new describeThemeRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sobjectType = sobjectType;
            var retVal = ((Soap)this).describeTheme(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeThemeResponse> describeThemeAsync(describeThemeRequest request)
        {
            return Channel.describeThemeAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeThemeResponse> Partner_Soap_describeThemeAsync(describeThemeRequest request) => describeThemeAsync(request);

        public System.Threading.Tasks.Task<describeThemeResponse> describeThemeAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sobjectType)
        {
            var inValue = new describeThemeRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sobjectType = sobjectType;
            return ((Soap)this).describeThemeAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeLayoutResponse describeLayout(describeLayoutRequest request)
        {
            return Channel.describeLayout(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeLayoutResponse Partner_Soap_describeLayout(describeLayoutRequest request) => describeLayout(request);

        public LimitInfo[] describeLayout(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string layoutName, string[] recordTypeIds, out DescribeLayoutResult result)
        {
            var inValue = new describeLayoutRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.layoutName = layoutName;
            inValue.recordTypeIds = recordTypeIds;
            var retVal = ((Soap)this).describeLayout(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeLayoutResponse> describeLayoutAsync(describeLayoutRequest request)
        {
            return Channel.describeLayoutAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeLayoutResponse> Partner_Soap_describeLayoutAsync(describeLayoutRequest request) => describeLayoutAsync(request);

        public System.Threading.Tasks.Task<describeLayoutResponse> describeLayoutAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string layoutName, string[] recordTypeIds)
        {
            var inValue = new describeLayoutRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.layoutName = layoutName;
            inValue.recordTypeIds = recordTypeIds;
            return ((Soap)this).describeLayoutAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSoftphoneLayoutResponse describeSoftphoneLayout(describeSoftphoneLayoutRequest request)
        {
            return Channel.describeSoftphoneLayout(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSoftphoneLayoutResponse Partner_Soap_describeSoftphoneLayout(describeSoftphoneLayoutRequest request) => describeSoftphoneLayout(request);

        public LimitInfo[] describeSoftphoneLayout(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, out DescribeSoftphoneLayoutResult result)
        {
            var inValue = new describeSoftphoneLayoutRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            var retVal = ((Soap)this).describeSoftphoneLayout(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSoftphoneLayoutResponse> describeSoftphoneLayoutAsync(describeSoftphoneLayoutRequest request)
        {
            return Channel.describeSoftphoneLayoutAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSoftphoneLayoutResponse> Partner_Soap_describeSoftphoneLayoutAsync(describeSoftphoneLayoutRequest request) => describeSoftphoneLayoutAsync(request);

        public System.Threading.Tasks.Task<describeSoftphoneLayoutResponse> describeSoftphoneLayoutAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            var inValue = new describeSoftphoneLayoutRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            return ((Soap)this).describeSoftphoneLayoutAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSearchLayoutsResponse describeSearchLayouts(describeSearchLayoutsRequest request)
        {
            return Channel.describeSearchLayouts(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSearchLayoutsResponse Partner_Soap_describeSearchLayouts(describeSearchLayoutsRequest request) => describeSearchLayouts(request);

        public LimitInfo[] describeSearchLayouts(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sObjectType, out DescribeSearchLayoutResult[] result)
        {
            var inValue = new describeSearchLayoutsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            var retVal = ((Soap)this).describeSearchLayouts(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSearchLayoutsResponse> describeSearchLayoutsAsync(describeSearchLayoutsRequest request)
        {
            return Channel.describeSearchLayoutsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSearchLayoutsResponse> Partner_Soap_describeSearchLayoutsAsync(describeSearchLayoutsRequest request) => describeSearchLayoutsAsync(request);

        public System.Threading.Tasks.Task<describeSearchLayoutsResponse> describeSearchLayoutsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sObjectType)
        {
            var inValue = new describeSearchLayoutsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            return ((Soap)this).describeSearchLayoutsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSearchableEntitiesResponse describeSearchableEntities(describeSearchableEntitiesRequest request)
        {
            return Channel.describeSearchableEntities(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSearchableEntitiesResponse Partner_Soap_describeSearchableEntities(describeSearchableEntitiesRequest request) => describeSearchableEntities(request);

        public LimitInfo[] describeSearchableEntities(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeOnlyEntitiesWithTabs, out DescribeSearchableEntityResult[] result)
        {
            var inValue = new describeSearchableEntitiesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.includeOnlyEntitiesWithTabs = includeOnlyEntitiesWithTabs;
            var retVal = ((Soap)this).describeSearchableEntities(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSearchableEntitiesResponse> describeSearchableEntitiesAsync(describeSearchableEntitiesRequest request)
        {
            return Channel.describeSearchableEntitiesAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSearchableEntitiesResponse> Partner_Soap_describeSearchableEntitiesAsync(describeSearchableEntitiesRequest request) => describeSearchableEntitiesAsync(request);

        public System.Threading.Tasks.Task<describeSearchableEntitiesResponse> describeSearchableEntitiesAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeOnlyEntitiesWithTabs)
        {
            var inValue = new describeSearchableEntitiesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.includeOnlyEntitiesWithTabs = includeOnlyEntitiesWithTabs;
            return ((Soap)this).describeSearchableEntitiesAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSearchScopeOrderResponse describeSearchScopeOrder(describeSearchScopeOrderRequest request)
        {
            return Channel.describeSearchScopeOrder(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSearchScopeOrderResponse Partner_Soap_describeSearchScopeOrder(describeSearchScopeOrderRequest request) => describeSearchScopeOrder(request);

        public LimitInfo[] describeSearchScopeOrder(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeRealTimeEntities, out DescribeSearchScopeOrderResult[] result)
        {
            var inValue = new describeSearchScopeOrderRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.includeRealTimeEntities = includeRealTimeEntities;
            var retVal = ((Soap)this).describeSearchScopeOrder(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSearchScopeOrderResponse> describeSearchScopeOrderAsync(describeSearchScopeOrderRequest request)
        {
            return Channel.describeSearchScopeOrderAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSearchScopeOrderResponse> Partner_Soap_describeSearchScopeOrderAsync(describeSearchScopeOrderRequest request) => describeSearchScopeOrderAsync(request);

        public System.Threading.Tasks.Task<describeSearchScopeOrderResponse> describeSearchScopeOrderAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeRealTimeEntities)
        {
            var inValue = new describeSearchScopeOrderRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.includeRealTimeEntities = includeRealTimeEntities;
            return ((Soap)this).describeSearchScopeOrderAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeCompactLayoutsResponse describeCompactLayouts(describeCompactLayoutsRequest request)
        {
            return Channel.describeCompactLayouts(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeCompactLayoutsResponse Partner_Soap_describeCompactLayouts(describeCompactLayoutsRequest request) => describeCompactLayouts(request);

        public LimitInfo[] describeCompactLayouts(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string[] recordTypeIds, out DescribeCompactLayoutsResult result)
        {
            var inValue = new describeCompactLayoutsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.recordTypeIds = recordTypeIds;
            var retVal = ((Soap)this).describeCompactLayouts(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeCompactLayoutsResponse> describeCompactLayoutsAsync(describeCompactLayoutsRequest request)
        {
            return Channel.describeCompactLayoutsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeCompactLayoutsResponse> Partner_Soap_describeCompactLayoutsAsync(describeCompactLayoutsRequest request) => describeCompactLayoutsAsync(request);

        public System.Threading.Tasks.Task<describeCompactLayoutsResponse> describeCompactLayoutsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string[] recordTypeIds)
        {
            var inValue = new describeCompactLayoutsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.recordTypeIds = recordTypeIds;
            return ((Soap)this).describeCompactLayoutsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describePathAssistantsResponse describePathAssistants(describePathAssistantsRequest request)
        {
            return Channel.describePathAssistants(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describePathAssistantsResponse Partner_Soap_describePathAssistants(describePathAssistantsRequest request) => describePathAssistants(request);

        public LimitInfo[] describePathAssistants(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string picklistValue, string[] recordTypeIds, out DescribePathAssistant[] result)
        {
            var inValue = new describePathAssistantsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.picklistValue = picklistValue;
            inValue.recordTypeIds = recordTypeIds;
            var retVal = ((Soap)this).describePathAssistants(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describePathAssistantsResponse> describePathAssistantsAsync(describePathAssistantsRequest request)
        {
            return Channel.describePathAssistantsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describePathAssistantsResponse> Partner_Soap_describePathAssistantsAsync(describePathAssistantsRequest request) => describePathAssistantsAsync(request);

        public System.Threading.Tasks.Task<describePathAssistantsResponse> describePathAssistantsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string picklistValue, string[] recordTypeIds)
        {
            var inValue = new describePathAssistantsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.picklistValue = picklistValue;
            inValue.recordTypeIds = recordTypeIds;
            return ((Soap)this).describePathAssistantsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeApprovalLayoutResponse describeApprovalLayout(describeApprovalLayoutRequest request)
        {
            return Channel.describeApprovalLayout(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeApprovalLayoutResponse Partner_Soap_describeApprovalLayout(describeApprovalLayoutRequest request) => describeApprovalLayout(request);

        public LimitInfo[] describeApprovalLayout(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string[] approvalProcessNames, out DescribeApprovalLayout[] result)
        {
            var inValue = new describeApprovalLayoutRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.approvalProcessNames = approvalProcessNames;
            var retVal = ((Soap)this).describeApprovalLayout(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeApprovalLayoutResponse> describeApprovalLayoutAsync(describeApprovalLayoutRequest request)
        {
            return Channel.describeApprovalLayoutAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeApprovalLayoutResponse> Partner_Soap_describeApprovalLayoutAsync(describeApprovalLayoutRequest request) => describeApprovalLayoutAsync(request);

        public System.Threading.Tasks.Task<describeApprovalLayoutResponse> describeApprovalLayoutAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, string[] approvalProcessNames)
        {
            var inValue = new describeApprovalLayoutRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.approvalProcessNames = approvalProcessNames;
            return ((Soap)this).describeApprovalLayoutAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSoqlListViewsResponse describeSoqlListViews(describeSoqlListViewsRequest request)
        {
            return Channel.describeSoqlListViews(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSoqlListViewsResponse Partner_Soap_describeSoqlListViews(describeSoqlListViewsRequest request) => describeSoqlListViews(request);

        public LimitInfo[] describeSoqlListViews(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DescribeSoqlListViewParams[] request, out DescribeSoqlListView[] result)
        {
            var inValue = new describeSoqlListViewsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.request = request;
            var retVal = ((Soap)this).describeSoqlListViews(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSoqlListViewsResponse> describeSoqlListViewsAsync(describeSoqlListViewsRequest request)
        {
            return Channel.describeSoqlListViewsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSoqlListViewsResponse> Partner_Soap_describeSoqlListViewsAsync(describeSoqlListViewsRequest request) => describeSoqlListViewsAsync(request);

        public System.Threading.Tasks.Task<describeSoqlListViewsResponse> describeSoqlListViewsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DescribeSoqlListViewParams[] request)
        {
            var inValue = new describeSoqlListViewsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.request = request;
            return ((Soap)this).describeSoqlListViewsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public executeListViewResponse executeListView(executeListViewRequest1 request)
        {
            return Channel.executeListView(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public executeListViewResponse Partner_Soap_executeListView(executeListViewRequest1 request) => executeListView(request);

        public LimitInfo[] executeListView(SessionHeader SessionHeader, CallOptions CallOptions, MruHeader MruHeader, ExecuteListViewRequest request, out ExecuteListViewResult result)
        {
            var inValue = new executeListViewRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.MruHeader = MruHeader;
            inValue.request = request;
            var retVal = ((Soap)this).executeListView(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<executeListViewResponse> executeListViewAsync(executeListViewRequest1 request)
        {
            return Channel.executeListViewAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<executeListViewResponse> Partner_Soap_executeListViewAsync(executeListViewRequest1 request) => executeListViewAsync(request);

        public System.Threading.Tasks.Task<executeListViewResponse> executeListViewAsync(SessionHeader SessionHeader, CallOptions CallOptions, MruHeader MruHeader, ExecuteListViewRequest request)
        {
            var inValue = new executeListViewRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.MruHeader = MruHeader;
            inValue.request = request;
            return ((Soap)this).executeListViewAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSObjectListViewsResponse describeSObjectListViews(describeSObjectListViewsRequest request)
        {
            return Channel.describeSObjectListViews(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeSObjectListViewsResponse Partner_Soap_describeSObjectListViews(describeSObjectListViewsRequest request) => describeSObjectListViews(request);

        public LimitInfo[] describeSObjectListViews(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, bool recentsOnly, listViewIsSoqlCompatible isSoqlCompatible, int limit, int offset, out DescribeSoqlListView[] result)
        {
            var inValue = new describeSObjectListViewsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.recentsOnly = recentsOnly;
            inValue.isSoqlCompatible = isSoqlCompatible;
            inValue.limit = limit;
            inValue.offset = offset;
            var retVal = ((Soap)this).describeSObjectListViews(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSObjectListViewsResponse> describeSObjectListViewsAsync(describeSObjectListViewsRequest request)
        {
            return Channel.describeSObjectListViewsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeSObjectListViewsResponse> Partner_Soap_describeSObjectListViewsAsync(describeSObjectListViewsRequest request) => describeSObjectListViewsAsync(request);

        public System.Threading.Tasks.Task<describeSObjectListViewsResponse> describeSObjectListViewsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string sObjectType, bool recentsOnly, listViewIsSoqlCompatible isSoqlCompatible, int limit, int offset)
        {
            var inValue = new describeSObjectListViewsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectType = sObjectType;
            inValue.recentsOnly = recentsOnly;
            inValue.isSoqlCompatible = isSoqlCompatible;
            inValue.limit = limit;
            inValue.offset = offset;
            return ((Soap)this).describeSObjectListViewsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeTabsResponse describeTabs(describeTabsRequest request)
        {
            return Channel.describeTabs(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeTabsResponse Partner_Soap_describeTabs(describeTabsRequest request) => describeTabs(request);

        public LimitInfo[] describeTabs(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, out DescribeTabSetResult[] result)
        {
            var inValue = new describeTabsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            var retVal = ((Soap)this).describeTabs(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeTabsResponse> describeTabsAsync(describeTabsRequest request)
        {
            return Channel.describeTabsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeTabsResponse> Partner_Soap_describeTabsAsync(describeTabsRequest request) => describeTabsAsync(request);

        public System.Threading.Tasks.Task<describeTabsResponse> describeTabsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            var inValue = new describeTabsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            return ((Soap)this).describeTabsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeAllTabsResponse describeAllTabs(describeAllTabsRequest request)
        {
            return Channel.describeAllTabs(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeAllTabsResponse Partner_Soap_describeAllTabs(describeAllTabsRequest request) => describeAllTabs(request);

        public LimitInfo[] describeAllTabs(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, out DescribeTab[] result)
        {
            var inValue = new describeAllTabsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            var retVal = ((Soap)this).describeAllTabs(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeAllTabsResponse> describeAllTabsAsync(describeAllTabsRequest request)
        {
            return Channel.describeAllTabsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeAllTabsResponse> Partner_Soap_describeAllTabsAsync(describeAllTabsRequest request) => describeAllTabsAsync(request);

        public System.Threading.Tasks.Task<describeAllTabsResponse> describeAllTabsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader)
        {
            var inValue = new describeAllTabsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            return ((Soap)this).describeAllTabsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describePrimaryCompactLayoutsResponse describePrimaryCompactLayouts(describePrimaryCompactLayoutsRequest request)
        {
            return Channel.describePrimaryCompactLayouts(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describePrimaryCompactLayoutsResponse Partner_Soap_describePrimaryCompactLayouts(describePrimaryCompactLayoutsRequest request) => describePrimaryCompactLayouts(request);

        public LimitInfo[] describePrimaryCompactLayouts(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sObjectTypes, out DescribeCompactLayout[] result)
        {
            var inValue = new describePrimaryCompactLayoutsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectTypes = sObjectTypes;
            var retVal = ((Soap)this).describePrimaryCompactLayouts(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describePrimaryCompactLayoutsResponse> describePrimaryCompactLayoutsAsync(describePrimaryCompactLayoutsRequest request)
        {
            return Channel.describePrimaryCompactLayoutsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describePrimaryCompactLayoutsResponse> Partner_Soap_describePrimaryCompactLayoutsAsync(describePrimaryCompactLayoutsRequest request) => describePrimaryCompactLayoutsAsync(request);

        public System.Threading.Tasks.Task<describePrimaryCompactLayoutsResponse> describePrimaryCompactLayoutsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string[] sObjectTypes)
        {
            var inValue = new describePrimaryCompactLayoutsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.sObjectTypes = sObjectTypes;
            return ((Soap)this).describePrimaryCompactLayoutsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public createResponse create(createRequest request)
        {
            return Channel.create(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public createResponse Partner_Soap_create(createRequest request) => create(request);

        public DebuggingInfo create(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, sObject[] sObjects, out LimitInfo[] LimitInfoHeader, out SaveResult[] result)















        {
            var inValue = new createRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.sObjects = sObjects;
            var retVal = ((Soap)this).create(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<createResponse> createAsync(createRequest request)
        {
            return Channel.createAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<createResponse> Partner_Soap_createAsync(createRequest request) => createAsync(request);

        public System.Threading.Tasks.Task<createResponse> createAsync(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, sObject[] sObjects)
        {
            var inValue = new createRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.sObjects = sObjects;
            return ((Soap)this).createAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public updateResponse update(updateRequest request)
        {
            return Channel.update(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public updateResponse Partner_Soap_update(updateRequest request) => update(request);

        public DebuggingInfo update(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, sObject[] sObjects, out LimitInfo[] LimitInfoHeader, out SaveResult[] result)
















        {
            var inValue = new updateRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.OwnerChangeOptions = OwnerChangeOptions;
            inValue.sObjects = sObjects;
            var retVal = ((Soap)this).update(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<updateResponse> updateAsync(updateRequest request)
        {
            return Channel.updateAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<updateResponse> Partner_Soap_updateAsync(updateRequest request) => updateAsync(request);

        public System.Threading.Tasks.Task<updateResponse> updateAsync(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, sObject[] sObjects)
        {
            var inValue = new updateRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.OwnerChangeOptions = OwnerChangeOptions;
            inValue.sObjects = sObjects;
            return ((Soap)this).updateAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public upsertResponse upsert(upsertRequest request)
        {
            return Channel.upsert(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public upsertResponse Partner_Soap_upsert(upsertRequest request) => upsert(request);

        public DebuggingInfo upsert(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, string externalIDFieldName, sObject[] sObjects, out LimitInfo[] LimitInfoHeader, out UpsertResult[] result)

















        {
            var inValue = new upsertRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.OwnerChangeOptions = OwnerChangeOptions;
            inValue.externalIDFieldName = externalIDFieldName;
            inValue.sObjects = sObjects;
            var retVal = ((Soap)this).upsert(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<upsertResponse> upsertAsync(upsertRequest request)
        {
            return Channel.upsertAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<upsertResponse> Partner_Soap_upsertAsync(upsertRequest request) => upsertAsync(request);

        public System.Threading.Tasks.Task<upsertResponse> upsertAsync(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, string externalIDFieldName, sObject[] sObjects)















        {
            var inValue = new upsertRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.OwnerChangeOptions = OwnerChangeOptions;
            inValue.externalIDFieldName = externalIDFieldName;
            inValue.sObjects = sObjects;
            return ((Soap)this).upsertAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public mergeResponse merge(mergeRequest1 request)
        {
            return Channel.merge(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public mergeResponse Partner_Soap_merge(mergeRequest1 request) => merge(request);

        public DebuggingInfo merge(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, MergeRequest[] request, out LimitInfo[] LimitInfoHeader, out MergeResult[] result)
        {
            var inValue = new mergeRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.request = request;
            var retVal = ((Soap)this).merge(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<mergeResponse> mergeAsync(mergeRequest1 request)
        {
            return Channel.mergeAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<mergeResponse> Partner_Soap_mergeAsync(mergeRequest1 request) => mergeAsync(request);

        public System.Threading.Tasks.Task<mergeResponse> mergeAsync(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, MergeRequest[] request)
        {
            var inValue = new mergeRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.request = request;
            return ((Soap)this).mergeAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public deleteResponse delete(deleteRequest request)
        {
            return Channel.delete(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public deleteResponse Partner_Soap_delete(deleteRequest request) => delete(request);

        public DebuggingInfo delete(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, UserTerritoryDeleteHeader UserTerritoryDeleteHeader, EmailHeader EmailHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, string[] ids, out LimitInfo[] LimitInfoHeader, out DeleteResult[] result)
        {
            var inValue = new deleteRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.UserTerritoryDeleteHeader = UserTerritoryDeleteHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.ids = ids;
            var retVal = ((Soap)this).delete(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<deleteResponse> deleteAsync(deleteRequest request)
        {
            return Channel.deleteAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<deleteResponse> Partner_Soap_deleteAsync(deleteRequest request) => deleteAsync(request);

        public System.Threading.Tasks.Task<deleteResponse> deleteAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, UserTerritoryDeleteHeader UserTerritoryDeleteHeader, EmailHeader EmailHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, string[] ids)
        {
            var inValue = new deleteRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.UserTerritoryDeleteHeader = UserTerritoryDeleteHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.ids = ids;
            return ((Soap)this).deleteAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public undeleteResponse undelete(undeleteRequest request)
        {
            return Channel.undelete(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public undeleteResponse Partner_Soap_undelete(undeleteRequest request) => undelete(request);

        public DebuggingInfo undelete(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, string[] ids, out LimitInfo[] LimitInfoHeader, out UndeleteResult[] result)
        {
            var inValue = new undeleteRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.ids = ids;
            var retVal = ((Soap)this).undelete(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<undeleteResponse> undeleteAsync(undeleteRequest request)
        {
            return Channel.undeleteAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<undeleteResponse> Partner_Soap_undeleteAsync(undeleteRequest request) => undeleteAsync(request);

        public System.Threading.Tasks.Task<undeleteResponse> undeleteAsync(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, string[] ids)
        {
            var inValue = new undeleteRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.ids = ids;
            return ((Soap)this).undeleteAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public emptyRecycleBinResponse emptyRecycleBin(emptyRecycleBinRequest request)
        {
            return Channel.emptyRecycleBin(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public emptyRecycleBinResponse Partner_Soap_emptyRecycleBin(emptyRecycleBinRequest request) => emptyRecycleBin(request);

        public LimitInfo[] emptyRecycleBin(SessionHeader SessionHeader, CallOptions CallOptions, string[] ids, out EmptyRecycleBinResult[] result)
        {
            var inValue = new emptyRecycleBinRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.ids = ids;
            var retVal = ((Soap)this).emptyRecycleBin(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<emptyRecycleBinResponse> emptyRecycleBinAsync(emptyRecycleBinRequest request)
        {
            return Channel.emptyRecycleBinAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<emptyRecycleBinResponse> Partner_Soap_emptyRecycleBinAsync(emptyRecycleBinRequest request) => emptyRecycleBinAsync(request);

        public System.Threading.Tasks.Task<emptyRecycleBinResponse> emptyRecycleBinAsync(SessionHeader SessionHeader, CallOptions CallOptions, string[] ids)
        {
            var inValue = new emptyRecycleBinRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.ids = ids;
            return ((Soap)this).emptyRecycleBinAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public retrieveResponse retrieve(retrieveRequest request)
        {
            return Channel.retrieve(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public retrieveResponse Partner_Soap_retrieve(retrieveRequest request) => retrieve(request);

        public LimitInfo[] retrieve(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, MruHeader MruHeader, PackageVersion[] PackageVersionHeader, string fieldList, string sObjectType, string[] ids, out sObject[] result)
        {
            var inValue = new retrieveRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.QueryOptions = QueryOptions;
            inValue.MruHeader = MruHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.fieldList = fieldList;
            inValue.sObjectType = sObjectType;
            inValue.ids = ids;
            var retVal = ((Soap)this).retrieve(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<retrieveResponse> retrieveAsync(retrieveRequest request)
        {
            return Channel.retrieveAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<retrieveResponse> Partner_Soap_retrieveAsync(retrieveRequest request) => retrieveAsync(request);

        public System.Threading.Tasks.Task<retrieveResponse> retrieveAsync(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, MruHeader MruHeader, PackageVersion[] PackageVersionHeader, string fieldList, string sObjectType, string[] ids)
        {
            var inValue = new retrieveRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.QueryOptions = QueryOptions;
            inValue.MruHeader = MruHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.fieldList = fieldList;
            inValue.sObjectType = sObjectType;
            inValue.ids = ids;
            return ((Soap)this).retrieveAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public processResponse process(processRequest1 request)
        {
            return Channel.process(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public processResponse Partner_Soap_process(processRequest1 request) => process(request);

        public DebuggingInfo process(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, ProcessRequest[] actions, out LimitInfo[] LimitInfoHeader, out ProcessResult[] result)
        {
            var inValue = new processRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.actions = actions;
            var retVal = ((Soap)this).process(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<processResponse> processAsync(processRequest1 request)
        {
            return Channel.processAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<processResponse> Partner_Soap_processAsync(processRequest1 request) => processAsync(request);

        public System.Threading.Tasks.Task<processResponse> processAsync(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, ProcessRequest[] actions)
        {
            var inValue = new processRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.actions = actions;
            return ((Soap)this).processAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public convertLeadResponse convertLead(convertLeadRequest request)
        {
            return Channel.convertLead(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public convertLeadResponse Partner_Soap_convertLead(convertLeadRequest request) => convertLead(request);

        public DebuggingInfo convertLead(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, LeadConvert[] leadConverts, out LimitInfo[] LimitInfoHeader, out LeadConvertResult[] result)
        {
            var inValue = new convertLeadRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.leadConverts = leadConverts;
            var retVal = ((Soap)this).convertLead(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<convertLeadResponse> convertLeadAsync(convertLeadRequest request)
        {
            return Channel.convertLeadAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<convertLeadResponse> Partner_Soap_convertLeadAsync(convertLeadRequest request) => convertLeadAsync(request);

        public System.Threading.Tasks.Task<convertLeadResponse> convertLeadAsync(SessionHeader SessionHeader, CallOptions CallOptions, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, LeadConvert[] leadConverts)
        {
            var inValue = new convertLeadRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.leadConverts = leadConverts;
            return ((Soap)this).convertLeadAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public logoutResponse logout(logoutRequest request)
        {
            return Channel.logout(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public logoutResponse Partner_Soap_logout(logoutRequest request) => logout(request);

        public LimitInfo[] logout(SessionHeader SessionHeader, CallOptions CallOptions)
        {
            var inValue = new logoutRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            var retVal = ((Soap)this).logout(inValue);
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<logoutResponse> logoutAsync(logoutRequest request)
        {
            return Channel.logoutAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<logoutResponse> Partner_Soap_logoutAsync(logoutRequest request) => logoutAsync(request);

        public System.Threading.Tasks.Task<logoutResponse> logoutAsync(SessionHeader SessionHeader, CallOptions CallOptions)
        {
            var inValue = new logoutRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            return ((Soap)this).logoutAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public invalidateSessionsResponse invalidateSessions(invalidateSessionsRequest request)
        {
            return Channel.invalidateSessions(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public invalidateSessionsResponse Partner_Soap_invalidateSessions(invalidateSessionsRequest request) => invalidateSessions(request);

        public LimitInfo[] invalidateSessions(SessionHeader SessionHeader, CallOptions CallOptions, string[] sessionIds, out InvalidateSessionsResult[] result)
        {
            var inValue = new invalidateSessionsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.sessionIds = sessionIds;
            var retVal = ((Soap)this).invalidateSessions(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<invalidateSessionsResponse> invalidateSessionsAsync(invalidateSessionsRequest request)
        {
            return Channel.invalidateSessionsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<invalidateSessionsResponse> Partner_Soap_invalidateSessionsAsync(invalidateSessionsRequest request) => invalidateSessionsAsync(request);

        public System.Threading.Tasks.Task<invalidateSessionsResponse> invalidateSessionsAsync(SessionHeader SessionHeader, CallOptions CallOptions, string[] sessionIds)
        {
            var inValue = new invalidateSessionsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.sessionIds = sessionIds;
            return ((Soap)this).invalidateSessionsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public getDeletedResponse getDeleted(getDeletedRequest request)
        {
            return Channel.getDeleted(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public getDeletedResponse Partner_Soap_getDeleted(getDeletedRequest request) => getDeleted(request);

        public LimitInfo[] getDeleted(SessionHeader SessionHeader, CallOptions CallOptions, string sObjectType, DateTime startDate, DateTime endDate, out GetDeletedResult result)
        {
            var inValue = new getDeletedRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.sObjectType = sObjectType;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            var retVal = ((Soap)this).getDeleted(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<getDeletedResponse> getDeletedAsync(getDeletedRequest request)
        {
            return Channel.getDeletedAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<getDeletedResponse> Partner_Soap_getDeletedAsync(getDeletedRequest request) => getDeletedAsync(request);

        public System.Threading.Tasks.Task<getDeletedResponse> getDeletedAsync(SessionHeader SessionHeader, CallOptions CallOptions, string sObjectType, DateTime startDate, DateTime endDate)
        {
            var inValue = new getDeletedRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.sObjectType = sObjectType;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((Soap)this).getDeletedAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public getUpdatedResponse getUpdated(getUpdatedRequest request)
        {
            return Channel.getUpdated(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public getUpdatedResponse Partner_Soap_getUpdated(getUpdatedRequest request) => getUpdated(request);

        public LimitInfo[] getUpdated(SessionHeader SessionHeader, CallOptions CallOptions, string sObjectType, DateTime startDate, DateTime endDate, out GetUpdatedResult result)
        {
            var inValue = new getUpdatedRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.sObjectType = sObjectType;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            var retVal = ((Soap)this).getUpdated(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<getUpdatedResponse> getUpdatedAsync(getUpdatedRequest request)
        {
            return Channel.getUpdatedAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<getUpdatedResponse> Partner_Soap_getUpdatedAsync(getUpdatedRequest request) => getUpdatedAsync(request);

        public System.Threading.Tasks.Task<getUpdatedResponse> getUpdatedAsync(SessionHeader SessionHeader, CallOptions CallOptions, string sObjectType, DateTime startDate, DateTime endDate)
        {
            var inValue = new getUpdatedRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.sObjectType = sObjectType;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((Soap)this).getUpdatedAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public queryResponse query(queryRequest request)
        {
            return Channel.query(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public queryResponse Partner_Soap_query(queryRequest request) => query(request);

        public LimitInfo[] query(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, MruHeader MruHeader, PackageVersion[] PackageVersionHeader, string queryString, out QueryResult result)
        {
            var inValue = new queryRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.QueryOptions = QueryOptions;
            inValue.MruHeader = MruHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.queryString = queryString;
            var retVal = ((Soap)this).query(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<queryResponse> queryAsync(queryRequest request)
        {
            return Channel.queryAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<queryResponse> Partner_Soap_queryAsync(queryRequest request) => queryAsync(request);

        public System.Threading.Tasks.Task<queryResponse> queryAsync(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, MruHeader MruHeader, PackageVersion[] PackageVersionHeader, string queryString)
        {
            var inValue = new queryRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.QueryOptions = QueryOptions;
            inValue.MruHeader = MruHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.queryString = queryString;
            return ((Soap)this).queryAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public queryAllResponse queryAll(queryAllRequest request)
        {
            return Channel.queryAll(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public queryAllResponse Partner_Soap_queryAll(queryAllRequest request) => queryAll(request);

        public LimitInfo[] queryAll(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, string queryString, out QueryResult result)
        {
            var inValue = new queryAllRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.QueryOptions = QueryOptions;
            inValue.queryString = queryString;
            var retVal = ((Soap)this).queryAll(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<queryAllResponse> queryAllAsync(queryAllRequest request)
        {
            return Channel.queryAllAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<queryAllResponse> Partner_Soap_queryAllAsync(queryAllRequest request) => queryAllAsync(request);

        public System.Threading.Tasks.Task<queryAllResponse> queryAllAsync(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, string queryString)
        {
            var inValue = new queryAllRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.QueryOptions = QueryOptions;
            inValue.queryString = queryString;
            return ((Soap)this).queryAllAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public queryMoreResponse queryMore(queryMoreRequest request)
        {
            return Channel.queryMore(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public queryMoreResponse Partner_Soap_queryMore(queryMoreRequest request) => queryMore(request);

        public LimitInfo[] queryMore(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, string queryLocator, out QueryResult result)
        {
            var inValue = new queryMoreRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.QueryOptions = QueryOptions;
            inValue.queryLocator = queryLocator;
            var retVal = ((Soap)this).queryMore(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<queryMoreResponse> queryMoreAsync(queryMoreRequest request)
        {
            return Channel.queryMoreAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<queryMoreResponse> Partner_Soap_queryMoreAsync(queryMoreRequest request) => queryMoreAsync(request);

        public System.Threading.Tasks.Task<queryMoreResponse> queryMoreAsync(SessionHeader SessionHeader, CallOptions CallOptions, QueryOptions QueryOptions, string queryLocator)
        {
            var inValue = new queryMoreRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.QueryOptions = QueryOptions;
            inValue.queryLocator = queryLocator;
            return ((Soap)this).queryMoreAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public searchResponse search(searchRequest request)
        {
            return Channel.search(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public searchResponse Partner_Soap_search(searchRequest request) => search(request);

        public LimitInfo[] search(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string searchString, out SearchResult result)
        {
            var inValue = new searchRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.searchString = searchString;
            var retVal = ((Soap)this).search(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<searchResponse> searchAsync(searchRequest request)
        {
            return Channel.searchAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<searchResponse> Partner_Soap_searchAsync(searchRequest request) => searchAsync(request);

        public System.Threading.Tasks.Task<searchResponse> searchAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, string searchString)
        {
            var inValue = new searchRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.searchString = searchString;
            return ((Soap)this).searchAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public getServerTimestampResponse getServerTimestamp(getServerTimestampRequest request)
        {
            return Channel.getServerTimestamp(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public getServerTimestampResponse Partner_Soap_getServerTimestamp(getServerTimestampRequest request) => getServerTimestamp(request);

        public LimitInfo[] getServerTimestamp(SessionHeader SessionHeader, CallOptions CallOptions, out GetServerTimestampResult result)
        {
            var inValue = new getServerTimestampRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            var retVal = ((Soap)this).getServerTimestamp(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<getServerTimestampResponse> getServerTimestampAsync(getServerTimestampRequest request)
        {
            return Channel.getServerTimestampAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<getServerTimestampResponse> Partner_Soap_getServerTimestampAsync(getServerTimestampRequest request) => getServerTimestampAsync(request);

        public System.Threading.Tasks.Task<getServerTimestampResponse> getServerTimestampAsync(SessionHeader SessionHeader, CallOptions CallOptions)
        {
            var inValue = new getServerTimestampRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            return ((Soap)this).getServerTimestampAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public setPasswordResponse setPassword(setPasswordRequest request)
        {
            return Channel.setPassword(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public setPasswordResponse Partner_Soap_setPassword(setPasswordRequest request) => setPassword(request);

        public LimitInfo[] setPassword(SessionHeader SessionHeader, CallOptions CallOptions, string userId, string password, out SetPasswordResult result)
        {
            var inValue = new setPasswordRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.userId = userId;
            inValue.password = password;
            var retVal = ((Soap)this).setPassword(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<setPasswordResponse> setPasswordAsync(setPasswordRequest request)
        {
            return Channel.setPasswordAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<setPasswordResponse> Partner_Soap_setPasswordAsync(setPasswordRequest request) => setPasswordAsync(request);

        public System.Threading.Tasks.Task<setPasswordResponse> setPasswordAsync(SessionHeader SessionHeader, CallOptions CallOptions, string userId, string password)
        {
            var inValue = new setPasswordRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.userId = userId;
            inValue.password = password;
            return ((Soap)this).setPasswordAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public changeOwnPasswordResponse changeOwnPassword(changeOwnPasswordRequest request)
        {
            return Channel.changeOwnPassword(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public changeOwnPasswordResponse Partner_Soap_changeOwnPassword(changeOwnPasswordRequest request) => changeOwnPassword(request);

        public LimitInfo[] changeOwnPassword(SessionHeader SessionHeader, CallOptions CallOptions, string oldPassword, string newPassword, out ChangeOwnPasswordResult result)
        {
            var inValue = new changeOwnPasswordRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.oldPassword = oldPassword;
            inValue.newPassword = newPassword;
            var retVal = ((Soap)this).changeOwnPassword(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<changeOwnPasswordResponse> changeOwnPasswordAsync(changeOwnPasswordRequest request)
        {
            return Channel.changeOwnPasswordAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<changeOwnPasswordResponse> Partner_Soap_changeOwnPasswordAsync(changeOwnPasswordRequest request) => changeOwnPasswordAsync(request);

        public System.Threading.Tasks.Task<changeOwnPasswordResponse> changeOwnPasswordAsync(SessionHeader SessionHeader, CallOptions CallOptions, string oldPassword, string newPassword)
        {
            var inValue = new changeOwnPasswordRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.oldPassword = oldPassword;
            inValue.newPassword = newPassword;
            return ((Soap)this).changeOwnPasswordAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public resetPasswordResponse resetPassword(resetPasswordRequest request)
        {
            return Channel.resetPassword(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public resetPasswordResponse Partner_Soap_resetPassword(resetPasswordRequest request) => resetPassword(request);

        public LimitInfo[] resetPassword(SessionHeader SessionHeader, CallOptions CallOptions, EmailHeader EmailHeader, string userId, out ResetPasswordResult result)
        {
            var inValue = new resetPasswordRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.EmailHeader = EmailHeader;
            inValue.userId = userId;
            var retVal = ((Soap)this).resetPassword(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<resetPasswordResponse> resetPasswordAsync(resetPasswordRequest request)
        {
            return Channel.resetPasswordAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<resetPasswordResponse> Partner_Soap_resetPasswordAsync(resetPasswordRequest request) => resetPasswordAsync(request);

        public System.Threading.Tasks.Task<resetPasswordResponse> resetPasswordAsync(SessionHeader SessionHeader, CallOptions CallOptions, EmailHeader EmailHeader, string userId)
        {
            var inValue = new resetPasswordRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.EmailHeader = EmailHeader;
            inValue.userId = userId;
            return ((Soap)this).resetPasswordAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public getUserInfoResponse getUserInfo(getUserInfoRequest request)
        {
            return Channel.getUserInfo(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public getUserInfoResponse Partner_Soap_getUserInfo(getUserInfoRequest request) => getUserInfo(request);

        public LimitInfo[] getUserInfo(SessionHeader SessionHeader, CallOptions CallOptions, out GetUserInfoResult result)
        {
            var inValue = new getUserInfoRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            var retVal = ((Soap)this).getUserInfo(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<getUserInfoResponse> getUserInfoAsync(getUserInfoRequest request)
        {
            return Channel.getUserInfoAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<getUserInfoResponse> Partner_Soap_getUserInfoAsync(getUserInfoRequest request) => getUserInfoAsync(request);

        public System.Threading.Tasks.Task<getUserInfoResponse> getUserInfoAsync(SessionHeader SessionHeader, CallOptions CallOptions)
        {
            var inValue = new getUserInfoRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            return ((Soap)this).getUserInfoAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public deleteByExampleResponse deleteByExample(deleteByExampleRequest request)
        {
            return Channel.deleteByExample(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public deleteByExampleResponse Partner_Soap_deleteByExample(deleteByExampleRequest request) => deleteByExample(request);

        public DebuggingInfo deleteByExample(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, UserTerritoryDeleteHeader UserTerritoryDeleteHeader, EmailHeader EmailHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, sObject[] sObjects, out LimitInfo[] LimitInfoHeader, out DeleteByExampleResult[] result)
        {
            var inValue = new deleteByExampleRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.UserTerritoryDeleteHeader = UserTerritoryDeleteHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.sObjects = sObjects;
            var retVal = ((Soap)this).deleteByExample(inValue);
            LimitInfoHeader = retVal.LimitInfoHeader;
            result = retVal.result;
            return retVal.DebuggingInfo;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<deleteByExampleResponse> deleteByExampleAsync(deleteByExampleRequest request)
        {
            return Channel.deleteByExampleAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<deleteByExampleResponse> Partner_Soap_deleteByExampleAsync(deleteByExampleRequest request) => deleteByExampleAsync(request);

        public System.Threading.Tasks.Task<deleteByExampleResponse> deleteByExampleAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, UserTerritoryDeleteHeader UserTerritoryDeleteHeader, EmailHeader EmailHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, sObject[] sObjects)
        {
            var inValue = new deleteByExampleRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.UserTerritoryDeleteHeader = UserTerritoryDeleteHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.sObjects = sObjects;
            return ((Soap)this).deleteByExampleAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public sendEmailMessageResponse sendEmailMessage(sendEmailMessageRequest request)
        {
            return Channel.sendEmailMessage(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public sendEmailMessageResponse Partner_Soap_sendEmailMessage(sendEmailMessageRequest request) => sendEmailMessage(request);

        public LimitInfo[] sendEmailMessage(SessionHeader SessionHeader, CallOptions CallOptions, string[] ids, out SendEmailResult[] result)
        {
            var inValue = new sendEmailMessageRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.ids = ids;
            var retVal = ((Soap)this).sendEmailMessage(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<sendEmailMessageResponse> sendEmailMessageAsync(sendEmailMessageRequest request)
        {
            return Channel.sendEmailMessageAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<sendEmailMessageResponse> Partner_Soap_sendEmailMessageAsync(sendEmailMessageRequest request) => sendEmailMessageAsync(request);

        public System.Threading.Tasks.Task<sendEmailMessageResponse> sendEmailMessageAsync(SessionHeader SessionHeader, CallOptions CallOptions, string[] ids)
        {
            var inValue = new sendEmailMessageRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.ids = ids;
            return ((Soap)this).sendEmailMessageAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public sendEmailResponse sendEmail(sendEmailRequest request)
        {
            return Channel.sendEmail(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public sendEmailResponse Partner_Soap_sendEmail(sendEmailRequest request) => sendEmail(request);

        public LimitInfo[] sendEmail(SessionHeader SessionHeader, CallOptions CallOptions, Email[] messages, out SendEmailResult[] result)
        {
            var inValue = new sendEmailRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.messages = messages;
            var retVal = ((Soap)this).sendEmail(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<sendEmailResponse> sendEmailAsync(sendEmailRequest request)
        {
            return Channel.sendEmailAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<sendEmailResponse> Partner_Soap_sendEmailAsync(sendEmailRequest request) => sendEmailAsync(request);

        public System.Threading.Tasks.Task<sendEmailResponse> sendEmailAsync(SessionHeader SessionHeader, CallOptions CallOptions, Email[] messages)
        {
            var inValue = new sendEmailRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.messages = messages;
            return ((Soap)this).sendEmailAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public renderEmailTemplateResponse renderEmailTemplate(renderEmailTemplateRequest1 request)
        {
            return Channel.renderEmailTemplate(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public renderEmailTemplateResponse Partner_Soap_renderEmailTemplate(renderEmailTemplateRequest1 request) => renderEmailTemplate(request);

        public LimitInfo[] renderEmailTemplate(SessionHeader SessionHeader, CallOptions CallOptions, RenderEmailTemplateRequest[] renderRequests, out RenderEmailTemplateResult[] result)
        {
            var inValue = new renderEmailTemplateRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.renderRequests = renderRequests;
            var retVal = ((Soap)this).renderEmailTemplate(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<renderEmailTemplateResponse> renderEmailTemplateAsync(renderEmailTemplateRequest1 request)
        {
            return Channel.renderEmailTemplateAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<renderEmailTemplateResponse> Partner_Soap_renderEmailTemplateAsync(renderEmailTemplateRequest1 request) => renderEmailTemplateAsync(request);

        public System.Threading.Tasks.Task<renderEmailTemplateResponse> renderEmailTemplateAsync(SessionHeader SessionHeader, CallOptions CallOptions, RenderEmailTemplateRequest[] renderRequests)
        {
            var inValue = new renderEmailTemplateRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.renderRequests = renderRequests;
            return ((Soap)this).renderEmailTemplateAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public renderStoredEmailTemplateResponse renderStoredEmailTemplate(renderStoredEmailTemplateRequest1 request)
        {
            return Channel.renderStoredEmailTemplate(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public renderStoredEmailTemplateResponse Partner_Soap_renderStoredEmailTemplate(renderStoredEmailTemplateRequest1 request) => renderStoredEmailTemplate(request);

        public LimitInfo[] renderStoredEmailTemplate(SessionHeader SessionHeader, CallOptions CallOptions, RenderStoredEmailTemplateRequest request, out RenderStoredEmailTemplateResult result)
        {
            var inValue = new renderStoredEmailTemplateRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.request = request;
            var retVal = ((Soap)this).renderStoredEmailTemplate(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<renderStoredEmailTemplateResponse> renderStoredEmailTemplateAsync(renderStoredEmailTemplateRequest1 request)
        {
            return Channel.renderStoredEmailTemplateAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<renderStoredEmailTemplateResponse> Partner_Soap_renderStoredEmailTemplateAsync(renderStoredEmailTemplateRequest1 request) => renderStoredEmailTemplateAsync(request);

        public System.Threading.Tasks.Task<renderStoredEmailTemplateResponse> renderStoredEmailTemplateAsync(SessionHeader SessionHeader, CallOptions CallOptions, RenderStoredEmailTemplateRequest request)
        {
            var inValue = new renderStoredEmailTemplateRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.request = request;
            return ((Soap)this).renderStoredEmailTemplateAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public performQuickActionsResponse performQuickActions(performQuickActionsRequest request)
        {
            return Channel.performQuickActions(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public performQuickActionsResponse Partner_Soap_performQuickActions(performQuickActionsRequest request) => performQuickActions(request);

        public LimitInfo[] performQuickActions(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, PerformQuickActionRequest[] quickActions, out PerformQuickActionResult[] result)















        {
            var inValue = new performQuickActionsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.OwnerChangeOptions = OwnerChangeOptions;
            inValue.quickActions = quickActions;
            var retVal = ((Soap)this).performQuickActions(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<performQuickActionsResponse> performQuickActionsAsync(performQuickActionsRequest request)
        {
            return Channel.performQuickActionsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<performQuickActionsResponse> Partner_Soap_performQuickActionsAsync(performQuickActionsRequest request) => performQuickActionsAsync(request);

        public System.Threading.Tasks.Task<performQuickActionsResponse> performQuickActionsAsync(SessionHeader SessionHeader, CallOptions CallOptions, AssignmentRuleHeader AssignmentRuleHeader, MruHeader MruHeader, AllowFieldTruncationHeader AllowFieldTruncationHeader, DisableFeedTrackingHeader DisableFeedTrackingHeader, StreamingEnabledHeader StreamingEnabledHeader, AllOrNoneHeader AllOrNoneHeader, DuplicateRuleHeader DuplicateRuleHeader, LocaleOptions LocaleOptions, DebuggingHeader DebuggingHeader, PackageVersion[] PackageVersionHeader, EmailHeader EmailHeader, OwnerChangeOption[] OwnerChangeOptions, PerformQuickActionRequest[] quickActions)
        {
            var inValue = new performQuickActionsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AssignmentRuleHeader = AssignmentRuleHeader;
            inValue.MruHeader = MruHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.StreamingEnabledHeader = StreamingEnabledHeader;
            inValue.AllOrNoneHeader = AllOrNoneHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.EmailHeader = EmailHeader;
            inValue.OwnerChangeOptions = OwnerChangeOptions;
            inValue.quickActions = quickActions;
            return ((Soap)this).performQuickActionsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeQuickActionsResponse describeQuickActions(describeQuickActionsRequest request)
        {
            return Channel.describeQuickActions(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeQuickActionsResponse Partner_Soap_describeQuickActions(describeQuickActionsRequest request) => describeQuickActions(request);

        public LimitInfo[] describeQuickActions(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActions, out DescribeQuickActionResult[] result)
        {
            var inValue = new describeQuickActionsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.quickActions = quickActions;
            var retVal = ((Soap)this).describeQuickActions(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeQuickActionsResponse> describeQuickActionsAsync(describeQuickActionsRequest request)
        {
            return Channel.describeQuickActionsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeQuickActionsResponse> Partner_Soap_describeQuickActionsAsync(describeQuickActionsRequest request) => describeQuickActionsAsync(request);

        public System.Threading.Tasks.Task<describeQuickActionsResponse> describeQuickActionsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActions)
        {
            var inValue = new describeQuickActionsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.quickActions = quickActions;
            return ((Soap)this).describeQuickActionsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeQuickActionsForRecordTypeResponse describeQuickActionsForRecordType(describeQuickActionsForRecordTypeRequest request)
        {
            return Channel.describeQuickActionsForRecordType(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeQuickActionsForRecordTypeResponse Partner_Soap_describeQuickActionsForRecordType(describeQuickActionsForRecordTypeRequest request) => describeQuickActionsForRecordType(request);

        public LimitInfo[] describeQuickActionsForRecordType(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActions, string recordTypeId, out DescribeQuickActionResult[] result)
        {
            var inValue = new describeQuickActionsForRecordTypeRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.quickActions = quickActions;
            inValue.recordTypeId = recordTypeId;
            var retVal = ((Soap)this).describeQuickActionsForRecordType(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeQuickActionsForRecordTypeResponse> describeQuickActionsForRecordTypeAsync(describeQuickActionsForRecordTypeRequest request)
        {
            return Channel.describeQuickActionsForRecordTypeAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeQuickActionsForRecordTypeResponse> Partner_Soap_describeQuickActionsForRecordTypeAsync(describeQuickActionsForRecordTypeRequest request) => describeQuickActionsForRecordTypeAsync(request);

        public System.Threading.Tasks.Task<describeQuickActionsForRecordTypeResponse> describeQuickActionsForRecordTypeAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActions, string recordTypeId)
        {
            var inValue = new describeQuickActionsForRecordTypeRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.quickActions = quickActions;
            inValue.recordTypeId = recordTypeId;
            return ((Soap)this).describeQuickActionsForRecordTypeAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeAvailableQuickActionsResponse describeAvailableQuickActions(describeAvailableQuickActionsRequest request)
        {
            return Channel.describeAvailableQuickActions(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeAvailableQuickActionsResponse Partner_Soap_describeAvailableQuickActions(describeAvailableQuickActionsRequest request) => describeAvailableQuickActions(request);

        public LimitInfo[] describeAvailableQuickActions(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string contextType, out DescribeAvailableQuickActionResult[] result)
        {
            var inValue = new describeAvailableQuickActionsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.contextType = contextType;
            var retVal = ((Soap)this).describeAvailableQuickActions(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeAvailableQuickActionsResponse> describeAvailableQuickActionsAsync(describeAvailableQuickActionsRequest request)
        {
            return Channel.describeAvailableQuickActionsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeAvailableQuickActionsResponse> Partner_Soap_describeAvailableQuickActionsAsync(describeAvailableQuickActionsRequest request) => describeAvailableQuickActionsAsync(request);

        public System.Threading.Tasks.Task<describeAvailableQuickActionsResponse> describeAvailableQuickActionsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string contextType)
        {
            var inValue = new describeAvailableQuickActionsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.contextType = contextType;
            return ((Soap)this).describeAvailableQuickActionsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public retrieveQuickActionTemplatesResponse retrieveQuickActionTemplates(retrieveQuickActionTemplatesRequest request)
        {
            return Channel.retrieveQuickActionTemplates(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public retrieveQuickActionTemplatesResponse Partner_Soap_retrieveQuickActionTemplates(retrieveQuickActionTemplatesRequest request) => retrieveQuickActionTemplates(request);

        public LimitInfo[] retrieveQuickActionTemplates(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActionNames, string contextId, out QuickActionTemplateResult[] result)
        {
            var inValue = new retrieveQuickActionTemplatesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.quickActionNames = quickActionNames;
            inValue.contextId = contextId;
            var retVal = ((Soap)this).retrieveQuickActionTemplates(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<retrieveQuickActionTemplatesResponse> retrieveQuickActionTemplatesAsync(retrieveQuickActionTemplatesRequest request)
        {
            return Channel.retrieveQuickActionTemplatesAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<retrieveQuickActionTemplatesResponse> Partner_Soap_retrieveQuickActionTemplatesAsync(retrieveQuickActionTemplatesRequest request) => retrieveQuickActionTemplatesAsync(request);

        public System.Threading.Tasks.Task<retrieveQuickActionTemplatesResponse> retrieveQuickActionTemplatesAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] quickActionNames, string contextId)
        {
            var inValue = new retrieveQuickActionTemplatesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.quickActionNames = quickActionNames;
            inValue.contextId = contextId;
            return ((Soap)this).retrieveQuickActionTemplatesAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public retrieveMassQuickActionTemplatesResponse retrieveMassQuickActionTemplates(retrieveMassQuickActionTemplatesRequest request)
        {
            return Channel.retrieveMassQuickActionTemplates(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public retrieveMassQuickActionTemplatesResponse Partner_Soap_retrieveMassQuickActionTemplates(retrieveMassQuickActionTemplatesRequest request) => retrieveMassQuickActionTemplates(request);

        public LimitInfo[] retrieveMassQuickActionTemplates(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string quickActionName, string[] contextIds, out QuickActionTemplateResult[] result)
        {
            var inValue = new retrieveMassQuickActionTemplatesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.quickActionName = quickActionName;
            inValue.contextIds = contextIds;
            var retVal = ((Soap)this).retrieveMassQuickActionTemplates(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<retrieveMassQuickActionTemplatesResponse> retrieveMassQuickActionTemplatesAsync(retrieveMassQuickActionTemplatesRequest request)
        {
            return Channel.retrieveMassQuickActionTemplatesAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<retrieveMassQuickActionTemplatesResponse> Partner_Soap_retrieveMassQuickActionTemplatesAsync(retrieveMassQuickActionTemplatesRequest request) => retrieveMassQuickActionTemplatesAsync(request);

        public System.Threading.Tasks.Task<retrieveMassQuickActionTemplatesResponse> retrieveMassQuickActionTemplatesAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string quickActionName, string[] contextIds)
        {
            var inValue = new retrieveMassQuickActionTemplatesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.quickActionName = quickActionName;
            inValue.contextIds = contextIds;
            return ((Soap)this).retrieveMassQuickActionTemplatesAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeVisualForceResponse describeVisualForce(describeVisualForceRequest request)
        {
            return Channel.describeVisualForce(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeVisualForceResponse Partner_Soap_describeVisualForce(describeVisualForceRequest request) => describeVisualForce(request);

        public LimitInfo[] describeVisualForce(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeAllDetails, string namespacePrefix, out DescribeVisualForceResult result)
        {
            var inValue = new describeVisualForceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.includeAllDetails = includeAllDetails;
            inValue.namespacePrefix = namespacePrefix;
            var retVal = ((Soap)this).describeVisualForce(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeVisualForceResponse> describeVisualForceAsync(describeVisualForceRequest request)
        {
            return Channel.describeVisualForceAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeVisualForceResponse> Partner_Soap_describeVisualForceAsync(describeVisualForceRequest request) => describeVisualForceAsync(request);

        public System.Threading.Tasks.Task<describeVisualForceResponse> describeVisualForceAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, bool includeAllDetails, string namespacePrefix)
        {
            var inValue = new describeVisualForceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.includeAllDetails = includeAllDetails;
            inValue.namespacePrefix = namespacePrefix;
            return ((Soap)this).describeVisualForceAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public findDuplicatesResponse findDuplicates(findDuplicatesRequest request)
        {
            return Channel.findDuplicates(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public findDuplicatesResponse Partner_Soap_findDuplicates(findDuplicatesRequest request) => findDuplicates(request);

        public LimitInfo[] findDuplicates(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DuplicateRuleHeader DuplicateRuleHeader, sObject[] sObjects, out FindDuplicatesResult[] result)
        {
            var inValue = new findDuplicatesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.sObjects = sObjects;
            var retVal = ((Soap)this).findDuplicates(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<findDuplicatesResponse> findDuplicatesAsync(findDuplicatesRequest request)
        {
            return Channel.findDuplicatesAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<findDuplicatesResponse> Partner_Soap_findDuplicatesAsync(findDuplicatesRequest request) => findDuplicatesAsync(request);

        public System.Threading.Tasks.Task<findDuplicatesResponse> findDuplicatesAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DuplicateRuleHeader DuplicateRuleHeader, sObject[] sObjects)
        {
            var inValue = new findDuplicatesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.sObjects = sObjects;
            return ((Soap)this).findDuplicatesAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public findDuplicatesByIdsResponse findDuplicatesByIds(findDuplicatesByIdsRequest request)
        {
            return Channel.findDuplicatesByIds(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public findDuplicatesByIdsResponse Partner_Soap_findDuplicatesByIds(findDuplicatesByIdsRequest request) => findDuplicatesByIds(request);

        public LimitInfo[] findDuplicatesByIds(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DuplicateRuleHeader DuplicateRuleHeader, string[] ids, out FindDuplicatesResult[] result)
        {
            var inValue = new findDuplicatesByIdsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.ids = ids;
            var retVal = ((Soap)this).findDuplicatesByIds(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<findDuplicatesByIdsResponse> findDuplicatesByIdsAsync(findDuplicatesByIdsRequest request)
        {
            return Channel.findDuplicatesByIdsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<findDuplicatesByIdsResponse> Partner_Soap_findDuplicatesByIdsAsync(findDuplicatesByIdsRequest request) => findDuplicatesByIdsAsync(request);

        public System.Threading.Tasks.Task<findDuplicatesByIdsResponse> findDuplicatesByIdsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, DuplicateRuleHeader DuplicateRuleHeader, string[] ids)
        {
            var inValue = new findDuplicatesByIdsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.DuplicateRuleHeader = DuplicateRuleHeader;
            inValue.ids = ids;
            return ((Soap)this).findDuplicatesByIdsAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeNounsResponse describeNouns(describeNounsRequest request)
        {
            return Channel.describeNouns(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public describeNounsResponse Partner_Soap_describeNouns(describeNounsRequest request) => describeNouns(request);

        public LimitInfo[] describeNouns(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] nouns, bool onlyRenamed, bool includeFields, out DescribeNounResult[] result)
        {
            var inValue = new describeNounsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.nouns = nouns;
            inValue.onlyRenamed = onlyRenamed;
            inValue.includeFields = includeFields;
            var retVal = ((Soap)this).describeNouns(inValue);
            result = retVal.result;
            return retVal.LimitInfoHeader;
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeNounsResponse> describeNounsAsync(describeNounsRequest request)
        {
            return Channel.describeNounsAsync(request);
        }

        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Threading.Tasks.Task<describeNounsResponse> Partner_Soap_describeNounsAsync(describeNounsRequest request) => describeNounsAsync(request);

        public System.Threading.Tasks.Task<describeNounsResponse> describeNounsAsync(SessionHeader SessionHeader, CallOptions CallOptions, PackageVersion[] PackageVersionHeader, LocaleOptions LocaleOptions, string[] nouns, bool onlyRenamed, bool includeFields)
        {
            var inValue = new describeNounsRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.LocaleOptions = LocaleOptions;
            inValue.nouns = nouns;
            inValue.onlyRenamed = onlyRenamed;
            inValue.includeFields = includeFields;
            return ((Soap)this).describeNounsAsync(inValue);
        }
    }
}